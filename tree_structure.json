{
  ".github": {
    "workflows": {
      "main.yml": {},
      "main.yml.test": {}
    }
  },
  ".gitignore": {},
  "DNA": {
    "GATK_germline_variant": {
      "GATK_germline_variant.ows": {},
      "README.md": {},
      "images": {
        "image1.png": {},
        "image10.png": {},
        "image11.png": {},
        "image12.png": {},
        "image13.png": {},
        "image14.png": {},
        "image2.png": {},
        "image3.png": {},
        "image4.png": {},
        "image5.png": {},
        "image6.png": {},
        "image7.png": {},
        "image8.png": {},
        "image9.png": {}
      },
      "widgets": {
        "GATK_germline_variant": {
          "MarkDuplicates": {
            "Dockerfiles": {
              "Dockerfile": {},
              "mark_dupes.sh": {}
            },
            "MarkDuplicates.attrs": {},
            "MarkDuplicates.json": {},
            "MarkDuplicates.py": {},
            "MarkDuplicates.states": {},
            "icon": {
              "gatk-mark-dupes.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "archive_delete": {
            "Dockerfiles": {
              "Dockerfile": {},
              "archive-delete.sh": {}
            },
            "archive_delete.attrs": {},
            "archive_delete.json": {},
            "archive_delete.py": {},
            "archive_delete.states": {},
            "icon": {
              "archive-delete.png": {}
            }
          },
          "baserecalibrate": {
            "Dockerfiles": {
              "Dockerfile": {},
              "realign.sh": {},
              "recalibrate.sh": {},
              "runGenomicsDBImport.sh": {},
              "runGenotypeGVCFs.sh": {},
              "runHC.sh": {}
            },
            "baserecalibrate.attrs": {},
            "baserecalibrate.json": {},
            "baserecalibrate.py": {},
            "baserecalibrate.states": {},
            "icon": {
              "gatk-bsqr.png": {}
            }
          },
          "biobambam2": {
            "Dockerfiles": {
              "Dockerfile": {},
              "bamtofastq.sh": {}
            },
            "biobambam2.attrs": {},
            "biobambam2.json": {},
            "biobambam2.py": {},
            "biobambam2.states": {},
            "icon": {
              "biobambam.png": {}
            }
          },
          "bwa_index": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_bwa.sh": {},
              "run_bwa_index.sh": {}
            },
            "bwa_index.attrs": {},
            "bwa_index.json": {},
            "bwa_index.py": {},
            "bwa_index.states": {},
            "icon": {
              "bwasamsort.png": {}
            }
          },
          "bwa_mem": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_bwa.sh": {},
              "run_bwa_index.sh": {}
            },
            "bwa_mem.attrs": {},
            "bwa_mem.json": {},
            "bwa_mem.py": {},
            "bwa_mem.states": {},
            "icon": {
              "bwasamsort.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fastqc": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "fastqc.attrs": {},
            "fastqc.json": {},
            "fastqc.py": {},
            "fastqc.states": {},
            "icon": {
              "fastqc_icon_100.png": {}
            }
          },
          "gatk_HC": {
            "Dockerfiles": {
              "Dockerfile": {},
              "realign.sh": {},
              "recalibrate.sh": {},
              "runGenomicsDBImport.sh": {},
              "runGenotypeGVCFs.sh": {},
              "runHC.sh": {}
            },
            "gatk_HC.attrs": {},
            "gatk_HC.json": {},
            "gatk_HC.py": {},
            "gatk_HC.states": {},
            "icon": {
              "gatk-hc.png": {}
            }
          },
          "gatk_db_import": {
            "Dockerfiles": {
              "Dockerfile": {},
              "realign.sh": {},
              "recalibrate.sh": {},
              "runGenomicsDBImport.sh": {},
              "runGenotypeGVCFs.sh": {},
              "runHC.sh": {}
            },
            "gatk_db_import.attrs": {},
            "gatk_db_import.json": {},
            "gatk_db_import.py": {},
            "gatk_db_import.states": {},
            "icon": {
              "gatk-db-import.png": {}
            }
          },
          "gatk_genotypeGVCFs": {
            "Dockerfiles": {
              "Dockerfile": {},
              "realign.sh": {},
              "recalibrate.sh": {},
              "runGenomicsDBImport.sh": {},
              "runGenotypeGVCFs.sh": {},
              "runHC.sh": {}
            },
            "gatk_genotypeGVCFs.attrs": {},
            "gatk_genotypeGVCFs.json": {},
            "gatk_genotypeGVCFs.py": {},
            "gatk_genotypeGVCFs.states": {},
            "icon": {
              "gatk-genotype-gvcf.png": {}
            }
          },
          "gatk_genotype_posteriors": {
            "Dockerfiles": {
              "Dockerfile": {},
              "realign.sh": {},
              "recalibrate.sh": {},
              "runGenomicsDBImport.sh": {},
              "runGenotypeGVCFs.sh": {},
              "runHC.sh": {}
            },
            "gatk_genotype_posteriors.attrs": {},
            "gatk_genotype_posteriors.json": {},
            "gatk_genotype_posteriors.py": {},
            "gatk_genotype_posteriors.states": {},
            "icon": {
              "gatk-genotypePosteriors.png": {}
            }
          },
          "gatk_vqsr": {
            "Dockerfiles": {
              "Dockerfile": {},
              "realign.sh": {},
              "recalibrate.sh": {},
              "runGenomicsDBImport.sh": {},
              "runGenotypeGVCFs.sh": {},
              "runHC.sh": {}
            },
            "gatk_vqsr.attrs": {},
            "gatk_vqsr.json": {},
            "gatk_vqsr.py": {},
            "gatk_vqsr.states": {},
            "icon": {
              "gatk-vqsr.png": {}
            }
          },
          "gcloud_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "gcloud_download.attrs": {},
            "gcloud_download.json": {},
            "gcloud_download.py": {},
            "gcloud_download.states": {},
            "icon": {
              "gcloud_download.png": {}
            }
          },
          "gen3_download": {
            "Dockerfiles": {
              "2021.03.tar.gz": {},
              "Dockerfile": {},
              "runG3Download.sh": {}
            },
            "gen3_download.attrs": {},
            "gen3_download.json": {},
            "gen3_download.py": {},
            "gen3_download.states": {},
            "icon": {
              "gen3-download.png": {}
            }
          },
          "icon": {
            "double-helix.png": {}
          },
          "igv": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start-igv.sh": {}
            },
            "icon": {
              "igv.png": {}
            },
            "igv.attrs": {},
            "igv.json": {},
            "igv.py": {},
            "igv.states": {}
          }
        }
      }
    },
    "GDC_dna_seq": {
      "GDC_dna_seq.ows": {},
      "README.md": {},
      "images": {
        "image1.png": {},
        "image10.png": {},
        "image11.png": {},
        "image12.png": {},
        "image13.png": {},
        "image14.png": {},
        "image15.png": {},
        "image16.png": {},
        "image17.png": {},
        "image18.png": {},
        "image19.png": {},
        "image2.png": {},
        "image20.png": {},
        "image21.png": {},
        "image22.png": {},
        "image3.png": {},
        "image4.png": {},
        "image5.png": {},
        "image6.png": {},
        "image7.png": {},
        "image8.png": {},
        "image9.png": {}
      },
      "widgets": {
        "GDC_dna_seq": {
          "MarkDuplicates": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "MarkDuplicates.attrs": {},
            "MarkDuplicates.json": {},
            "MarkDuplicates.py": {},
            "MarkDuplicates.states": {},
            "icon": {
              "gatk-mark-dupes.png": {}
            }
          },
          "MuTect2": {
            "MuTect2.attrs": {},
            "MuTect2.json": {},
            "MuTect2.py": {},
            "MuTect2.states": {},
            "icon": {
              "mutect2.png": {}
            }
          },
          "Pindel": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "Pindel.attrs": {},
            "Pindel.json": {},
            "Pindel.py": {},
            "Pindel.states": {},
            "icon": {
              "pindel.png": {}
            }
          },
          "SomaticSniper": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_sniper.sh": {}
            },
            "SomaticSniper.attrs": {},
            "SomaticSniper.json": {},
            "SomaticSniper.py": {},
            "SomaticSniper.states": {},
            "icon": {
              "somatic_sniper.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "archive_delete": {
            "Dockerfiles": {
              "Dockerfile": {},
              "archive-delete.sh": {}
            },
            "archive_delete.attrs": {},
            "archive_delete.json": {},
            "archive_delete.py": {},
            "archive_delete.states": {},
            "icon": {
              "archive-delete.png": {}
            }
          },
          "baserecalibrate": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "baserecalibrate.attrs": {},
            "baserecalibrate.json": {},
            "baserecalibrate.py": {},
            "baserecalibrate.states": {},
            "icon": {
              "gatk-bsqr.png": {}
            }
          },
          "biobambam2": {
            "Dockerfiles": {
              "Dockerfile": {},
              "bamtofastq.sh": {}
            },
            "biobambam2.attrs": {},
            "biobambam2.json": {},
            "biobambam2.py": {},
            "biobambam2.states": {},
            "icon": {
              "biobambam.png": {}
            }
          },
          "bwa_mem": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_bwa.sh": {},
              "run_bwa_index.sh": {}
            },
            "bwa_mem.attrs": {},
            "bwa_mem.json": {},
            "bwa_mem.py": {},
            "bwa_mem.states": {},
            "icon": {
              "bwasamsort.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fastqc": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "fastqc.attrs": {},
            "fastqc.json": {},
            "fastqc.py": {},
            "fastqc.states": {},
            "icon": {
              "fastqc_icon_100.png": {}
            }
          },
          "gcloud_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "gcloud_download.attrs": {},
            "gcloud_download.json": {},
            "gcloud_download.py": {},
            "gcloud_download.states": {},
            "icon": {
              "gcloud_download.png": {}
            }
          },
          "gen3_download": {
            "Dockerfiles": {
              "2021.03.tar.gz": {},
              "Dockerfile": {},
              "runG3Download.sh": {}
            },
            "gen3_download.attrs": {},
            "gen3_download.json": {},
            "gen3_download.py": {},
            "gen3_download.states": {},
            "icon": {
              "gen3-download.png": {}
            }
          },
          "icon": {
            "double-helix.png": {}
          },
          "igv": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start-igv.sh": {}
            },
            "icon": {
              "igv.png": {}
            },
            "igv.attrs": {},
            "igv.json": {},
            "igv.py": {},
            "igv.states": {}
          },
          "indelrealigner": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "icon": {
              "gatk-realign.png": {}
            },
            "indelrealigner.attrs": {},
            "indelrealigner.json": {},
            "indelrealigner.py": {},
            "indelrealigner.states": {}
          },
          "muse_call": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_muse_call.sh": {}
            },
            "icon": {
              "muse.png": {}
            },
            "muse_call.attrs": {},
            "muse_call.json": {},
            "muse_call.py": {},
            "muse_call.states": {}
          },
          "muse_sump": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_muse_call.sh": {}
            },
            "icon": {
              "muse.png": {}
            },
            "muse_sump.attrs": {},
            "muse_sump.json": {},
            "muse_sump.py": {},
            "muse_sump.states": {}
          },
          "pindel_biosamba": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_biosamba.attrs": {},
            "pindel_biosamba.json": {},
            "pindel_biosamba.py": {},
            "pindel_biosamba.states": {}
          },
          "pindel_config": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_config.attrs": {},
            "pindel_config.json": {},
            "pindel_config.py": {},
            "pindel_config.states": {}
          },
          "pindel_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "picard.jar": {},
              "sort_and_filter.sh": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_sort.attrs": {},
            "pindel_sort.json": {},
            "pindel_sort.py": {},
            "pindel_sort.states": {}
          },
          "realigner_creator": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "icon": {
              "gatk-co-clean.png": {}
            },
            "realigner_creator.attrs": {},
            "realigner_creator.json": {},
            "realigner_creator.py": {},
            "realigner_creator.states": {}
          },
          "variant_effect_predictor": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "VEP.jpg": {}
            },
            "variant_effect_predictor.attrs": {},
            "variant_effect_predictor.json": {},
            "variant_effect_predictor.py": {},
            "variant_effect_predictor.states": {}
          },
          "varscan_somatic": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_pileup.sh": {},
              "run_somatic.sh": {}
            },
            "icon": {
              "varscan.png": {}
            },
            "varscan_somatic.attrs": {},
            "varscan_somatic.json": {},
            "varscan_somatic.py": {},
            "varscan_somatic.states": {}
          },
          "vcf_to_maf": {
            "Dockerfiles": {
              "Dockerfile": {},
              "LICENSE": {},
              "README.md": {},
              "data": {
                "GRCh37_to_GRCh38.chain": {},
                "GRCh37_to_hg38.chain": {},
                "GRCh38_to_GRCh37.chain": {},
                "GRCm38_to_NCBIM37.chain": {},
                "NCBIM37_to_GRCm38.chain": {},
                "ensg_to_entrez_id_map_ensembl_feb2014.tsv": {},
                "hg19_to_GRCh37.chain": {},
                "hg19_to_hg38.chain": {},
                "hg38_to_GRCh38.chain": {},
                "hg38_to_hg19.chain": {},
                "isoform_overrides_at_mskcc": {},
                "isoform_overrides_at_mskcc_grch38": {},
                "isoform_overrides_dmp_merged": {},
                "isoform_overrides_mane_grch38": {},
                "isoform_overrides_uniprot": {},
                "known_somatic_sites.bed": {},
                "minimalist_test_maf.tsv": {}
              },
              "docs": {
                "vep_maf_readme.txt": {}
              },
              "maf2maf.pl": {},
              "maf2vcf.pl": {},
              "tests": {
                "maf2maf.t": {},
                "maf2vcf.t": {},
                "test.maf": {},
                "test.tsv": {},
                "test.vcf": {},
                "test_b37.vcf": {},
                "test_b38.vcf": {},
                "test_b38_output.maf": {},
                "test_b38_output.more.maf": {},
                "test_delly.vcf": {},
                "test_grch38.vcf": {},
                "test_maf2vcf.vcf": {},
                "test_merged.vcf": {},
                "test_muse.vcf": {},
                "test_mutect.vcf": {},
                "test_output.custom_isoforms.maf": {},
                "test_output.vep_isoforms.maf": {},
                "test_pindel.vcf": {},
                "test_radia.vcf": {},
                "test_sniper.vcf": {},
                "test_strelka.vcf": {},
                "test_varscan.vcf": {},
                "vcf2maf.t": {},
                "vcf2vcf.t": {}
              },
              "vcf2maf.pl": {},
              "vcf2vcf.pl": {}
            },
            "icon": {
              "vcf_to_maf.png": {}
            },
            "vcf_to_maf.attrs": {},
            "vcf_to_maf.json": {},
            "vcf_to_maf.py": {},
            "vcf_to_maf.states": {}
          },
          "vs_mpileup": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_pileup.sh": {},
              "run_somatic.sh": {}
            },
            "icon": {
              "varscan.png": {}
            },
            "vs_mpileup.attrs": {},
            "vs_mpileup.json": {},
            "vs_mpileup.py": {},
            "vs_mpileup.states": {}
          }
        }
      }
    },
    "GDC_dna_seq_no_gen3": {
      "GDC_dna_seq_no_gen3.ows": {},
      "README.md": {},
      "images": {
        "image1.png": {},
        "image2.png": {}
      },
      "widgets": {
        "GDC_dna_seq_no_gen3": {
          "MarkDuplicates": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "MarkDuplicates.attrs": {},
            "MarkDuplicates.json": {},
            "MarkDuplicates.py": {},
            "MarkDuplicates.states": {},
            "icon": {
              "gatk-mark-dupes.png": {}
            }
          },
          "MuTect2": {
            "MuTect2.attrs": {},
            "MuTect2.json": {},
            "MuTect2.py": {},
            "MuTect2.states": {},
            "icon": {
              "mutect2.png": {}
            }
          },
          "Pindel": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "Pindel.attrs": {},
            "Pindel.json": {},
            "Pindel.py": {},
            "Pindel.states": {},
            "icon": {
              "pindel.png": {}
            }
          },
          "SomaticSniper": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_sniper.sh": {}
            },
            "SomaticSniper.attrs": {},
            "SomaticSniper.json": {},
            "SomaticSniper.py": {},
            "SomaticSniper.states": {},
            "icon": {
              "somatic_sniper.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "archive_delete": {
            "Dockerfiles": {
              "Dockerfile": {},
              "archive-delete.sh": {}
            },
            "archive_delete.attrs": {},
            "archive_delete.json": {},
            "archive_delete.py": {},
            "archive_delete.states": {},
            "icon": {
              "archive-delete.png": {}
            }
          },
          "baserecalibrate": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "baserecalibrate.attrs": {},
            "baserecalibrate.json": {},
            "baserecalibrate.py": {},
            "baserecalibrate.states": {},
            "icon": {
              "gatk-bsqr.png": {}
            }
          },
          "biobambam2": {
            "Dockerfiles": {
              "Dockerfile": {},
              "bamtofastq.sh": {}
            },
            "biobambam2.attrs": {},
            "biobambam2.json": {},
            "biobambam2.py": {},
            "biobambam2.states": {},
            "icon": {
              "biobambam.png": {}
            }
          },
          "bwa_mem": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_bwa.sh": {},
              "run_bwa_index.sh": {}
            },
            "bwa_mem.attrs": {},
            "bwa_mem.json": {},
            "bwa_mem.py": {},
            "bwa_mem.states": {},
            "icon": {
              "bwasamsort.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fastqc": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "fastqc.attrs": {},
            "fastqc.json": {},
            "fastqc.py": {},
            "fastqc.states": {},
            "icon": {
              "fastqc_icon_100.png": {}
            }
          },
          "gcloud_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "gcloud_download.attrs": {},
            "gcloud_download.json": {},
            "gcloud_download.py": {},
            "gcloud_download.states": {},
            "icon": {
              "gcloud_download.png": {}
            }
          },
          "gen3_download": {
            "Dockerfiles": {
              "2021.03.tar.gz": {},
              "Dockerfile": {},
              "runG3Download.sh": {}
            },
            "gen3_download.attrs": {},
            "gen3_download.json": {},
            "gen3_download.py": {},
            "gen3_download.states": {},
            "icon": {
              "gen3-download.png": {}
            }
          },
          "icon": {
            "double-helix.png": {}
          },
          "igv": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start-igv.sh": {}
            },
            "icon": {
              "igv.png": {}
            },
            "igv.attrs": {},
            "igv.json": {},
            "igv.py": {},
            "igv.states": {}
          },
          "indelrealigner": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "icon": {
              "gatk-realign.png": {}
            },
            "indelrealigner.attrs": {},
            "indelrealigner.json": {},
            "indelrealigner.py": {},
            "indelrealigner.states": {}
          },
          "muse_call": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_muse_call.sh": {}
            },
            "icon": {
              "muse.png": {}
            },
            "muse_call.attrs": {},
            "muse_call.json": {},
            "muse_call.py": {},
            "muse_call.states": {}
          },
          "muse_sump": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_muse_call.sh": {}
            },
            "icon": {
              "muse.png": {}
            },
            "muse_sump.attrs": {},
            "muse_sump.json": {},
            "muse_sump.py": {},
            "muse_sump.states": {}
          },
          "pindel_biosamba": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_biosamba.attrs": {},
            "pindel_biosamba.json": {},
            "pindel_biosamba.py": {},
            "pindel_biosamba.states": {}
          },
          "pindel_config": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_config.attrs": {},
            "pindel_config.json": {},
            "pindel_config.py": {},
            "pindel_config.states": {}
          },
          "pindel_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "picard.jar": {},
              "sort_and_filter.sh": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_sort.attrs": {},
            "pindel_sort.json": {},
            "pindel_sort.py": {},
            "pindel_sort.states": {}
          },
          "realigner_creator": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "icon": {
              "gatk-co-clean.png": {}
            },
            "realigner_creator.attrs": {},
            "realigner_creator.json": {},
            "realigner_creator.py": {},
            "realigner_creator.states": {}
          },
          "variant_effect_predictor": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "VEP.jpg": {}
            },
            "variant_effect_predictor.attrs": {},
            "variant_effect_predictor.json": {},
            "variant_effect_predictor.py": {},
            "variant_effect_predictor.states": {}
          },
          "varscan_somatic": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_pileup.sh": {},
              "run_somatic.sh": {}
            },
            "icon": {
              "varscan.png": {}
            },
            "varscan_somatic.attrs": {},
            "varscan_somatic.json": {},
            "varscan_somatic.py": {},
            "varscan_somatic.states": {}
          },
          "vcf_to_maf": {
            "Dockerfiles": {
              "Dockerfile": {},
              "LICENSE": {},
              "README.md": {},
              "data": {
                "GRCh37_to_GRCh38.chain": {},
                "GRCh37_to_hg38.chain": {},
                "GRCh38_to_GRCh37.chain": {},
                "GRCm38_to_NCBIM37.chain": {},
                "NCBIM37_to_GRCm38.chain": {},
                "ensg_to_entrez_id_map_ensembl_feb2014.tsv": {},
                "hg19_to_GRCh37.chain": {},
                "hg19_to_hg38.chain": {},
                "hg38_to_GRCh38.chain": {},
                "hg38_to_hg19.chain": {},
                "isoform_overrides_at_mskcc": {},
                "isoform_overrides_at_mskcc_grch38": {},
                "isoform_overrides_dmp_merged": {},
                "isoform_overrides_mane_grch38": {},
                "isoform_overrides_uniprot": {},
                "known_somatic_sites.bed": {},
                "minimalist_test_maf.tsv": {}
              },
              "docs": {
                "vep_maf_readme.txt": {}
              },
              "maf2maf.pl": {},
              "maf2vcf.pl": {},
              "tests": {
                "maf2maf.t": {},
                "maf2vcf.t": {},
                "test.maf": {},
                "test.tsv": {},
                "test.vcf": {},
                "test_b37.vcf": {},
                "test_b38.vcf": {},
                "test_b38_output.maf": {},
                "test_b38_output.more.maf": {},
                "test_delly.vcf": {},
                "test_grch38.vcf": {},
                "test_maf2vcf.vcf": {},
                "test_merged.vcf": {},
                "test_muse.vcf": {},
                "test_mutect.vcf": {},
                "test_output.custom_isoforms.maf": {},
                "test_output.vep_isoforms.maf": {},
                "test_pindel.vcf": {},
                "test_radia.vcf": {},
                "test_sniper.vcf": {},
                "test_strelka.vcf": {},
                "test_varscan.vcf": {},
                "vcf2maf.t": {},
                "vcf2vcf.t": {}
              },
              "vcf2maf.pl": {},
              "vcf2vcf.pl": {}
            },
            "icon": {
              "vcf_to_maf.png": {}
            },
            "vcf_to_maf.attrs": {},
            "vcf_to_maf.json": {},
            "vcf_to_maf.py": {},
            "vcf_to_maf.states": {}
          },
          "vs_mpileup": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_pileup.sh": {},
              "run_somatic.sh": {}
            },
            "icon": {
              "varscan.png": {}
            },
            "vs_mpileup.attrs": {},
            "vs_mpileup.json": {},
            "vs_mpileup.py": {},
            "vs_mpileup.states": {}
          }
        }
      }
    },
    "GDC_dna_seq_no_gen3_fast": {
      "GDC_dna_seq_no_gen3_fast.ows": {},
      "README.md": {},
      "images": {
        "image1.png": {}
      },
      "widgets": {
        "GDC_dna_seq_no_gen3_fast": {
          "MarkDuplicates": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "MarkDuplicates.attrs": {},
            "MarkDuplicates.json": {},
            "MarkDuplicates.py": {},
            "MarkDuplicates.states": {},
            "icon": {
              "gatk-mark-dupes.png": {}
            }
          },
          "MuTect2": {
            "MuTect2.attrs": {},
            "MuTect2.json": {},
            "MuTect2.py": {},
            "MuTect2.states": {},
            "icon": {
              "mutect2.png": {}
            }
          },
          "Pindel": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "Pindel.attrs": {},
            "Pindel.json": {},
            "Pindel.py": {},
            "Pindel.states": {},
            "icon": {
              "pindel.png": {}
            }
          },
          "SomaticSniper": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_sniper.sh": {}
            },
            "SomaticSniper.attrs": {},
            "SomaticSniper.json": {},
            "SomaticSniper.py": {},
            "SomaticSniper.states": {},
            "icon": {
              "somatic_sniper.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "archive_delete": {
            "Dockerfiles": {
              "Dockerfile": {},
              "archive-delete.sh": {}
            },
            "archive_delete.attrs": {},
            "archive_delete.json": {},
            "archive_delete.py": {},
            "archive_delete.states": {},
            "icon": {
              "archive-delete.png": {}
            }
          },
          "baserecalibrate": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "baserecalibrate.attrs": {},
            "baserecalibrate.json": {},
            "baserecalibrate.py": {},
            "baserecalibrate.states": {},
            "icon": {
              "gatk-bsqr.png": {}
            }
          },
          "biobambam2": {
            "Dockerfiles": {
              "Dockerfile": {},
              "bamtofastq.sh": {}
            },
            "biobambam2.attrs": {},
            "biobambam2.json": {},
            "biobambam2.py": {},
            "biobambam2.states": {},
            "icon": {
              "biobambam.png": {}
            }
          },
          "bwa_mem": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_bwa.sh": {},
              "run_bwa_index.sh": {}
            },
            "bwa_mem.attrs": {},
            "bwa_mem.json": {},
            "bwa_mem.py": {},
            "bwa_mem.states": {},
            "icon": {
              "bwasamsort.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fastqc": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "fastqc.attrs": {},
            "fastqc.json": {},
            "fastqc.py": {},
            "fastqc.states": {},
            "icon": {
              "fastqc_icon_100.png": {}
            }
          },
          "gcloud_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "gcloud_download.attrs": {},
            "gcloud_download.json": {},
            "gcloud_download.py": {},
            "gcloud_download.states": {},
            "icon": {
              "gcloud_download.png": {}
            }
          },
          "gen3_download": {
            "Dockerfiles": {
              "2021.03.tar.gz": {},
              "Dockerfile": {},
              "runG3Download.sh": {}
            },
            "gen3_download.attrs": {},
            "gen3_download.json": {},
            "gen3_download.py": {},
            "gen3_download.states": {},
            "icon": {
              "gen3-download.png": {}
            }
          },
          "icon": {
            "double-helix.png": {}
          },
          "igv": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start-igv.sh": {}
            },
            "icon": {
              "igv.png": {}
            },
            "igv.attrs": {},
            "igv.json": {},
            "igv.py": {},
            "igv.states": {}
          },
          "indelrealigner": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "icon": {
              "gatk-realign.png": {}
            },
            "indelrealigner.attrs": {},
            "indelrealigner.json": {},
            "indelrealigner.py": {},
            "indelrealigner.states": {}
          },
          "muse_call": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_muse_call.sh": {}
            },
            "icon": {
              "muse.png": {}
            },
            "muse_call.attrs": {},
            "muse_call.json": {},
            "muse_call.py": {},
            "muse_call.states": {}
          },
          "muse_sump": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_muse_call.sh": {}
            },
            "icon": {
              "muse.png": {}
            },
            "muse_sump.attrs": {},
            "muse_sump.json": {},
            "muse_sump.py": {},
            "muse_sump.states": {}
          },
          "pindel_biosamba": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_biosamba.attrs": {},
            "pindel_biosamba.json": {},
            "pindel_biosamba.py": {},
            "pindel_biosamba.states": {}
          },
          "pindel_config": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "generate_bam_config.sh": {},
              "pindel2vcf": {},
              "run_pindel.sh": {},
              "sambamba-0.7.0-linux-static": {},
              "somatic_indelfilter.pl": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_config.attrs": {},
            "pindel_config.json": {},
            "pindel_config.py": {},
            "pindel_config.states": {}
          },
          "pindel_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "picard.jar": {},
              "sort_and_filter.sh": {}
            },
            "icon": {
              "pindel.png": {}
            },
            "pindel_sort.attrs": {},
            "pindel_sort.json": {},
            "pindel_sort.py": {},
            "pindel_sort.states": {}
          },
          "realigner_creator": {
            "Dockerfiles": {
              "Dockerfile": {},
              "create_target.sh": {},
              "realign.sh": {},
              "recalibrate.sh": {}
            },
            "icon": {
              "gatk-co-clean.png": {}
            },
            "realigner_creator.attrs": {},
            "realigner_creator.json": {},
            "realigner_creator.py": {},
            "realigner_creator.states": {}
          },
          "variant_effect_predictor": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "VEP.jpg": {}
            },
            "variant_effect_predictor.attrs": {},
            "variant_effect_predictor.json": {},
            "variant_effect_predictor.py": {},
            "variant_effect_predictor.states": {}
          },
          "varscan_somatic": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_pileup.sh": {},
              "run_somatic.sh": {}
            },
            "icon": {
              "varscan.png": {}
            },
            "varscan_somatic.attrs": {},
            "varscan_somatic.json": {},
            "varscan_somatic.py": {},
            "varscan_somatic.states": {}
          },
          "vcf_to_maf": {
            "Dockerfiles": {
              "Dockerfile": {},
              "LICENSE": {},
              "README.md": {},
              "data": {
                "GRCh37_to_GRCh38.chain": {},
                "GRCh37_to_hg38.chain": {},
                "GRCh38_to_GRCh37.chain": {},
                "GRCm38_to_NCBIM37.chain": {},
                "NCBIM37_to_GRCm38.chain": {},
                "ensg_to_entrez_id_map_ensembl_feb2014.tsv": {},
                "hg19_to_GRCh37.chain": {},
                "hg19_to_hg38.chain": {},
                "hg38_to_GRCh38.chain": {},
                "hg38_to_hg19.chain": {},
                "isoform_overrides_at_mskcc": {},
                "isoform_overrides_at_mskcc_grch38": {},
                "isoform_overrides_dmp_merged": {},
                "isoform_overrides_mane_grch38": {},
                "isoform_overrides_uniprot": {},
                "known_somatic_sites.bed": {},
                "minimalist_test_maf.tsv": {}
              },
              "docs": {
                "vep_maf_readme.txt": {}
              },
              "maf2maf.pl": {},
              "maf2vcf.pl": {},
              "tests": {
                "maf2maf.t": {},
                "maf2vcf.t": {},
                "test.maf": {},
                "test.tsv": {},
                "test.vcf": {},
                "test_b37.vcf": {},
                "test_b38.vcf": {},
                "test_b38_output.maf": {},
                "test_b38_output.more.maf": {},
                "test_delly.vcf": {},
                "test_grch38.vcf": {},
                "test_maf2vcf.vcf": {},
                "test_merged.vcf": {},
                "test_muse.vcf": {},
                "test_mutect.vcf": {},
                "test_output.custom_isoforms.maf": {},
                "test_output.vep_isoforms.maf": {},
                "test_pindel.vcf": {},
                "test_radia.vcf": {},
                "test_sniper.vcf": {},
                "test_strelka.vcf": {},
                "test_varscan.vcf": {},
                "vcf2maf.t": {},
                "vcf2vcf.t": {}
              },
              "vcf2maf.pl": {},
              "vcf2vcf.pl": {}
            },
            "icon": {
              "vcf_to_maf.png": {}
            },
            "vcf_to_maf.attrs": {},
            "vcf_to_maf.json": {},
            "vcf_to_maf.py": {},
            "vcf_to_maf.states": {}
          },
          "vs_mpileup": {
            "Dockerfiles": {
              "Dockerfile": {},
              "run_pileup.sh": {},
              "run_somatic.sh": {}
            },
            "icon": {
              "varscan.png": {}
            },
            "vs_mpileup.attrs": {},
            "vs_mpileup.json": {},
            "vs_mpileup.py": {},
            "vs_mpileup.states": {}
          }
        }
      }
    },
    "GEN3readme.md": {},
    "images": {
      "image1.png": {},
      "image2.png": {},
      "image3.png": {},
      "image4.png": {},
      "image5.png": {}
    },
    "toil_wgs_sanger": {
      "toil_wgs_sanger.ows": {},
      "widgets": {
        "toil_wgs_sanger": {
          "Toil": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "Toil.attrs": {},
            "Toil.json": {},
            "Toil.py": {},
            "Toil.states": {},
            "icon": {
              "python.png": {}
            }
          },
          "Toil_CWL": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "Toil_CWL.attrs": {},
            "Toil_CWL.json": {},
            "Toil_CWL.py": {},
            "Toil_CWL.states": {},
            "icon": {
              "cwl.png": {}
            }
          },
          "Toil_WDL": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "Toil_WDL.attrs": {},
            "Toil_WDL.json": {},
            "Toil_WDL.py": {},
            "Toil_WDL.states": {},
            "icon": {
              "wdl.png": {}
            }
          },
          "__init__.py": {},
          "daloc": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "daloc.attrs": {},
            "daloc.json": {},
            "daloc.py": {},
            "daloc.states": {},
            "icon": {
              "cloud-download.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "geany": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "geany.attrs": {},
            "geany.json": {},
            "geany.py": {},
            "geany.states": {},
            "icon": {
              "geany.png": {}
            }
          },
          "icon": {
            "double-helix.png": {}
          }
        }
      }
    }
  },
  "EC2readme.md": {},
  "LICENSE.md": {},
  "README.md": {},
  "RNA": {
    ".bwb": {
      "proc.3d82ab65ae9240f0acd49fa3f1e57fe5": {
        "logs": {
          "log0": {},
          "log1": {}
        }
      }
    },
    "GDC_mRNA": {
      "GDC_mRNA.ows": {},
      "widgets": {
        "GDC_mRNA": {
          "StarFusion": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "StarFusion.attrs": {},
            "StarFusion.json": {},
            "StarFusion.py": {},
            "StarFusion.states": {},
            "icon": {
              "starfusion.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "arriba": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "arriba.attrs": {},
            "arriba.json": {},
            "arriba.py": {},
            "arriba.states": {},
            "icon": {
              "arriba.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fpkm": {
            "Dockerfiles": {
              "Dockerfile": {},
              "fpkm.pl": {}
            },
            "fpkm.attrs": {},
            "fpkm.json": {},
            "fpkm.py": {},
            "fpkm.states": {},
            "icon": {
              "normalize_pl.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "htseq": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "htseq.attrs": {},
            "htseq.json": {},
            "htseq.py": {},
            "htseq.states": {},
            "icon": {
              "htseq.png": {}
            }
          },
          "icon": {
            "RNAseq.png": {}
          },
          "samtools_index": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samindex.png": {}
            },
            "samtools_index.attrs": {},
            "samtools_index.json": {},
            "samtools_index.py": {},
            "samtools_index.states": {}
          },
          "samtools_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samsort.png": {}
            },
            "samtools_sort.attrs": {},
            "samtools_sort.json": {},
            "samtools_sort.py": {},
            "samtools_sort.states": {}
          },
          "starAlign": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "STAR-2.6.0c": {
                ".gitignore": {},
                ".gitmodules": {},
                ".travis.yml": {},
                "CHANGES.md": {},
                "LICENSE": {},
                "README.md": {},
                "RELEASEnotes.md": {},
                "extras": {
                  "doc-latex": {
                    "STARmanual.tex": {},
                    "convertParDefToLatexTable.awk": {},
                    "parametersDefault.tex": {}
                  },
                  "scripts": {
                    "calcInsertCoverage.awk": {},
                    "extractSJfromGTF.sh": {},
                    "filterCirc.awk": {},
                    "mergeLogFinal.awk": {},
                    "mergeSuperContig.awk": {},
                    "sjCollapseSamples.awk": {},
                    "sjFromSAMcollapseUandM.awk": {},
                    "sjFromSAMcollapseUandM_inclOverlaps.awk": {},
                    "sjMotif.m": {},
                    "tagXSstrandedData.awk": {},
                    "transcriptTypes.awk": {},
                    "transfragsFromBedGraph.awk": {}
                  }
                },
                "source": {
                  "BAMbinSortByCoordinate.cpp": {},
                  "BAMbinSortByCoordinate.h": {},
                  "BAMbinSortUnmapped.cpp": {},
                  "BAMbinSortUnmapped.h": {},
                  "BAMfunctions.cpp": {},
                  "BAMfunctions.h": {},
                  "BAMoutput.cpp": {},
                  "BAMoutput.h": {},
                  "Chain.cpp": {},
                  "Chain.h": {},
                  "ChimericAlign.cpp": {},
                  "ChimericAlign.h": {},
                  "ChimericAlign_chimericJunctionOutput.cpp": {},
                  "ChimericAlign_chimericStitching.cpp": {},
                  "ChimericDetection.cpp": {},
                  "ChimericDetection.h": {},
                  "ChimericDetection_chimericDetectionMult.cpp": {},
                  "ChimericSegment.cpp": {},
                  "ChimericSegment.h": {},
                  "ChimericTranscript.h": {},
                  "ErrorWarning.cpp": {},
                  "ErrorWarning.h": {},
                  "Genome.cpp": {},
                  "Genome.h": {},
                  "Genome_genomeGenerate.cpp": {},
                  "Genome_insertSequences.cpp": {},
                  "GlobalVariables.cpp": {},
                  "GlobalVariables.h": {},
                  "InOutStreams.cpp": {},
                  "InOutStreams.h": {},
                  "IncludeDefine.h": {},
                  "Makefile": {},
                  "OutSJ.cpp": {},
                  "OutSJ.h": {},
                  "PackedArray.cpp": {},
                  "PackedArray.h": {},
                  "ParameterInfo.h": {},
                  "Parameters.cpp": {},
                  "Parameters.h": {},
                  "ParametersChimeric.h": {},
                  "ParametersGenome.h": {},
                  "Parameters_closeReadsFiles.cpp": {},
                  "Parameters_openReadsFiles.cpp": {},
                  "Parameters_readSAMheader.cpp": {},
                  "Quantifications.cpp": {},
                  "Quantifications.h": {},
                  "ReadAlign.cpp": {},
                  "ReadAlign.h": {},
                  "ReadAlignChunk.cpp": {},
                  "ReadAlignChunk.h": {},
                  "ReadAlignChunk_mapChunk.cpp": {},
                  "ReadAlignChunk_processChunks.cpp": {},
                  "ReadAlign_CIGAR.cpp": {},
                  "ReadAlign_alignBAM.cpp": {},
                  "ReadAlign_assignAlignToWindow.cpp": {},
                  "ReadAlign_calcCIGAR.cpp": {},
                  "ReadAlign_chimericDetection.cpp": {},
                  "ReadAlign_chimericDetectionOld.cpp": {},
                  "ReadAlign_chimericDetectionOldOutput.cpp": {},
                  "ReadAlign_chimericDetectionPEmerged.cpp": {},
                  "ReadAlign_createExtendWindowsWithAlign.cpp": {},
                  "ReadAlign_mapOneRead.cpp": {},
                  "ReadAlign_mappedFilter.cpp": {},
                  "ReadAlign_maxMappableLength2strands.cpp": {},
                  "ReadAlign_multMapSelect.cpp": {},
                  "ReadAlign_oneRead.cpp": {},
                  "ReadAlign_outputAlignments.cpp": {},
                  "ReadAlign_outputTranscriptCIGARp.cpp": {},
                  "ReadAlign_outputTranscriptSAM.cpp": {},
                  "ReadAlign_outputTranscriptSJ.cpp": {},
                  "ReadAlign_outputVariation.cpp": {},
                  "ReadAlign_peOverlapMergeMap.cpp": {},
                  "ReadAlign_quantTranscriptome.cpp": {},
                  "ReadAlign_stitchPieces.cpp": {},
                  "ReadAlign_stitchWindowSeeds.cpp": {},
                  "ReadAlign_storeAligns.cpp": {},
                  "ReadAlign_waspMap.cpp": {},
                  "STAR.cpp": {},
                  "SequenceFuns.cpp": {},
                  "SequenceFuns.h": {},
                  "SharedMemory.cpp": {},
                  "SharedMemory.h": {},
                  "SjdbClass.h": {},
                  "Stats.cpp": {},
                  "Stats.h": {},
                  "SuffixArrayFuns.cpp": {},
                  "SuffixArrayFuns.h": {},
                  "ThreadControl.cpp": {},
                  "ThreadControl.h": {},
                  "TimeFunctions.cpp": {},
                  "TimeFunctions.h": {},
                  "Transcript.cpp": {},
                  "Transcript.h": {},
                  "Transcript_alignScore.cpp": {},
                  "Transcript_generateCigarP.cpp": {},
                  "Transcript_variationAdjust.cpp": {},
                  "Transcript_variationOutput.cpp": {},
                  "Transcriptome.cpp": {},
                  "Transcriptome.h": {},
                  "Transcriptome_geneCountsAddAlign.cpp": {},
                  "Transcriptome_quantAlign.cpp": {},
                  "VERSION": {},
                  "Variation.cpp": {},
                  "Variation.h": {},
                  "alignSmithWaterman.cpp": {},
                  "alignSmithWaterman.h": {},
                  "bamRemoveDuplicates.cpp": {},
                  "bamRemoveDuplicates.h": {},
                  "bam_cat.c": {},
                  "bam_cat.h": {},
                  "binarySearch2.cpp": {},
                  "binarySearch2.h": {},
                  "blocksOverlap.cpp": {},
                  "blocksOverlap.h": {},
                  "extendAlign.cpp": {},
                  "extendAlign.h": {},
                  "funCompareUintAndSuffixes.cpp": {},
                  "funCompareUintAndSuffixes.h": {},
                  "funCompareUintAndSuffixesMemcmp.cpp": {},
                  "funCompareUintAndSuffixesMemcmp.h": {},
                  "genomeGenerate.h": {},
                  "genomeParametersWrite.cpp": {},
                  "genomeParametersWrite.h": {},
                  "genomeSAindex.cpp": {},
                  "genomeSAindex.h": {},
                  "genomeScanFastaFiles.cpp": {},
                  "genomeScanFastaFiles.h": {},
                  "htslib": {
                    ".gitignore": {},
                    ".travis.yml": {},
                    "Makefile": {},
                    "README.md": {},
                    "bgzf.c": {},
                    "bgzip.c": {},
                    "config.h": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "files.c": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "md5.c": {},
                      "md5.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "sam_header.c": {},
                      "sam_header.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {},
                      "thread_pool.c": {},
                      "thread_pool.h": {},
                      "vlen.c": {},
                      "vlen.h": {},
                      "zfio.c": {},
                      "zfio.h": {}
                    },
                    "faidx.5": {},
                    "faidx.c": {},
                    "hfile.c": {},
                    "hfile_internal.h": {},
                    "hfile_net.c": {},
                    "hts.c": {},
                    "htslib.mk": {},
                    "htslib": {
                      "bgzf.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstdint.h": {},
                      "kstring.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {}
                  },
                  "insertSeqSA.cpp": {},
                  "insertSeqSA.h": {},
                  "loadGTF.cpp": {},
                  "loadGTF.h": {},
                  "mapThreadsSpawn.cpp": {},
                  "mapThreadsSpawn.h": {},
                  "outputSJ.cpp": {},
                  "outputSJ.h": {},
                  "parametersDefault": {},
                  "parametersDefault.xxd": {},
                  "readLoad.cpp": {},
                  "readLoad.h": {},
                  "serviceFuns.cpp": {},
                  "signalFromBAM.cpp": {},
                  "signalFromBAM.h": {},
                  "sjAlignSplit.cpp": {},
                  "sjdbBuildIndex.cpp": {},
                  "sjdbBuildIndex.h": {},
                  "sjdbInsertJunctions.cpp": {},
                  "sjdbInsertJunctions.h": {},
                  "sjdbLoadFromFiles.cpp": {},
                  "sjdbLoadFromFiles.h": {},
                  "sjdbLoadFromStream.cpp": {},
                  "sjdbLoadFromStream.h": {},
                  "sjdbPrepare.cpp": {},
                  "sjdbPrepare.h": {},
                  "sortSuffixesBucket.h": {},
                  "stitchAlignToTranscript.cpp": {},
                  "stitchAlignToTranscript.h": {},
                  "stitchGapIndel.cpp": {},
                  "stitchWindowAligns.cpp": {},
                  "stitchWindowAligns.h": {},
                  "streamFuns.cpp": {},
                  "streamFuns.h": {},
                  "stringSubstituteAll.cpp": {},
                  "stringSubstituteAll.h": {},
                  "sysRemoveDir.cpp": {},
                  "sysRemoveDir.h": {}
                }
              },
              "build.sh": {},
              "debian": {
                "build.sh": {}
              },
              "runstar.sh": {}
            },
            "icon": {
              "staralign.png": {}
            },
            "starAlign.attrs": {},
            "starAlign.json": {},
            "starAlign.py": {},
            "starAlign.states": {}
          },
          "starIndex": {
            "Dockerfiles": {
              "Dockerfile": {},
              "STAR-2.6.0c": {
                "source": {
                  "BAMbinSortByCoordinate.o": {},
                  "BAMbinSortUnmapped.o": {},
                  "BAMfunctions.o": {},
                  "BAMoutput.o": {},
                  "Chain.o": {},
                  "ChimericAlign_chimericJunctionOutput.o": {},
                  "ChimericAlign_chimericStitching.o": {},
                  "ChimericDetection.o": {},
                  "ChimericDetection_chimericDetectionMult.o": {},
                  "Depend.list": {},
                  "ErrorWarning.o": {},
                  "Genome.o": {},
                  "Genome_genomeGenerate.o": {},
                  "Genome_insertSequences.o": {},
                  "InOutStreams.o": {},
                  "OutSJ.o": {},
                  "PackedArray.o": {},
                  "Parameters.o": {},
                  "Parameters_readSAMheader.o": {},
                  "Quantifications.o": {},
                  "ReadAlign.o": {},
                  "ReadAlignChunk.o": {},
                  "ReadAlignChunk_mapChunk.o": {},
                  "ReadAlignChunk_processChunks.o": {},
                  "ReadAlign_alignBAM.o": {},
                  "ReadAlign_assignAlignToWindow.o": {},
                  "ReadAlign_chimericDetection.o": {},
                  "ReadAlign_chimericDetectionOld.o": {},
                  "ReadAlign_chimericDetectionOldOutput.o": {},
                  "ReadAlign_chimericDetectionPEmerged.o": {},
                  "ReadAlign_createExtendWindowsWithAlign.o": {},
                  "ReadAlign_mapOneRead.o": {},
                  "ReadAlign_mappedFilter.o": {},
                  "ReadAlign_maxMappableLength2strands.o": {},
                  "ReadAlign_multMapSelect.o": {},
                  "ReadAlign_oneRead.o": {},
                  "ReadAlign_outputAlignments.o": {},
                  "ReadAlign_outputTranscriptCIGARp.o": {},
                  "ReadAlign_outputTranscriptSAM.o": {},
                  "ReadAlign_outputTranscriptSJ.o": {},
                  "ReadAlign_peOverlapMergeMap.o": {},
                  "ReadAlign_quantTranscriptome.o": {},
                  "ReadAlign_stitchPieces.o": {},
                  "ReadAlign_stitchWindowSeeds.o": {},
                  "ReadAlign_storeAligns.o": {},
                  "ReadAlign_waspMap.o": {},
                  "STAR": {},
                  "STAR.o": {},
                  "SequenceFuns.o": {},
                  "SharedMemory.o": {},
                  "Stats.o": {},
                  "SuffixArrayFuns.o": {},
                  "ThreadControl.o": {},
                  "TimeFunctions.o": {},
                  "Transcript.o": {},
                  "Transcript_alignScore.o": {},
                  "Transcript_generateCigarP.o": {},
                  "Transcript_variationAdjust.o": {},
                  "Transcriptome.o": {},
                  "Transcriptome_geneCountsAddAlign.o": {},
                  "Transcriptome_quantAlign.o": {},
                  "Variation.o": {},
                  "alignSmithWaterman.o": {},
                  "bamRemoveDuplicates.o": {},
                  "bam_cat.o": {},
                  "binarySearch2.o": {},
                  "blocksOverlap.o": {},
                  "extendAlign.o": {},
                  "funCompareUintAndSuffixes.o": {},
                  "funCompareUintAndSuffixesMemcmp.o": {},
                  "genomeParametersWrite.o": {},
                  "genomeSAindex.o": {},
                  "genomeScanFastaFiles.o": {},
                  "htslib": {
                    "bgzf.o": {},
                    "cram": {
                      "cram_codecs.o": {},
                      "cram_decode.o": {},
                      "cram_encode.o": {},
                      "cram_index.o": {},
                      "cram_io.o": {},
                      "cram_samtools.o": {},
                      "cram_stats.o": {},
                      "files.o": {},
                      "mFILE.o": {},
                      "md5.o": {},
                      "open_trace_file.o": {},
                      "pooled_alloc.o": {},
                      "sam_header.o": {},
                      "string_alloc.o": {},
                      "thread_pool.o": {},
                      "vlen.o": {},
                      "zfio.o": {}
                    },
                    "faidx.o": {},
                    "hfile.o": {},
                    "hfile_net.o": {},
                    "hts.o": {},
                    "kfunc.o": {},
                    "knetfile.o": {},
                    "kstring.o": {},
                    "libhts.a": {},
                    "sam.o": {},
                    "synced_bcf_reader.o": {},
                    "tbx.o": {},
                    "vcf.o": {},
                    "vcf_sweep.o": {},
                    "vcfutils.o": {},
                    "version.h": {}
                  },
                  "insertSeqSA.o": {},
                  "loadGTF.o": {},
                  "mapThreadsSpawn.o": {},
                  "outputSJ.o": {},
                  "readLoad.o": {},
                  "serviceFuns.o": {},
                  "signalFromBAM.o": {},
                  "sjdbBuildIndex.o": {},
                  "sjdbInsertJunctions.o": {},
                  "sjdbLoadFromFiles.o": {},
                  "sjdbLoadFromStream.o": {},
                  "sjdbPrepare.o": {},
                  "stitchAlignToTranscript.o": {},
                  "stitchWindowAligns.o": {},
                  "streamFuns.o": {},
                  "stringSubstituteAll.o": {},
                  "sysRemoveDir.o": {}
                }
              },
              "star-index.sh": {}
            },
            "icon": {
              "starIndex.png": {}
            },
            "starIndex.attrs": {},
            "starIndex.json": {},
            "starIndex.py": {},
            "starIndex.states": {}
          }
        }
      }
    },
    "GDC_mRNA_dr15plus": {
      "GDC_mRNA_dr15plus.ows": {},
      "README.md": {},
      "images": {
        "image1.png": {},
        "image2.png": {},
        "image3.png": {},
        "image4.png": {},
        "image5.png": {},
        "image6.png": {},
        "image7.png": {},
        "image8.png": {}
      },
      "widgets": {
        "GDC_mRNA_dr15plus": {
          "StarFusion": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "StarFusion.attrs": {},
            "StarFusion.json": {},
            "StarFusion.py": {},
            "StarFusion.states": {},
            "icon": {
              "starfusion.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "arriba": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "arriba.attrs": {},
            "arriba.json": {},
            "arriba.py": {},
            "arriba.states": {},
            "icon": {
              "arriba.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fpkm": {
            "Dockerfiles": {
              "Dockerfile": {},
              "fpkm.pl": {}
            },
            "fpkm.attrs": {},
            "fpkm.json": {},
            "fpkm.py": {},
            "fpkm.states": {},
            "icon": {
              "normalize_pl.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "htseq": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "htseq.attrs": {},
            "htseq.json": {},
            "htseq.py": {},
            "htseq.states": {},
            "icon": {
              "htseq.png": {}
            }
          },
          "icon": {
            "RNAseq.png": {}
          },
          "samtools_index": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samindex.png": {}
            },
            "samtools_index.attrs": {},
            "samtools_index.json": {},
            "samtools_index.py": {},
            "samtools_index.states": {}
          },
          "samtools_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samsort.png": {}
            },
            "samtools_sort.attrs": {},
            "samtools_sort.json": {},
            "samtools_sort.py": {},
            "samtools_sort.states": {}
          },
          "starAlign": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "STAR-2.6.0c": {
                ".gitignore": {},
                ".gitmodules": {},
                ".travis.yml": {},
                "CHANGES.md": {},
                "LICENSE": {},
                "README.md": {},
                "RELEASEnotes.md": {},
                "extras": {
                  "doc-latex": {
                    "STARmanual.tex": {},
                    "convertParDefToLatexTable.awk": {},
                    "parametersDefault.tex": {}
                  },
                  "scripts": {
                    "calcInsertCoverage.awk": {},
                    "extractSJfromGTF.sh": {},
                    "filterCirc.awk": {},
                    "mergeLogFinal.awk": {},
                    "mergeSuperContig.awk": {},
                    "sjCollapseSamples.awk": {},
                    "sjFromSAMcollapseUandM.awk": {},
                    "sjFromSAMcollapseUandM_inclOverlaps.awk": {},
                    "sjMotif.m": {},
                    "tagXSstrandedData.awk": {},
                    "transcriptTypes.awk": {},
                    "transfragsFromBedGraph.awk": {}
                  }
                },
                "source": {
                  "BAMbinSortByCoordinate.cpp": {},
                  "BAMbinSortByCoordinate.h": {},
                  "BAMbinSortUnmapped.cpp": {},
                  "BAMbinSortUnmapped.h": {},
                  "BAMfunctions.cpp": {},
                  "BAMfunctions.h": {},
                  "BAMoutput.cpp": {},
                  "BAMoutput.h": {},
                  "Chain.cpp": {},
                  "Chain.h": {},
                  "ChimericAlign.cpp": {},
                  "ChimericAlign.h": {},
                  "ChimericAlign_chimericJunctionOutput.cpp": {},
                  "ChimericAlign_chimericStitching.cpp": {},
                  "ChimericDetection.cpp": {},
                  "ChimericDetection.h": {},
                  "ChimericDetection_chimericDetectionMult.cpp": {},
                  "ChimericSegment.cpp": {},
                  "ChimericSegment.h": {},
                  "ChimericTranscript.h": {},
                  "ErrorWarning.cpp": {},
                  "ErrorWarning.h": {},
                  "Genome.cpp": {},
                  "Genome.h": {},
                  "Genome_genomeGenerate.cpp": {},
                  "Genome_insertSequences.cpp": {},
                  "GlobalVariables.cpp": {},
                  "GlobalVariables.h": {},
                  "InOutStreams.cpp": {},
                  "InOutStreams.h": {},
                  "IncludeDefine.h": {},
                  "Makefile": {},
                  "OutSJ.cpp": {},
                  "OutSJ.h": {},
                  "PackedArray.cpp": {},
                  "PackedArray.h": {},
                  "ParameterInfo.h": {},
                  "Parameters.cpp": {},
                  "Parameters.h": {},
                  "ParametersChimeric.h": {},
                  "ParametersGenome.h": {},
                  "Parameters_closeReadsFiles.cpp": {},
                  "Parameters_openReadsFiles.cpp": {},
                  "Parameters_readSAMheader.cpp": {},
                  "Quantifications.cpp": {},
                  "Quantifications.h": {},
                  "ReadAlign.cpp": {},
                  "ReadAlign.h": {},
                  "ReadAlignChunk.cpp": {},
                  "ReadAlignChunk.h": {},
                  "ReadAlignChunk_mapChunk.cpp": {},
                  "ReadAlignChunk_processChunks.cpp": {},
                  "ReadAlign_CIGAR.cpp": {},
                  "ReadAlign_alignBAM.cpp": {},
                  "ReadAlign_assignAlignToWindow.cpp": {},
                  "ReadAlign_calcCIGAR.cpp": {},
                  "ReadAlign_chimericDetection.cpp": {},
                  "ReadAlign_chimericDetectionOld.cpp": {},
                  "ReadAlign_chimericDetectionOldOutput.cpp": {},
                  "ReadAlign_chimericDetectionPEmerged.cpp": {},
                  "ReadAlign_createExtendWindowsWithAlign.cpp": {},
                  "ReadAlign_mapOneRead.cpp": {},
                  "ReadAlign_mappedFilter.cpp": {},
                  "ReadAlign_maxMappableLength2strands.cpp": {},
                  "ReadAlign_multMapSelect.cpp": {},
                  "ReadAlign_oneRead.cpp": {},
                  "ReadAlign_outputAlignments.cpp": {},
                  "ReadAlign_outputTranscriptCIGARp.cpp": {},
                  "ReadAlign_outputTranscriptSAM.cpp": {},
                  "ReadAlign_outputTranscriptSJ.cpp": {},
                  "ReadAlign_outputVariation.cpp": {},
                  "ReadAlign_peOverlapMergeMap.cpp": {},
                  "ReadAlign_quantTranscriptome.cpp": {},
                  "ReadAlign_stitchPieces.cpp": {},
                  "ReadAlign_stitchWindowSeeds.cpp": {},
                  "ReadAlign_storeAligns.cpp": {},
                  "ReadAlign_waspMap.cpp": {},
                  "STAR.cpp": {},
                  "SequenceFuns.cpp": {},
                  "SequenceFuns.h": {},
                  "SharedMemory.cpp": {},
                  "SharedMemory.h": {},
                  "SjdbClass.h": {},
                  "Stats.cpp": {},
                  "Stats.h": {},
                  "SuffixArrayFuns.cpp": {},
                  "SuffixArrayFuns.h": {},
                  "ThreadControl.cpp": {},
                  "ThreadControl.h": {},
                  "TimeFunctions.cpp": {},
                  "TimeFunctions.h": {},
                  "Transcript.cpp": {},
                  "Transcript.h": {},
                  "Transcript_alignScore.cpp": {},
                  "Transcript_generateCigarP.cpp": {},
                  "Transcript_variationAdjust.cpp": {},
                  "Transcript_variationOutput.cpp": {},
                  "Transcriptome.cpp": {},
                  "Transcriptome.h": {},
                  "Transcriptome_geneCountsAddAlign.cpp": {},
                  "Transcriptome_quantAlign.cpp": {},
                  "VERSION": {},
                  "Variation.cpp": {},
                  "Variation.h": {},
                  "alignSmithWaterman.cpp": {},
                  "alignSmithWaterman.h": {},
                  "bamRemoveDuplicates.cpp": {},
                  "bamRemoveDuplicates.h": {},
                  "bam_cat.c": {},
                  "bam_cat.h": {},
                  "binarySearch2.cpp": {},
                  "binarySearch2.h": {},
                  "blocksOverlap.cpp": {},
                  "blocksOverlap.h": {},
                  "extendAlign.cpp": {},
                  "extendAlign.h": {},
                  "funCompareUintAndSuffixes.cpp": {},
                  "funCompareUintAndSuffixes.h": {},
                  "funCompareUintAndSuffixesMemcmp.cpp": {},
                  "funCompareUintAndSuffixesMemcmp.h": {},
                  "genomeGenerate.h": {},
                  "genomeParametersWrite.cpp": {},
                  "genomeParametersWrite.h": {},
                  "genomeSAindex.cpp": {},
                  "genomeSAindex.h": {},
                  "genomeScanFastaFiles.cpp": {},
                  "genomeScanFastaFiles.h": {},
                  "htslib": {
                    ".gitignore": {},
                    ".travis.yml": {},
                    "Makefile": {},
                    "README.md": {},
                    "bgzf.c": {},
                    "bgzip.c": {},
                    "config.h": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "files.c": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "md5.c": {},
                      "md5.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "sam_header.c": {},
                      "sam_header.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {},
                      "thread_pool.c": {},
                      "thread_pool.h": {},
                      "vlen.c": {},
                      "vlen.h": {},
                      "zfio.c": {},
                      "zfio.h": {}
                    },
                    "faidx.5": {},
                    "faidx.c": {},
                    "hfile.c": {},
                    "hfile_internal.h": {},
                    "hfile_net.c": {},
                    "hts.c": {},
                    "htslib.mk": {},
                    "htslib": {
                      "bgzf.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstdint.h": {},
                      "kstring.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {}
                  },
                  "insertSeqSA.cpp": {},
                  "insertSeqSA.h": {},
                  "loadGTF.cpp": {},
                  "loadGTF.h": {},
                  "mapThreadsSpawn.cpp": {},
                  "mapThreadsSpawn.h": {},
                  "outputSJ.cpp": {},
                  "outputSJ.h": {},
                  "parametersDefault": {},
                  "parametersDefault.xxd": {},
                  "readLoad.cpp": {},
                  "readLoad.h": {},
                  "serviceFuns.cpp": {},
                  "signalFromBAM.cpp": {},
                  "signalFromBAM.h": {},
                  "sjAlignSplit.cpp": {},
                  "sjdbBuildIndex.cpp": {},
                  "sjdbBuildIndex.h": {},
                  "sjdbInsertJunctions.cpp": {},
                  "sjdbInsertJunctions.h": {},
                  "sjdbLoadFromFiles.cpp": {},
                  "sjdbLoadFromFiles.h": {},
                  "sjdbLoadFromStream.cpp": {},
                  "sjdbLoadFromStream.h": {},
                  "sjdbPrepare.cpp": {},
                  "sjdbPrepare.h": {},
                  "sortSuffixesBucket.h": {},
                  "stitchAlignToTranscript.cpp": {},
                  "stitchAlignToTranscript.h": {},
                  "stitchGapIndel.cpp": {},
                  "stitchWindowAligns.cpp": {},
                  "stitchWindowAligns.h": {},
                  "streamFuns.cpp": {},
                  "streamFuns.h": {},
                  "stringSubstituteAll.cpp": {},
                  "stringSubstituteAll.h": {},
                  "sysRemoveDir.cpp": {},
                  "sysRemoveDir.h": {}
                }
              },
              "build.sh": {},
              "debian": {
                "build.sh": {}
              },
              "runstar.sh": {}
            },
            "icon": {
              "staralign.png": {}
            },
            "starAlign.attrs": {},
            "starAlign.json": {},
            "starAlign.py": {},
            "starAlign.states": {}
          },
          "starIndex": {
            "Dockerfiles": {
              "Dockerfile": {},
              "STAR-2.6.0c": {
                "source": {
                  "BAMbinSortByCoordinate.o": {},
                  "BAMbinSortUnmapped.o": {},
                  "BAMfunctions.o": {},
                  "BAMoutput.o": {},
                  "Chain.o": {},
                  "ChimericAlign_chimericJunctionOutput.o": {},
                  "ChimericAlign_chimericStitching.o": {},
                  "ChimericDetection.o": {},
                  "ChimericDetection_chimericDetectionMult.o": {},
                  "Depend.list": {},
                  "ErrorWarning.o": {},
                  "Genome.o": {},
                  "Genome_genomeGenerate.o": {},
                  "Genome_insertSequences.o": {},
                  "InOutStreams.o": {},
                  "OutSJ.o": {},
                  "PackedArray.o": {},
                  "Parameters.o": {},
                  "Parameters_readSAMheader.o": {},
                  "Quantifications.o": {},
                  "ReadAlign.o": {},
                  "ReadAlignChunk.o": {},
                  "ReadAlignChunk_mapChunk.o": {},
                  "ReadAlignChunk_processChunks.o": {},
                  "ReadAlign_alignBAM.o": {},
                  "ReadAlign_assignAlignToWindow.o": {},
                  "ReadAlign_chimericDetection.o": {},
                  "ReadAlign_chimericDetectionOld.o": {},
                  "ReadAlign_chimericDetectionOldOutput.o": {},
                  "ReadAlign_chimericDetectionPEmerged.o": {},
                  "ReadAlign_createExtendWindowsWithAlign.o": {},
                  "ReadAlign_mapOneRead.o": {},
                  "ReadAlign_mappedFilter.o": {},
                  "ReadAlign_maxMappableLength2strands.o": {},
                  "ReadAlign_multMapSelect.o": {},
                  "ReadAlign_oneRead.o": {},
                  "ReadAlign_outputAlignments.o": {},
                  "ReadAlign_outputTranscriptCIGARp.o": {},
                  "ReadAlign_outputTranscriptSAM.o": {},
                  "ReadAlign_outputTranscriptSJ.o": {},
                  "ReadAlign_peOverlapMergeMap.o": {},
                  "ReadAlign_quantTranscriptome.o": {},
                  "ReadAlign_stitchPieces.o": {},
                  "ReadAlign_stitchWindowSeeds.o": {},
                  "ReadAlign_storeAligns.o": {},
                  "ReadAlign_waspMap.o": {},
                  "STAR": {},
                  "STAR.o": {},
                  "SequenceFuns.o": {},
                  "SharedMemory.o": {},
                  "Stats.o": {},
                  "SuffixArrayFuns.o": {},
                  "ThreadControl.o": {},
                  "TimeFunctions.o": {},
                  "Transcript.o": {},
                  "Transcript_alignScore.o": {},
                  "Transcript_generateCigarP.o": {},
                  "Transcript_variationAdjust.o": {},
                  "Transcriptome.o": {},
                  "Transcriptome_geneCountsAddAlign.o": {},
                  "Transcriptome_quantAlign.o": {},
                  "Variation.o": {},
                  "alignSmithWaterman.o": {},
                  "bamRemoveDuplicates.o": {},
                  "bam_cat.o": {},
                  "binarySearch2.o": {},
                  "blocksOverlap.o": {},
                  "extendAlign.o": {},
                  "funCompareUintAndSuffixes.o": {},
                  "funCompareUintAndSuffixesMemcmp.o": {},
                  "genomeParametersWrite.o": {},
                  "genomeSAindex.o": {},
                  "genomeScanFastaFiles.o": {},
                  "htslib": {
                    "bgzf.o": {},
                    "cram": {
                      "cram_codecs.o": {},
                      "cram_decode.o": {},
                      "cram_encode.o": {},
                      "cram_index.o": {},
                      "cram_io.o": {},
                      "cram_samtools.o": {},
                      "cram_stats.o": {},
                      "files.o": {},
                      "mFILE.o": {},
                      "md5.o": {},
                      "open_trace_file.o": {},
                      "pooled_alloc.o": {},
                      "sam_header.o": {},
                      "string_alloc.o": {},
                      "thread_pool.o": {},
                      "vlen.o": {},
                      "zfio.o": {}
                    },
                    "faidx.o": {},
                    "hfile.o": {},
                    "hfile_net.o": {},
                    "hts.o": {},
                    "kfunc.o": {},
                    "knetfile.o": {},
                    "kstring.o": {},
                    "libhts.a": {},
                    "sam.o": {},
                    "synced_bcf_reader.o": {},
                    "tbx.o": {},
                    "vcf.o": {},
                    "vcf_sweep.o": {},
                    "vcfutils.o": {},
                    "version.h": {}
                  },
                  "insertSeqSA.o": {},
                  "loadGTF.o": {},
                  "mapThreadsSpawn.o": {},
                  "outputSJ.o": {},
                  "readLoad.o": {},
                  "serviceFuns.o": {},
                  "signalFromBAM.o": {},
                  "sjdbBuildIndex.o": {},
                  "sjdbInsertJunctions.o": {},
                  "sjdbLoadFromFiles.o": {},
                  "sjdbLoadFromStream.o": {},
                  "sjdbPrepare.o": {},
                  "stitchAlignToTranscript.o": {},
                  "stitchWindowAligns.o": {},
                  "streamFuns.o": {},
                  "stringSubstituteAll.o": {},
                  "sysRemoveDir.o": {}
                }
              },
              "star-index.sh": {}
            },
            "icon": {
              "starIndex.png": {}
            },
            "starIndex.attrs": {},
            "starIndex.json": {},
            "starIndex.py": {},
            "starIndex.states": {}
          }
        }
      }
    },
    "GDC_mRNA_multi_dr15": {
      "GDC_mRNA_multi_dr15.ows": {},
      "widgets": {
        "GDC_mRNA_multi_dr15": {
          "StarFusion": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "StarFusion.attrs": {},
            "StarFusion.json": {},
            "StarFusion.py": {},
            "StarFusion.states": {},
            "icon": {
              "starfusion.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "arriba": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "arriba.attrs": {},
            "arriba.json": {},
            "arriba.py": {},
            "arriba.states": {},
            "icon": {
              "arriba.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fpkm": {
            "Dockerfiles": {
              "Dockerfile": {},
              "fpkm.pl": {}
            },
            "fpkm.attrs": {},
            "fpkm.json": {},
            "fpkm.py": {},
            "fpkm.states": {},
            "icon": {
              "normalize_pl.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "htseq": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "htseq.attrs": {},
            "htseq.json": {},
            "htseq.py": {},
            "htseq.states": {},
            "icon": {
              "htseq.png": {}
            }
          },
          "icon": {
            "RNAseq.png": {}
          },
          "samtools_index": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samindex.png": {}
            },
            "samtools_index.attrs": {},
            "samtools_index.json": {},
            "samtools_index.py": {},
            "samtools_index.states": {}
          },
          "samtools_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samsort.png": {}
            },
            "samtools_sort.attrs": {},
            "samtools_sort.json": {},
            "samtools_sort.py": {},
            "samtools_sort.states": {}
          },
          "starAlign": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "STAR-2.6.0c": {
                ".gitignore": {},
                ".gitmodules": {},
                ".travis.yml": {},
                "CHANGES.md": {},
                "LICENSE": {},
                "README.md": {},
                "RELEASEnotes.md": {},
                "extras": {
                  "doc-latex": {
                    "STARmanual.tex": {},
                    "convertParDefToLatexTable.awk": {},
                    "parametersDefault.tex": {}
                  },
                  "scripts": {
                    "calcInsertCoverage.awk": {},
                    "extractSJfromGTF.sh": {},
                    "filterCirc.awk": {},
                    "mergeLogFinal.awk": {},
                    "mergeSuperContig.awk": {},
                    "sjCollapseSamples.awk": {},
                    "sjFromSAMcollapseUandM.awk": {},
                    "sjFromSAMcollapseUandM_inclOverlaps.awk": {},
                    "sjMotif.m": {},
                    "tagXSstrandedData.awk": {},
                    "transcriptTypes.awk": {},
                    "transfragsFromBedGraph.awk": {}
                  }
                },
                "source": {
                  "BAMbinSortByCoordinate.cpp": {},
                  "BAMbinSortByCoordinate.h": {},
                  "BAMbinSortUnmapped.cpp": {},
                  "BAMbinSortUnmapped.h": {},
                  "BAMfunctions.cpp": {},
                  "BAMfunctions.h": {},
                  "BAMoutput.cpp": {},
                  "BAMoutput.h": {},
                  "Chain.cpp": {},
                  "Chain.h": {},
                  "ChimericAlign.cpp": {},
                  "ChimericAlign.h": {},
                  "ChimericAlign_chimericJunctionOutput.cpp": {},
                  "ChimericAlign_chimericStitching.cpp": {},
                  "ChimericDetection.cpp": {},
                  "ChimericDetection.h": {},
                  "ChimericDetection_chimericDetectionMult.cpp": {},
                  "ChimericSegment.cpp": {},
                  "ChimericSegment.h": {},
                  "ChimericTranscript.h": {},
                  "ErrorWarning.cpp": {},
                  "ErrorWarning.h": {},
                  "Genome.cpp": {},
                  "Genome.h": {},
                  "Genome_genomeGenerate.cpp": {},
                  "Genome_insertSequences.cpp": {},
                  "GlobalVariables.cpp": {},
                  "GlobalVariables.h": {},
                  "InOutStreams.cpp": {},
                  "InOutStreams.h": {},
                  "IncludeDefine.h": {},
                  "Makefile": {},
                  "OutSJ.cpp": {},
                  "OutSJ.h": {},
                  "PackedArray.cpp": {},
                  "PackedArray.h": {},
                  "ParameterInfo.h": {},
                  "Parameters.cpp": {},
                  "Parameters.h": {},
                  "ParametersChimeric.h": {},
                  "ParametersGenome.h": {},
                  "Parameters_closeReadsFiles.cpp": {},
                  "Parameters_openReadsFiles.cpp": {},
                  "Parameters_readSAMheader.cpp": {},
                  "Quantifications.cpp": {},
                  "Quantifications.h": {},
                  "ReadAlign.cpp": {},
                  "ReadAlign.h": {},
                  "ReadAlignChunk.cpp": {},
                  "ReadAlignChunk.h": {},
                  "ReadAlignChunk_mapChunk.cpp": {},
                  "ReadAlignChunk_processChunks.cpp": {},
                  "ReadAlign_CIGAR.cpp": {},
                  "ReadAlign_alignBAM.cpp": {},
                  "ReadAlign_assignAlignToWindow.cpp": {},
                  "ReadAlign_calcCIGAR.cpp": {},
                  "ReadAlign_chimericDetection.cpp": {},
                  "ReadAlign_chimericDetectionOld.cpp": {},
                  "ReadAlign_chimericDetectionOldOutput.cpp": {},
                  "ReadAlign_chimericDetectionPEmerged.cpp": {},
                  "ReadAlign_createExtendWindowsWithAlign.cpp": {},
                  "ReadAlign_mapOneRead.cpp": {},
                  "ReadAlign_mappedFilter.cpp": {},
                  "ReadAlign_maxMappableLength2strands.cpp": {},
                  "ReadAlign_multMapSelect.cpp": {},
                  "ReadAlign_oneRead.cpp": {},
                  "ReadAlign_outputAlignments.cpp": {},
                  "ReadAlign_outputTranscriptCIGARp.cpp": {},
                  "ReadAlign_outputTranscriptSAM.cpp": {},
                  "ReadAlign_outputTranscriptSJ.cpp": {},
                  "ReadAlign_outputVariation.cpp": {},
                  "ReadAlign_peOverlapMergeMap.cpp": {},
                  "ReadAlign_quantTranscriptome.cpp": {},
                  "ReadAlign_stitchPieces.cpp": {},
                  "ReadAlign_stitchWindowSeeds.cpp": {},
                  "ReadAlign_storeAligns.cpp": {},
                  "ReadAlign_waspMap.cpp": {},
                  "STAR.cpp": {},
                  "SequenceFuns.cpp": {},
                  "SequenceFuns.h": {},
                  "SharedMemory.cpp": {},
                  "SharedMemory.h": {},
                  "SjdbClass.h": {},
                  "Stats.cpp": {},
                  "Stats.h": {},
                  "SuffixArrayFuns.cpp": {},
                  "SuffixArrayFuns.h": {},
                  "ThreadControl.cpp": {},
                  "ThreadControl.h": {},
                  "TimeFunctions.cpp": {},
                  "TimeFunctions.h": {},
                  "Transcript.cpp": {},
                  "Transcript.h": {},
                  "Transcript_alignScore.cpp": {},
                  "Transcript_generateCigarP.cpp": {},
                  "Transcript_variationAdjust.cpp": {},
                  "Transcript_variationOutput.cpp": {},
                  "Transcriptome.cpp": {},
                  "Transcriptome.h": {},
                  "Transcriptome_geneCountsAddAlign.cpp": {},
                  "Transcriptome_quantAlign.cpp": {},
                  "VERSION": {},
                  "Variation.cpp": {},
                  "Variation.h": {},
                  "alignSmithWaterman.cpp": {},
                  "alignSmithWaterman.h": {},
                  "bamRemoveDuplicates.cpp": {},
                  "bamRemoveDuplicates.h": {},
                  "bam_cat.c": {},
                  "bam_cat.h": {},
                  "binarySearch2.cpp": {},
                  "binarySearch2.h": {},
                  "blocksOverlap.cpp": {},
                  "blocksOverlap.h": {},
                  "extendAlign.cpp": {},
                  "extendAlign.h": {},
                  "funCompareUintAndSuffixes.cpp": {},
                  "funCompareUintAndSuffixes.h": {},
                  "funCompareUintAndSuffixesMemcmp.cpp": {},
                  "funCompareUintAndSuffixesMemcmp.h": {},
                  "genomeGenerate.h": {},
                  "genomeParametersWrite.cpp": {},
                  "genomeParametersWrite.h": {},
                  "genomeSAindex.cpp": {},
                  "genomeSAindex.h": {},
                  "genomeScanFastaFiles.cpp": {},
                  "genomeScanFastaFiles.h": {},
                  "htslib": {
                    ".gitignore": {},
                    ".travis.yml": {},
                    "Makefile": {},
                    "README.md": {},
                    "bgzf.c": {},
                    "bgzip.c": {},
                    "config.h": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "files.c": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "md5.c": {},
                      "md5.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "sam_header.c": {},
                      "sam_header.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {},
                      "thread_pool.c": {},
                      "thread_pool.h": {},
                      "vlen.c": {},
                      "vlen.h": {},
                      "zfio.c": {},
                      "zfio.h": {}
                    },
                    "faidx.5": {},
                    "faidx.c": {},
                    "hfile.c": {},
                    "hfile_internal.h": {},
                    "hfile_net.c": {},
                    "hts.c": {},
                    "htslib.mk": {},
                    "htslib": {
                      "bgzf.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstdint.h": {},
                      "kstring.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {}
                  },
                  "insertSeqSA.cpp": {},
                  "insertSeqSA.h": {},
                  "loadGTF.cpp": {},
                  "loadGTF.h": {},
                  "mapThreadsSpawn.cpp": {},
                  "mapThreadsSpawn.h": {},
                  "outputSJ.cpp": {},
                  "outputSJ.h": {},
                  "parametersDefault": {},
                  "parametersDefault.xxd": {},
                  "readLoad.cpp": {},
                  "readLoad.h": {},
                  "serviceFuns.cpp": {},
                  "signalFromBAM.cpp": {},
                  "signalFromBAM.h": {},
                  "sjAlignSplit.cpp": {},
                  "sjdbBuildIndex.cpp": {},
                  "sjdbBuildIndex.h": {},
                  "sjdbInsertJunctions.cpp": {},
                  "sjdbInsertJunctions.h": {},
                  "sjdbLoadFromFiles.cpp": {},
                  "sjdbLoadFromFiles.h": {},
                  "sjdbLoadFromStream.cpp": {},
                  "sjdbLoadFromStream.h": {},
                  "sjdbPrepare.cpp": {},
                  "sjdbPrepare.h": {},
                  "sortSuffixesBucket.h": {},
                  "stitchAlignToTranscript.cpp": {},
                  "stitchAlignToTranscript.h": {},
                  "stitchGapIndel.cpp": {},
                  "stitchWindowAligns.cpp": {},
                  "stitchWindowAligns.h": {},
                  "streamFuns.cpp": {},
                  "streamFuns.h": {},
                  "stringSubstituteAll.cpp": {},
                  "stringSubstituteAll.h": {},
                  "sysRemoveDir.cpp": {},
                  "sysRemoveDir.h": {}
                }
              },
              "build.sh": {},
              "debian": {
                "build.sh": {}
              },
              "runstar.sh": {}
            },
            "icon": {
              "staralign.png": {}
            },
            "starAlign.attrs": {},
            "starAlign.json": {},
            "starAlign.py": {},
            "starAlign.states": {}
          },
          "starIndex": {
            "Dockerfiles": {
              "Dockerfile": {},
              "STAR-2.6.0c": {
                "source": {
                  "BAMbinSortByCoordinate.o": {},
                  "BAMbinSortUnmapped.o": {},
                  "BAMfunctions.o": {},
                  "BAMoutput.o": {},
                  "Chain.o": {},
                  "ChimericAlign_chimericJunctionOutput.o": {},
                  "ChimericAlign_chimericStitching.o": {},
                  "ChimericDetection.o": {},
                  "ChimericDetection_chimericDetectionMult.o": {},
                  "Depend.list": {},
                  "ErrorWarning.o": {},
                  "Genome.o": {},
                  "Genome_genomeGenerate.o": {},
                  "Genome_insertSequences.o": {},
                  "InOutStreams.o": {},
                  "OutSJ.o": {},
                  "PackedArray.o": {},
                  "Parameters.o": {},
                  "Parameters_readSAMheader.o": {},
                  "Quantifications.o": {},
                  "ReadAlign.o": {},
                  "ReadAlignChunk.o": {},
                  "ReadAlignChunk_mapChunk.o": {},
                  "ReadAlignChunk_processChunks.o": {},
                  "ReadAlign_alignBAM.o": {},
                  "ReadAlign_assignAlignToWindow.o": {},
                  "ReadAlign_chimericDetection.o": {},
                  "ReadAlign_chimericDetectionOld.o": {},
                  "ReadAlign_chimericDetectionOldOutput.o": {},
                  "ReadAlign_chimericDetectionPEmerged.o": {},
                  "ReadAlign_createExtendWindowsWithAlign.o": {},
                  "ReadAlign_mapOneRead.o": {},
                  "ReadAlign_mappedFilter.o": {},
                  "ReadAlign_maxMappableLength2strands.o": {},
                  "ReadAlign_multMapSelect.o": {},
                  "ReadAlign_oneRead.o": {},
                  "ReadAlign_outputAlignments.o": {},
                  "ReadAlign_outputTranscriptCIGARp.o": {},
                  "ReadAlign_outputTranscriptSAM.o": {},
                  "ReadAlign_outputTranscriptSJ.o": {},
                  "ReadAlign_peOverlapMergeMap.o": {},
                  "ReadAlign_quantTranscriptome.o": {},
                  "ReadAlign_stitchPieces.o": {},
                  "ReadAlign_stitchWindowSeeds.o": {},
                  "ReadAlign_storeAligns.o": {},
                  "ReadAlign_waspMap.o": {},
                  "STAR": {},
                  "STAR.o": {},
                  "SequenceFuns.o": {},
                  "SharedMemory.o": {},
                  "Stats.o": {},
                  "SuffixArrayFuns.o": {},
                  "ThreadControl.o": {},
                  "TimeFunctions.o": {},
                  "Transcript.o": {},
                  "Transcript_alignScore.o": {},
                  "Transcript_generateCigarP.o": {},
                  "Transcript_variationAdjust.o": {},
                  "Transcriptome.o": {},
                  "Transcriptome_geneCountsAddAlign.o": {},
                  "Transcriptome_quantAlign.o": {},
                  "Variation.o": {},
                  "alignSmithWaterman.o": {},
                  "bamRemoveDuplicates.o": {},
                  "bam_cat.o": {},
                  "binarySearch2.o": {},
                  "blocksOverlap.o": {},
                  "extendAlign.o": {},
                  "funCompareUintAndSuffixes.o": {},
                  "funCompareUintAndSuffixesMemcmp.o": {},
                  "genomeParametersWrite.o": {},
                  "genomeSAindex.o": {},
                  "genomeScanFastaFiles.o": {},
                  "htslib": {
                    "bgzf.o": {},
                    "cram": {
                      "cram_codecs.o": {},
                      "cram_decode.o": {},
                      "cram_encode.o": {},
                      "cram_index.o": {},
                      "cram_io.o": {},
                      "cram_samtools.o": {},
                      "cram_stats.o": {},
                      "files.o": {},
                      "mFILE.o": {},
                      "md5.o": {},
                      "open_trace_file.o": {},
                      "pooled_alloc.o": {},
                      "sam_header.o": {},
                      "string_alloc.o": {},
                      "thread_pool.o": {},
                      "vlen.o": {},
                      "zfio.o": {}
                    },
                    "faidx.o": {},
                    "hfile.o": {},
                    "hfile_net.o": {},
                    "hts.o": {},
                    "kfunc.o": {},
                    "knetfile.o": {},
                    "kstring.o": {},
                    "libhts.a": {},
                    "sam.o": {},
                    "synced_bcf_reader.o": {},
                    "tbx.o": {},
                    "vcf.o": {},
                    "vcf_sweep.o": {},
                    "vcfutils.o": {},
                    "version.h": {}
                  },
                  "insertSeqSA.o": {},
                  "loadGTF.o": {},
                  "mapThreadsSpawn.o": {},
                  "outputSJ.o": {},
                  "readLoad.o": {},
                  "serviceFuns.o": {},
                  "signalFromBAM.o": {},
                  "sjdbBuildIndex.o": {},
                  "sjdbInsertJunctions.o": {},
                  "sjdbLoadFromFiles.o": {},
                  "sjdbLoadFromStream.o": {},
                  "sjdbPrepare.o": {},
                  "stitchAlignToTranscript.o": {},
                  "stitchWindowAligns.o": {},
                  "streamFuns.o": {},
                  "stringSubstituteAll.o": {},
                  "sysRemoveDir.o": {}
                }
              },
              "star-index.sh": {}
            },
            "icon": {
              "starIndex.png": {}
            },
            "starIndex.attrs": {},
            "starIndex.json": {},
            "starIndex.py": {},
            "starIndex.states": {}
          }
        }
      }
    },
    "GDC_mRNA_multi_dr32chr22": {
      "GDC_mRNA_multi_dr32chr22.ows": {},
      "widgets": {
        "GDC_mRNA_multi_dr32chr22": {
          "GDC_mRNA_multi_dr32_fpkm_fpkm": {
            "Dockerfiles": {
              "Dockerfile": {},
              "fpkm.pl": {}
            },
            "GDC_mRNA_multi_dr32_fpkm_fpkm.attrs": {},
            "GDC_mRNA_multi_dr32_fpkm_fpkm.json": {},
            "GDC_mRNA_multi_dr32_fpkm_fpkm.py": {},
            "GDC_mRNA_multi_dr32_fpkm_fpkm.states": {},
            "icon": {
              "normalize_pl.png": {}
            }
          },
          "StarFusion": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "StarFusion.attrs": {},
            "StarFusion.json": {},
            "StarFusion.py": {},
            "StarFusion.states": {},
            "icon": {
              "starfusion.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "Utilities_gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "Utilities_gnumeric.attrs": {},
            "Utilities_gnumeric.json": {},
            "Utilities_gnumeric.py": {},
            "Utilities_gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "__init__.py": {},
          "arriba": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "arriba.attrs": {},
            "arriba.json": {},
            "arriba.py": {},
            "arriba.states": {},
            "icon": {
              "arriba.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fpkm": {
            "Dockerfiles": {
              "Dockerfile": {},
              "fpkm.pl": {}
            },
            "fpkm.attrs": {},
            "fpkm.json": {},
            "fpkm.py": {},
            "fpkm.states": {},
            "icon": {
              "normalize_pl.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "htseq": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "htseq.attrs": {},
            "htseq.json": {},
            "htseq.py": {},
            "htseq.states": {},
            "icon": {
              "htseq.png": {}
            }
          },
          "icon": {
            "RNAseq.png": {}
          },
          "samtools_index": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samindex.png": {}
            },
            "samtools_index.attrs": {},
            "samtools_index.json": {},
            "samtools_index.py": {},
            "samtools_index.states": {}
          },
          "samtools_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samsort.png": {}
            },
            "samtools_sort.attrs": {},
            "samtools_sort.json": {},
            "samtools_sort.py": {},
            "samtools_sort.states": {}
          },
          "starAlign": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "STAR-2.6.0c": {
                ".gitignore": {},
                ".gitmodules": {},
                ".travis.yml": {},
                "CHANGES.md": {},
                "LICENSE": {},
                "README.md": {},
                "RELEASEnotes.md": {},
                "extras": {
                  "doc-latex": {
                    "STARmanual.tex": {},
                    "convertParDefToLatexTable.awk": {},
                    "parametersDefault.tex": {}
                  },
                  "scripts": {
                    "calcInsertCoverage.awk": {},
                    "extractSJfromGTF.sh": {},
                    "filterCirc.awk": {},
                    "mergeLogFinal.awk": {},
                    "mergeSuperContig.awk": {},
                    "sjCollapseSamples.awk": {},
                    "sjFromSAMcollapseUandM.awk": {},
                    "sjFromSAMcollapseUandM_inclOverlaps.awk": {},
                    "sjMotif.m": {},
                    "tagXSstrandedData.awk": {},
                    "transcriptTypes.awk": {},
                    "transfragsFromBedGraph.awk": {}
                  }
                },
                "source": {
                  "BAMbinSortByCoordinate.cpp": {},
                  "BAMbinSortByCoordinate.h": {},
                  "BAMbinSortUnmapped.cpp": {},
                  "BAMbinSortUnmapped.h": {},
                  "BAMfunctions.cpp": {},
                  "BAMfunctions.h": {},
                  "BAMoutput.cpp": {},
                  "BAMoutput.h": {},
                  "Chain.cpp": {},
                  "Chain.h": {},
                  "ChimericAlign.cpp": {},
                  "ChimericAlign.h": {},
                  "ChimericAlign_chimericJunctionOutput.cpp": {},
                  "ChimericAlign_chimericStitching.cpp": {},
                  "ChimericDetection.cpp": {},
                  "ChimericDetection.h": {},
                  "ChimericDetection_chimericDetectionMult.cpp": {},
                  "ChimericSegment.cpp": {},
                  "ChimericSegment.h": {},
                  "ChimericTranscript.h": {},
                  "ErrorWarning.cpp": {},
                  "ErrorWarning.h": {},
                  "Genome.cpp": {},
                  "Genome.h": {},
                  "Genome_genomeGenerate.cpp": {},
                  "Genome_insertSequences.cpp": {},
                  "GlobalVariables.cpp": {},
                  "GlobalVariables.h": {},
                  "InOutStreams.cpp": {},
                  "InOutStreams.h": {},
                  "IncludeDefine.h": {},
                  "Makefile": {},
                  "OutSJ.cpp": {},
                  "OutSJ.h": {},
                  "PackedArray.cpp": {},
                  "PackedArray.h": {},
                  "ParameterInfo.h": {},
                  "Parameters.cpp": {},
                  "Parameters.h": {},
                  "ParametersChimeric.h": {},
                  "ParametersGenome.h": {},
                  "Parameters_closeReadsFiles.cpp": {},
                  "Parameters_openReadsFiles.cpp": {},
                  "Parameters_readSAMheader.cpp": {},
                  "Quantifications.cpp": {},
                  "Quantifications.h": {},
                  "ReadAlign.cpp": {},
                  "ReadAlign.h": {},
                  "ReadAlignChunk.cpp": {},
                  "ReadAlignChunk.h": {},
                  "ReadAlignChunk_mapChunk.cpp": {},
                  "ReadAlignChunk_processChunks.cpp": {},
                  "ReadAlign_CIGAR.cpp": {},
                  "ReadAlign_alignBAM.cpp": {},
                  "ReadAlign_assignAlignToWindow.cpp": {},
                  "ReadAlign_calcCIGAR.cpp": {},
                  "ReadAlign_chimericDetection.cpp": {},
                  "ReadAlign_chimericDetectionOld.cpp": {},
                  "ReadAlign_chimericDetectionOldOutput.cpp": {},
                  "ReadAlign_chimericDetectionPEmerged.cpp": {},
                  "ReadAlign_createExtendWindowsWithAlign.cpp": {},
                  "ReadAlign_mapOneRead.cpp": {},
                  "ReadAlign_mappedFilter.cpp": {},
                  "ReadAlign_maxMappableLength2strands.cpp": {},
                  "ReadAlign_multMapSelect.cpp": {},
                  "ReadAlign_oneRead.cpp": {},
                  "ReadAlign_outputAlignments.cpp": {},
                  "ReadAlign_outputTranscriptCIGARp.cpp": {},
                  "ReadAlign_outputTranscriptSAM.cpp": {},
                  "ReadAlign_outputTranscriptSJ.cpp": {},
                  "ReadAlign_outputVariation.cpp": {},
                  "ReadAlign_peOverlapMergeMap.cpp": {},
                  "ReadAlign_quantTranscriptome.cpp": {},
                  "ReadAlign_stitchPieces.cpp": {},
                  "ReadAlign_stitchWindowSeeds.cpp": {},
                  "ReadAlign_storeAligns.cpp": {},
                  "ReadAlign_waspMap.cpp": {},
                  "STAR.cpp": {},
                  "SequenceFuns.cpp": {},
                  "SequenceFuns.h": {},
                  "SharedMemory.cpp": {},
                  "SharedMemory.h": {},
                  "SjdbClass.h": {},
                  "Stats.cpp": {},
                  "Stats.h": {},
                  "SuffixArrayFuns.cpp": {},
                  "SuffixArrayFuns.h": {},
                  "ThreadControl.cpp": {},
                  "ThreadControl.h": {},
                  "TimeFunctions.cpp": {},
                  "TimeFunctions.h": {},
                  "Transcript.cpp": {},
                  "Transcript.h": {},
                  "Transcript_alignScore.cpp": {},
                  "Transcript_generateCigarP.cpp": {},
                  "Transcript_variationAdjust.cpp": {},
                  "Transcript_variationOutput.cpp": {},
                  "Transcriptome.cpp": {},
                  "Transcriptome.h": {},
                  "Transcriptome_geneCountsAddAlign.cpp": {},
                  "Transcriptome_quantAlign.cpp": {},
                  "VERSION": {},
                  "Variation.cpp": {},
                  "Variation.h": {},
                  "alignSmithWaterman.cpp": {},
                  "alignSmithWaterman.h": {},
                  "bamRemoveDuplicates.cpp": {},
                  "bamRemoveDuplicates.h": {},
                  "bam_cat.c": {},
                  "bam_cat.h": {},
                  "binarySearch2.cpp": {},
                  "binarySearch2.h": {},
                  "blocksOverlap.cpp": {},
                  "blocksOverlap.h": {},
                  "extendAlign.cpp": {},
                  "extendAlign.h": {},
                  "funCompareUintAndSuffixes.cpp": {},
                  "funCompareUintAndSuffixes.h": {},
                  "funCompareUintAndSuffixesMemcmp.cpp": {},
                  "funCompareUintAndSuffixesMemcmp.h": {},
                  "genomeGenerate.h": {},
                  "genomeParametersWrite.cpp": {},
                  "genomeParametersWrite.h": {},
                  "genomeSAindex.cpp": {},
                  "genomeSAindex.h": {},
                  "genomeScanFastaFiles.cpp": {},
                  "genomeScanFastaFiles.h": {},
                  "htslib": {
                    ".gitignore": {},
                    ".travis.yml": {},
                    "Makefile": {},
                    "README.md": {},
                    "bgzf.c": {},
                    "bgzip.c": {},
                    "config.h": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "files.c": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "md5.c": {},
                      "md5.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "sam_header.c": {},
                      "sam_header.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {},
                      "thread_pool.c": {},
                      "thread_pool.h": {},
                      "vlen.c": {},
                      "vlen.h": {},
                      "zfio.c": {},
                      "zfio.h": {}
                    },
                    "faidx.5": {},
                    "faidx.c": {},
                    "hfile.c": {},
                    "hfile_internal.h": {},
                    "hfile_net.c": {},
                    "hts.c": {},
                    "htslib.mk": {},
                    "htslib": {
                      "bgzf.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstdint.h": {},
                      "kstring.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {}
                  },
                  "insertSeqSA.cpp": {},
                  "insertSeqSA.h": {},
                  "loadGTF.cpp": {},
                  "loadGTF.h": {},
                  "mapThreadsSpawn.cpp": {},
                  "mapThreadsSpawn.h": {},
                  "outputSJ.cpp": {},
                  "outputSJ.h": {},
                  "parametersDefault": {},
                  "parametersDefault.xxd": {},
                  "readLoad.cpp": {},
                  "readLoad.h": {},
                  "serviceFuns.cpp": {},
                  "signalFromBAM.cpp": {},
                  "signalFromBAM.h": {},
                  "sjAlignSplit.cpp": {},
                  "sjdbBuildIndex.cpp": {},
                  "sjdbBuildIndex.h": {},
                  "sjdbInsertJunctions.cpp": {},
                  "sjdbInsertJunctions.h": {},
                  "sjdbLoadFromFiles.cpp": {},
                  "sjdbLoadFromFiles.h": {},
                  "sjdbLoadFromStream.cpp": {},
                  "sjdbLoadFromStream.h": {},
                  "sjdbPrepare.cpp": {},
                  "sjdbPrepare.h": {},
                  "sortSuffixesBucket.h": {},
                  "stitchAlignToTranscript.cpp": {},
                  "stitchAlignToTranscript.h": {},
                  "stitchGapIndel.cpp": {},
                  "stitchWindowAligns.cpp": {},
                  "stitchWindowAligns.h": {},
                  "streamFuns.cpp": {},
                  "streamFuns.h": {},
                  "stringSubstituteAll.cpp": {},
                  "stringSubstituteAll.h": {},
                  "sysRemoveDir.cpp": {},
                  "sysRemoveDir.h": {}
                }
              },
              "build.sh": {},
              "debian": {
                "build.sh": {}
              },
              "runstar.sh": {}
            },
            "icon": {
              "staralign.png": {}
            },
            "starAlign.attrs": {},
            "starAlign.json": {},
            "starAlign.py": {},
            "starAlign.states": {}
          },
          "starAlignBam": {
            "icon": {
              "default.png": {}
            },
            "starAlignBam.attrs": {},
            "starAlignBam.json": {},
            "starAlignBam.py": {},
            "starAlignBam.states": {}
          },
          "starIndex": {
            "Dockerfiles": {
              "Dockerfile": {},
              "STAR-2.6.0c": {
                "source": {
                  "BAMbinSortByCoordinate.o": {},
                  "BAMbinSortUnmapped.o": {},
                  "BAMfunctions.o": {},
                  "BAMoutput.o": {},
                  "Chain.o": {},
                  "ChimericAlign_chimericJunctionOutput.o": {},
                  "ChimericAlign_chimericStitching.o": {},
                  "ChimericDetection.o": {},
                  "ChimericDetection_chimericDetectionMult.o": {},
                  "Depend.list": {},
                  "ErrorWarning.o": {},
                  "Genome.o": {},
                  "Genome_genomeGenerate.o": {},
                  "Genome_insertSequences.o": {},
                  "InOutStreams.o": {},
                  "OutSJ.o": {},
                  "PackedArray.o": {},
                  "Parameters.o": {},
                  "Parameters_readSAMheader.o": {},
                  "Quantifications.o": {},
                  "ReadAlign.o": {},
                  "ReadAlignChunk.o": {},
                  "ReadAlignChunk_mapChunk.o": {},
                  "ReadAlignChunk_processChunks.o": {},
                  "ReadAlign_alignBAM.o": {},
                  "ReadAlign_assignAlignToWindow.o": {},
                  "ReadAlign_chimericDetection.o": {},
                  "ReadAlign_chimericDetectionOld.o": {},
                  "ReadAlign_chimericDetectionOldOutput.o": {},
                  "ReadAlign_chimericDetectionPEmerged.o": {},
                  "ReadAlign_createExtendWindowsWithAlign.o": {},
                  "ReadAlign_mapOneRead.o": {},
                  "ReadAlign_mappedFilter.o": {},
                  "ReadAlign_maxMappableLength2strands.o": {},
                  "ReadAlign_multMapSelect.o": {},
                  "ReadAlign_oneRead.o": {},
                  "ReadAlign_outputAlignments.o": {},
                  "ReadAlign_outputTranscriptCIGARp.o": {},
                  "ReadAlign_outputTranscriptSAM.o": {},
                  "ReadAlign_outputTranscriptSJ.o": {},
                  "ReadAlign_peOverlapMergeMap.o": {},
                  "ReadAlign_quantTranscriptome.o": {},
                  "ReadAlign_stitchPieces.o": {},
                  "ReadAlign_stitchWindowSeeds.o": {},
                  "ReadAlign_storeAligns.o": {},
                  "ReadAlign_waspMap.o": {},
                  "STAR": {},
                  "STAR.o": {},
                  "SequenceFuns.o": {},
                  "SharedMemory.o": {},
                  "Stats.o": {},
                  "SuffixArrayFuns.o": {},
                  "ThreadControl.o": {},
                  "TimeFunctions.o": {},
                  "Transcript.o": {},
                  "Transcript_alignScore.o": {},
                  "Transcript_generateCigarP.o": {},
                  "Transcript_variationAdjust.o": {},
                  "Transcriptome.o": {},
                  "Transcriptome_geneCountsAddAlign.o": {},
                  "Transcriptome_quantAlign.o": {},
                  "Variation.o": {},
                  "alignSmithWaterman.o": {},
                  "bamRemoveDuplicates.o": {},
                  "bam_cat.o": {},
                  "binarySearch2.o": {},
                  "blocksOverlap.o": {},
                  "extendAlign.o": {},
                  "funCompareUintAndSuffixes.o": {},
                  "funCompareUintAndSuffixesMemcmp.o": {},
                  "genomeParametersWrite.o": {},
                  "genomeSAindex.o": {},
                  "genomeScanFastaFiles.o": {},
                  "htslib": {
                    "bgzf.o": {},
                    "cram": {
                      "cram_codecs.o": {},
                      "cram_decode.o": {},
                      "cram_encode.o": {},
                      "cram_index.o": {},
                      "cram_io.o": {},
                      "cram_samtools.o": {},
                      "cram_stats.o": {},
                      "files.o": {},
                      "mFILE.o": {},
                      "md5.o": {},
                      "open_trace_file.o": {},
                      "pooled_alloc.o": {},
                      "sam_header.o": {},
                      "string_alloc.o": {},
                      "thread_pool.o": {},
                      "vlen.o": {},
                      "zfio.o": {}
                    },
                    "faidx.o": {},
                    "hfile.o": {},
                    "hfile_net.o": {},
                    "hts.o": {},
                    "kfunc.o": {},
                    "knetfile.o": {},
                    "kstring.o": {},
                    "libhts.a": {},
                    "sam.o": {},
                    "synced_bcf_reader.o": {},
                    "tbx.o": {},
                    "vcf.o": {},
                    "vcf_sweep.o": {},
                    "vcfutils.o": {},
                    "version.h": {}
                  },
                  "insertSeqSA.o": {},
                  "loadGTF.o": {},
                  "mapThreadsSpawn.o": {},
                  "outputSJ.o": {},
                  "readLoad.o": {},
                  "serviceFuns.o": {},
                  "signalFromBAM.o": {},
                  "sjdbBuildIndex.o": {},
                  "sjdbInsertJunctions.o": {},
                  "sjdbLoadFromFiles.o": {},
                  "sjdbLoadFromStream.o": {},
                  "sjdbPrepare.o": {},
                  "stitchAlignToTranscript.o": {},
                  "stitchWindowAligns.o": {},
                  "streamFuns.o": {},
                  "stringSubstituteAll.o": {},
                  "sysRemoveDir.o": {}
                }
              },
              "star-index.sh": {}
            },
            "icon": {
              "starIndex.png": {}
            },
            "starIndex.attrs": {},
            "starIndex.json": {},
            "starIndex.py": {},
            "starIndex.states": {}
          }
        }
      }
    },
    "GDC_mRNA_original": {
      "GDC_mRNA_original.ows": {},
      "widgets": {
        "GDC_mRNA_original": {
          "StarFusion": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "StarFusion.attrs": {},
            "StarFusion.json": {},
            "StarFusion.py": {},
            "StarFusion.states": {},
            "icon": {
              "starfusion.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "arriba": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "arriba.attrs": {},
            "arriba.json": {},
            "arriba.py": {},
            "arriba.states": {},
            "icon": {
              "arriba.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "fpkm": {
            "Dockerfiles": {
              "Dockerfile": {},
              "fpkm.pl": {}
            },
            "fpkm.attrs": {},
            "fpkm.json": {},
            "fpkm.py": {},
            "fpkm.states": {},
            "icon": {
              "normalize_pl.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "htseq": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "htseq.attrs": {},
            "htseq.json": {},
            "htseq.py": {},
            "htseq.states": {},
            "icon": {
              "htseq.png": {}
            }
          },
          "icon": {
            "RNAseq.png": {}
          },
          "samtools_index": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samindex.png": {}
            },
            "samtools_index.attrs": {},
            "samtools_index.json": {},
            "samtools_index.py": {},
            "samtools_index.states": {}
          },
          "samtools_sort": {
            "Dockerfiles": {
              "Dockerfile": {},
              "build.sh": {},
              "build": {
                "Dockerfile": {},
                "samtools": {
                  "AUTHORS": {},
                  "ChangeLog.old": {},
                  "INSTALL": {},
                  "LICENSE": {},
                  "Makefile": {},
                  "NEWS": {},
                  "README": {},
                  "amplicon_stats.c": {},
                  "bam.c": {},
                  "bam.h": {},
                  "bam2bcf.c": {},
                  "bam2bcf.h": {},
                  "bam2bcf_indel.c": {},
                  "bam2depth.c": {},
                  "bam_addrprg.c": {},
                  "bam_ampliconclip.c": {},
                  "bam_ampliconclip.h": {},
                  "bam_aux.c": {},
                  "bam_cat.c": {},
                  "bam_color.c": {},
                  "bam_endian.h": {},
                  "bam_fastq.c": {},
                  "bam_flags.c": {},
                  "bam_index.c": {},
                  "bam_lpileup.c": {},
                  "bam_lpileup.h": {},
                  "bam_markdup.c": {},
                  "bam_mate.c": {},
                  "bam_md.c": {},
                  "bam_plbuf.c": {},
                  "bam_plbuf.h": {},
                  "bam_plcmd.c": {},
                  "bam_quickcheck.c": {},
                  "bam_reheader.c": {},
                  "bam_rmdup.c": {},
                  "bam_rmdupse.c": {},
                  "bam_sort.c": {},
                  "bam_split.c": {},
                  "bam_stat.c": {},
                  "bam_tview.c": {},
                  "bam_tview.h": {},
                  "bam_tview_curses.c": {},
                  "bam_tview_html.c": {},
                  "bamshuf.c": {},
                  "bamtk.c": {},
                  "bedcov.c": {},
                  "bedidx.c": {},
                  "bedidx.h": {},
                  "config.h.in": {},
                  "config.mk.in": {},
                  "configure": {},
                  "configure.ac": {},
                  "coverage.c": {},
                  "cut_target.c": {},
                  "dict.c": {},
                  "doc": {
                    "samtools-addreplacerg.1": {},
                    "samtools-ampliconclip.1": {},
                    "samtools-ampliconstats.1": {},
                    "samtools-bedcov.1": {},
                    "samtools-calmd.1": {},
                    "samtools-cat.1": {},
                    "samtools-collate.1": {},
                    "samtools-coverage.1": {},
                    "samtools-depad.1": {},
                    "samtools-depth.1": {},
                    "samtools-dict.1": {},
                    "samtools-faidx.1": {},
                    "samtools-fasta.1": {},
                    "samtools-fastq.1": {},
                    "samtools-fixmate.1": {},
                    "samtools-flags.1": {},
                    "samtools-flagstat.1": {},
                    "samtools-fqidx.1": {},
                    "samtools-idxstats.1": {},
                    "samtools-index.1": {},
                    "samtools-markdup.1": {},
                    "samtools-merge.1": {},
                    "samtools-mpileup.1": {},
                    "samtools-phase.1": {},
                    "samtools-quickcheck.1": {},
                    "samtools-reheader.1": {},
                    "samtools-rmdup.1": {},
                    "samtools-sort.1": {},
                    "samtools-split.1": {},
                    "samtools-stats.1": {},
                    "samtools-targetcut.1": {},
                    "samtools-tview.1": {},
                    "samtools-view.1": {},
                    "samtools.1": {}
                  },
                  "examples": {
                    "00README.txt": {},
                    "ex1.fa": {},
                    "ex1.sam.gz": {},
                    "toy.fa": {},
                    "toy.sam": {}
                  },
                  "faidx.c": {},
                  "htslib-1.11": {
                    "INSTALL": {},
                    "LICENSE": {},
                    "Makefile": {},
                    "NEWS": {},
                    "README": {},
                    "README.large_positions.md": {},
                    "bcf_sr_sort.c": {},
                    "bcf_sr_sort.h": {},
                    "bgzf.c": {},
                    "bgzip.1": {},
                    "bgzip.c": {},
                    "config.h.in": {},
                    "config.mk.in": {},
                    "configure": {},
                    "configure.ac": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_external.c": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "rANS_byte.h": {},
                      "rANS_static.c": {},
                      "rANS_static.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {}
                    },
                    "errmod.c": {},
                    "faidx.5": {},
                    "faidx.c": {},
                    "header.c": {},
                    "header.h": {},
                    "hfile.c": {},
                    "hfile_gcs.c": {},
                    "hfile_internal.h": {},
                    "hfile_libcurl.c": {},
                    "hfile_net.c": {},
                    "hfile_s3.c": {},
                    "hfile_s3_write.c": {},
                    "hts.c": {},
                    "hts_internal.h": {},
                    "hts_os.c": {},
                    "htsfile.1": {},
                    "htsfile.c": {},
                    "htslib-s3-plugin.7": {},
                    "htslib.mk": {},
                    "htslib.pc.in": {},
                    "htslib": {
                      "bgzf.h": {},
                      "cram.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "hts_endian.h": {},
                      "hts_log.h": {},
                      "hts_os.h": {},
                      "kbitset.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kroundup.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstring.h": {},
                      "regidx.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "thread_pool.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "m4": {
                      "hts_hide_dynamic_syms.m4": {},
                      "hts_prog_cc_warnings.m4": {},
                      "pkg.m4": {}
                    },
                    "md5.c": {},
                    "multipart.c": {},
                    "os": {
                      "lzma_stub.h": {},
                      "rand.c": {}
                    },
                    "plugin.c": {},
                    "probaln.c": {},
                    "realn.c": {},
                    "regidx.c": {},
                    "region.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "sam_internal.h": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "test": {
                      "auxf#values.sam": {},
                      "auxf#values_java.cram": {},
                      "auxf.fa": {},
                      "auxf.fa.fai": {},
                      "bcf-sr": {
                        "merge.noidx.a.vcf": {},
                        "merge.noidx.abc.expected.out": {},
                        "merge.noidx.b.vcf": {},
                        "merge.noidx.c.vcf": {},
                        "merge.noidx.hdr_order.vcf": {},
                        "merge.noidx.rec_order.vcf": {}
                      },
                      "bgziptest.txt": {},
                      "bgziptest.txt.gz": {},
                      "bgziptest.txt.gz.gzi": {},
                      "c1#bounds.sam": {},
                      "c1#clip.sam": {},
                      "c1#noseq.sam": {},
                      "c1#pad1.sam": {},
                      "c1#pad2.sam": {},
                      "c1#pad3.sam": {},
                      "c1#unknown.sam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "c2#pad.sam": {},
                      "c2.fa": {},
                      "c2.fa.fai": {},
                      "ce#1.sam": {},
                      "ce#1000.sam": {},
                      "ce#2.sam": {},
                      "ce#5.sam": {},
                      "ce#5b.sam": {},
                      "ce#5b_java.cram": {},
                      "ce#large_seq.sam": {},
                      "ce#supp.sam": {},
                      "ce#tag_depadded.sam": {},
                      "ce#tag_padded.sam": {},
                      "ce#unmap.sam": {},
                      "ce#unmap1.sam": {},
                      "ce#unmap2.sam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "colons.bam": {},
                      "colons.bam.bai": {},
                      "compare_sam.pl": {},
                      "cross_validate.sh": {},
                      "emptyfile": {},
                      "faidx.fa": {},
                      "fastqs.fq": {},
                      "fastqs_README.txt": {},
                      "fieldarith.c": {},
                      "fieldarith.sam": {},
                      "formatcols.vcf": {},
                      "formatmissing-out.vcf": {},
                      "formatmissing.vcf": {},
                      "fuzz": {
                        "hts_open_fuzzer.c": {}
                      },
                      "header_syms.pl": {},
                      "hfile.c": {},
                      "hts_endian.c": {},
                      "index.bam.bai": {},
                      "index.bam.csi": {},
                      "index.bcf.csi": {},
                      "index.cram.crai": {},
                      "index.sam": {},
                      "index.sam.gz.bai": {},
                      "index.sam.gz.csi": {},
                      "index.vcf": {},
                      "index.vcf.gz.csi": {},
                      "index.vcf.gz.tbi": {},
                      "longrefs": {
                        "index.expected1.vcf": {},
                        "index.expected2.vcf": {},
                        "index.vcf": {},
                        "longref.sam": {},
                        "longref_itr.expected.sam": {},
                        "longref_multi.expected.sam": {}
                      },
                      "maintainer": {
                        "check_copyright.pl": {},
                        "check_spaces.pl": {}
                      },
                      "md#1.sam": {},
                      "md.fa": {},
                      "md.fa.fai": {},
                      "mpileup": {
                        "c1#pad1.out": {},
                        "c1#pad1.sam": {},
                        "c1#pad2.out": {},
                        "c1#pad2.sam": {},
                        "c1#pad3.out": {},
                        "c1#pad3.sam": {},
                        "mp_D.out": {},
                        "mp_D.sam": {},
                        "mp_DI.out": {},
                        "mp_DI.sam": {},
                        "mp_I.out": {},
                        "mp_I.sam": {},
                        "mp_ID.out": {},
                        "mp_ID.sam": {},
                        "mp_N.out": {},
                        "mp_N.sam": {},
                        "mp_N2.out": {},
                        "mp_N2.sam": {},
                        "mp_P.out": {},
                        "mp_P.sam": {},
                        "mpileup.tst": {},
                        "small.bam": {},
                        "small.out": {},
                        "test-pileup.sh": {}
                      },
                      "no_hdr_sq_1.bam": {},
                      "no_hdr_sq_1.bam.csi": {},
                      "no_hdr_sq_1.expected.sam": {},
                      "noroundtrip-out.vcf": {},
                      "noroundtrip.vcf": {},
                      "pileup.c": {},
                      "plugins-dlhts.c": {},
                      "range.bam": {},
                      "range.bam.bai": {},
                      "range.cram": {},
                      "range.cram.crai": {},
                      "range.out": {},
                      "realn01.fa": {},
                      "realn01.fa.fai": {},
                      "realn01.sam": {},
                      "realn01_exp-a.sam": {},
                      "realn01_exp-e.sam": {},
                      "realn01_exp.sam": {},
                      "realn02-r.sam": {},
                      "realn02.fa": {},
                      "realn02.fa.fai": {},
                      "realn02.sam": {},
                      "realn02_exp-a.sam": {},
                      "realn02_exp-e.sam": {},
                      "realn02_exp.sam": {},
                      "sam.c": {},
                      "simple_test_driver.sh": {},
                      "tabix.out": {},
                      "tabix": {
                        "bed_file.Y.100200.out": {},
                        "bed_file.bed": {},
                        "bed_file.separate.out": {},
                        "gff_file.X.2934832.2935190.out": {},
                        "gff_file.gff": {},
                        "large_chr.20.1.2147483647.out": {},
                        "large_chr.vcf": {},
                        "tabix.tst": {},
                        "test-tabix.sh": {},
                        "vcf_file.1.3000151.out": {},
                        "vcf_file.2.3199812.out": {},
                        "vcf_file.bcf": {},
                        "vcf_file.vcf": {}
                      },
                      "test-bcf-sr.c": {},
                      "test-bcf-sr.pl": {},
                      "test-bcf-translate.c": {},
                      "test-bcf-translate.out": {},
                      "test-logging.pl": {},
                      "test-parse-reg.c": {},
                      "test-regidx.c": {},
                      "test-vcf-api.c": {},
                      "test-vcf-api.out": {},
                      "test-vcf-hdr-in.vcf": {},
                      "test-vcf-hdr.out": {},
                      "test-vcf-sweep.c": {},
                      "test-vcf-sweep.out": {},
                      "test.pl": {},
                      "test_bgzf.c": {},
                      "test_index.c": {},
                      "test_kfunc.c": {},
                      "test_kstring.c": {},
                      "test_realn.c": {},
                      "test_str2int.c": {},
                      "test_view.c": {},
                      "thrash_threads1.c": {},
                      "thrash_threads2.c": {},
                      "thrash_threads3.c": {},
                      "thrash_threads4.c": {},
                      "thrash_threads5.c": {},
                      "thrash_threads6.c": {},
                      "thrash_threads7.c": {},
                      "thread_pool.md": {},
                      "with-shlib.sh": {},
                      "xx#MD.sam": {},
                      "xx#MD2.sam": {},
                      "xx#blank.sam": {},
                      "xx#large_aux.sam": {},
                      "xx#large_aux2.sam": {},
                      "xx#large_aux_java.cram": {},
                      "xx#minimal.sam": {},
                      "xx#pair.sam": {},
                      "xx#repeated.sam": {},
                      "xx#rg.sam": {},
                      "xx#tlen.sam": {},
                      "xx#tlen2.sam": {},
                      "xx#triplet.sam": {},
                      "xx#unsorted.sam": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "textutils.c": {},
                    "textutils_internal.h": {},
                    "thread_pool.c": {},
                    "thread_pool_internal.h": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {},
                    "version.sh": {}
                  },
                  "install-sh": {},
                  "lz4": {
                    "LICENSE": {},
                    "lz4.c": {},
                    "lz4.h": {}
                  },
                  "m4": {
                    "ax_with_htslib.m4": {},
                    "hts_prog_cc_warnings.m4": {},
                    "hts_with_curses.m4": {}
                  },
                  "misc": {
                    "HmmGlocal.java": {},
                    "ace2sam.c": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam.c": {},
                    "md5fa.c": {},
                    "md5sum-lite.c": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "r2plot.lua": {},
                    "sam2vcf.pl": {},
                    "samtools.pl": {},
                    "samtools_tab_completion": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "vcfutils.lua": {},
                    "wgsim.1": {},
                    "wgsim.c": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  },
                  "padding.c": {},
                  "phase.c": {},
                  "sam.c": {},
                  "sam.h": {},
                  "sam_opts.c": {},
                  "sam_opts.h": {},
                  "sam_utils.c": {},
                  "sam_view.c": {},
                  "sample.c": {},
                  "sample.h": {},
                  "samtools.h": {},
                  "stats.c": {},
                  "stats_isize.c": {},
                  "stats_isize.h": {},
                  "test": {
                    "addrprg": {
                      "1_fixup.sam": {},
                      "1_fixup.sam.expected": {},
                      "1_fixup.sam.expected.err": {},
                      "2_fixup_orphan.sam": {},
                      "2_fixup_orphan.sam.expected": {},
                      "2_fixup_orphan.sam.expected.err": {},
                      "3_fixup.sam.expected": {},
                      "3_fixup.sam.expected.err": {},
                      "4_fixup_norg.sam": {},
                      "4_fixup_norg.sam.expected": {},
                      "4_fixup_norg.sam.expected.err": {}
                    },
                    "ampliconclip": {
                      "1_delete_tag.expected.sam": {},
                      "1_fail.expected.sam": {},
                      "1_filter.expected.sam": {},
                      "1_hard_clipped.expected.sam": {},
                      "1_original_tag.expected.sam": {},
                      "1_soft_clipped.expected.sam": {},
                      "1_soft_clipped_strand.expected.sam": {},
                      "1_test_data.sam": {},
                      "2_both_clipped.expected.sam": {},
                      "2_both_test_data.sam": {},
                      "ac_test.bed": {}
                    },
                    "ampliconstats": {
                      "stats.expected.txt": {}
                    },
                    "bam2fq": {
                      "1.1.fq.expected": {},
                      "1.2.fq.expected": {},
                      "1.stdout.expected": {},
                      "10.1.fq.expected": {},
                      "10.2.fq.expected": {},
                      "10.s.fq.expected": {},
                      "11.fq.expected": {},
                      "12.1.fq.expected": {},
                      "12.2.fq.expected": {},
                      "12.i.fq.expected": {},
                      "12.s.fq.expected": {},
                      "13.fq.expected": {},
                      "2.1.fq.expected": {},
                      "2.2.fq.expected": {},
                      "2.s.fq.expected": {},
                      "2.stdout.expected": {},
                      "3.1.fq.expected": {},
                      "3.2.fq.expected": {},
                      "3.s.fq.expected": {},
                      "3.stdout.expected": {},
                      "4.1.fq.expected": {},
                      "4.2.fq.expected": {},
                      "4.s.fq.expected": {},
                      "4.stdout.expected": {},
                      "5.1.fq.expected": {},
                      "5.2.fq.expected": {},
                      "5.s.fq.expected": {},
                      "6.1.fq.expected": {},
                      "6.2.fq.expected": {},
                      "6.s.fq.expected": {},
                      "7.1.fq.expected": {},
                      "7.2.fq.expected": {},
                      "7.s.fq.expected": {},
                      "8.1.fq.expected": {},
                      "8.2.fq.expected": {},
                      "8.i.fq.expected": {},
                      "8.s.fq.expected": {},
                      "9.1.fq.expected": {},
                      "9.2.fq.expected": {},
                      "bc.fq.expected": {},
                      "bc10.fq.expected": {},
                      "bc_split.fq.expected": {}
                    },
                    "bedcov": {
                      "bedcov.bam": {},
                      "bedcov.bam.bai": {},
                      "bedcov.bed": {},
                      "bedcov.expected": {},
                      "bedcov_gG.bed": {},
                      "bedcov_gG.expected": {},
                      "bedcov_j.expected": {}
                    },
                    "collate": {
                      "1_fast_collate.sam.expected": {},
                      "2_fast_collate_with_tmp_used.sam.expected": {},
                      "collate.expected.sam": {},
                      "fast_collate.sam": {}
                    },
                    "dat": {
                      "bam2fq.001.sam": {},
                      "bam2fq.002.sam": {},
                      "bam2fq.003.sam": {},
                      "bam2fq.004.sam": {},
                      "bam2fq.005.sam": {},
                      "bam2fq.010.sam": {},
                      "bam2fq.013.sam": {},
                      "bam2fq.703.sam": {},
                      "cat.hdr": {},
                      "cram_md5": {
                        "08c04d512d4797d9ba2a156c1daba468": {},
                        "7c35feac7036c1cdef3bee0cc4b21437": {},
                        "89b96de7acc5918c2858ef92710be7d4": {},
                        "8a3d8deb9edd4ce3346b6061fcee6d0b": {}
                      },
                      "depad.001.fa": {},
                      "depad.001.fa.fai": {},
                      "depad.001p.sam": {},
                      "depad.001u.sam": {},
                      "dict.alias.fa": {},
                      "dict.alias.out": {},
                      "dict.fa": {},
                      "dict.out": {},
                      "empty.expected": {},
                      "large_chrom.out": {},
                      "large_chrom.sam": {},
                      "large_chrom_bai_index.err": {},
                      "mpileup.1.sam": {},
                      "mpileup.2.sam": {},
                      "mpileup.3.sam": {},
                      "mpileup.err.1": {},
                      "mpileup.out.1": {},
                      "mpileup.out.2": {},
                      "mpileup.out.3": {},
                      "mpileup.out.4": {},
                      "mpileup.out.5": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "test_input_1_a.bam": {},
                      "test_input_1_a.bam.bai.expected": {},
                      "test_input_1_a.cram": {},
                      "test_input_1_a.sam": {},
                      "test_input_1_a_regex.sam": {},
                      "test_input_1_ab.X.expected": {},
                      "test_input_1_b.X.expected": {},
                      "test_input_1_b.bam": {},
                      "test_input_1_b.sam": {},
                      "test_input_1_b_regex.sam": {},
                      "test_input_1_c.bam": {},
                      "test_input_1_c.sam": {},
                      "test_input_1_d.sam": {},
                      "view.001.01.bed": {},
                      "view.001.02.bed": {},
                      "view.001.fa": {},
                      "view.001.fa.fai": {},
                      "view.001.sam": {},
                      "view.002.01.bed": {},
                      "view.002.02.bed": {},
                      "view.002.fa": {},
                      "view.002.fa.fai": {},
                      "view.002.sam": {},
                      "view.003.expected.sam": {},
                      "view.003.sam": {},
                      "view.004.expected.sam": {}
                    },
                    "fixmate": {
                      "1_coord_sort.sam": {},
                      "1_coord_sort.sam.expected": {},
                      "1_coord_sort.sam.expected.err": {},
                      "2_isize_overflow.sam": {},
                      "2_isize_overflow.sam.expected": {},
                      "3_reverse_read_pp_lt.sam": {},
                      "3_reverse_read_pp_lt.sam.expected": {},
                      "4_reverse_read_pp_equal.sam": {},
                      "4_reverse_read_pp_equal.sam.expected": {},
                      "5_ct.sam": {},
                      "5_ct.sam.expected": {},
                      "6_ct_replace.sam": {},
                      "6_ct_replace.sam.expected": {},
                      "7_two_read_mapped.sam": {},
                      "7_two_read_mapped.sam.expected": {},
                      "8_isize_overflow_64bit.sam": {},
                      "8_isize_overflow_64bit.sam.expected": {}
                    },
                    "idxstats": {
                      "test_input_1_a.bam.expected": {},
                      "test_input_1_a.bam.expected.err": {}
                    },
                    "large_pos": {
                      "depth.expected.out": {},
                      "depth_bed.expected.out": {},
                      "longref.sam": {},
                      "longref2.sam": {},
                      "longref3.expected.sam": {},
                      "longref3.sam": {},
                      "longref_idx.expected.sam": {},
                      "longref_name.sam": {},
                      "merge.expected.sam": {},
                      "test.bed": {},
                      "tview.expected.out": {}
                    },
                    "maintainer": {
                      "check_copyright.pl": {},
                      "check_spaces.pl": {}
                    },
                    "markdup": {
                      "1_name_sort.expected.sam": {},
                      "1_name_sort.expected.sam.err": {},
                      "1_name_sort.sam": {},
                      "2_bad_order.expected.sam": {},
                      "2_bad_order.expected.sam.err": {},
                      "2_bad_order.sam": {},
                      "3_missing_mc.expected.sam": {},
                      "3_missing_mc.expected.sam.err": {},
                      "3_missing_mc.sam": {},
                      "4_missing_ms.expected.sam": {},
                      "4_missing_ms.expected.sam.err": {},
                      "4_missing_ms.sam": {},
                      "5_markdup.expected.sam": {},
                      "5_markdup.sam": {},
                      "6_remove_dups.expected.sam": {},
                      "6_remove_dups.sam": {},
                      "7_mark_supp_dup.expected.sam": {},
                      "7_mark_supp_dup.sam": {},
                      "8_optical_dup.expected.sam": {},
                      "8_optical_dup.sam": {},
                      "9_optical_dup_qcfail.expected.sam": {},
                      "9_optical_dup_qcfail.sam": {}
                    },
                    "merge": {
                      "2.merge.expected.sam": {},
                      "3.merge.expected.err": {},
                      "3.merge.expected.sam": {},
                      "4.merge.expected.sam": {},
                      "5.merge.expected.sam": {},
                      "6.merge.expected.sam": {},
                      "7.merge.expected.sam": {},
                      "merge.bed": {},
                      "merge.bed.1.sam": {},
                      "merge.bed.2.sam": {},
                      "merge.bed.expected.sam": {},
                      "tag.pg.merge.expected.sam": {},
                      "tag.pg.n.merge.expected.sam": {},
                      "test_3.fofn": {},
                      "test_bam_translate.c": {},
                      "test_header.sam": {},
                      "test_no_pg_rg_co.sam": {},
                      "test_rtrans_build.c": {},
                      "test_trans_tbl_init.c": {}
                    },
                    "mpileup": {
                      "1read.bam": {},
                      "1read.sam": {},
                      "anomalous.sam": {},
                      "c1#clip.bam": {},
                      "c1#pad1.bam": {},
                      "c1#pad2.bam": {},
                      "c1#pad3.bam": {},
                      "c1.fa": {},
                      "c1.fa.fai": {},
                      "ce#5b.bam": {},
                      "ce#5b.bam.bai": {},
                      "ce#5b.cram": {},
                      "ce#5b.cram.crai": {},
                      "ce#5b.sam": {},
                      "ce#large_seq.bam": {},
                      "ce#unmap.bam": {},
                      "ce#unmap1.bam": {},
                      "ce#unmap2.bam": {},
                      "ce.fa": {},
                      "ce.fa.fai": {},
                      "deep.sam": {},
                      "depth.reg": {},
                      "depth_del.sam": {},
                      "expected": {
                        "1.out.f3-6.gz": {},
                        "10.out": {},
                        "11.out": {},
                        "12.out": {},
                        "13.out": {},
                        "14.out": {},
                        "15.out": {},
                        "16.out": {},
                        "17.out": {},
                        "18.out": {},
                        "19.out": {},
                        "2.out": {},
                        "20.out": {},
                        "21.out": {},
                        "22.out": {},
                        "23.out": {},
                        "24.out": {},
                        "25.out": {},
                        "26.out": {},
                        "27.out": {},
                        "28.out": {},
                        "29.out": {},
                        "3.out": {},
                        "30.out": {},
                        "31.out": {},
                        "32.out": {},
                        "33.out": {},
                        "34.out": {},
                        "35.out": {},
                        "37.out": {},
                        "38.out": {},
                        "39.out": {},
                        "4.out": {},
                        "40.out": {},
                        "41.out": {},
                        "42.out": {},
                        "43.out": {},
                        "44.out": {},
                        "45.out": {},
                        "46.out": {},
                        "47.out": {},
                        "48.out": {},
                        "49.out": {},
                        "5.out": {},
                        "50.out": {},
                        "51.out": {},
                        "52.out": {},
                        "53.out": {},
                        "54.out": {},
                        "55.out": {},
                        "56.out": {},
                        "57.out": {},
                        "58.out": {},
                        "59.out": {},
                        "6.out": {},
                        "60.out": {},
                        "61.out": {},
                        "62.out": {},
                        "63.out": {},
                        "64.out": {},
                        "65.out": {},
                        "66.out": {},
                        "67.out": {},
                        "68.out": {},
                        "69.out": {},
                        "7.out": {},
                        "70.out": {},
                        "71.out": {},
                        "72.out": {},
                        "73.out": {},
                        "74.out": {},
                        "75.out": {},
                        "76.out": {},
                        "77.out": {},
                        "78.out": {},
                        "79.out": {},
                        "8.out": {},
                        "9.out": {},
                        "a0.out": {},
                        "a1.out": {},
                        "a10.out": {},
                        "a11.out": {},
                        "a13.out": {},
                        "a14.out": {},
                        "a15.out": {},
                        "a16.out": {},
                        "a17.out": {},
                        "a2.out": {},
                        "a3.out": {},
                        "a4.out": {},
                        "a5.out": {},
                        "a6.out": {},
                        "a8.out": {},
                        "a9.out": {},
                        "d1_1.out": {},
                        "d1_12.out": {},
                        "d1_2.out": {},
                        "d2_12r.out": {},
                        "d3_12.out": {},
                        "d3_12r1a.out": {},
                        "d3_12r2a.out": {},
                        "d3_3.out": {},
                        "d4_12.out": {},
                        "d4_12b.out": {},
                        "d4_12r.out": {},
                        "d5_all1.out": {},
                        "d5_all2.out": {},
                        "d5_all3.out": {},
                        "d5_all4.out": {},
                        "d5_b3.out": {},
                        "d5_b3a.out": {},
                        "d5_b3aa.out": {},
                        "d5_blank.out": {},
                        "d5_xx1.out": {},
                        "d5_xx2.out": {},
                        "d5_xx3.out": {},
                        "d5_xy1.out": {},
                        "d6_nodel.out": {},
                        "d6_wdel.out": {},
                        "d7_nodup.out": {},
                        "m5_all1.out": {},
                        "m5_all2.out": {},
                        "m5_all3.out": {},
                        "m5_b3.out": {},
                        "m5_b3a.out": {},
                        "m5_b3aa.out": {},
                        "m5_blank.out": {},
                        "m5_xx1.out": {},
                        "m5_xx2.out": {},
                        "m5_xx3.out": {},
                        "m5_xy1.out": {},
                        "mp_D.out": {},
                        "mp_DI.out": {},
                        "mp_I.out": {},
                        "mp_ID.out": {},
                        "mp_ID_rev.out": {},
                        "mp_N.out": {},
                        "mp_N2.out": {},
                        "mp_P.out": {}
                      },
                      "indels.sam": {},
                      "md5": {
                        "02099b2aad2cfe707759353724fb40ae": {},
                        "0d4dfc45807d6a11439e858605cb364d": {},
                        "351f64d4f4f9ddd45b35336ad97aa6de": {},
                        "6ec590eb82c361a61e6baabce20109bc": {},
                        "6f60cdf4c739651ae72d53e2e94825c1": {},
                        "73d180d5cb3860a2713927b6812eab0e": {}
                      },
                      "mp.fa": {},
                      "mp.fa.fai": {},
                      "mp_D.sam": {},
                      "mp_DI.sam": {},
                      "mp_I.sam": {},
                      "mp_ID.sam": {},
                      "mp_ID_rev.sam": {},
                      "mp_N.sam": {},
                      "mp_N2.sam": {},
                      "mp_P.sam": {},
                      "mpileup-E.bam": {},
                      "mpileup.1.bam": {},
                      "mpileup.1.bam.bai": {},
                      "mpileup.2.bam": {},
                      "mpileup.3.bam": {},
                      "mpileup.ref.fa": {},
                      "mpileup.ref.fa.fai": {},
                      "mpileup.reg": {},
                      "overlap.bam": {},
                      "overlap50.sam": {},
                      "overlapIllumina.bam": {},
                      "regions": {},
                      "regression.sh": {},
                      "xx#depth1.sam": {},
                      "xx#depth2.sam": {},
                      "xx#depth3.sam": {},
                      "xx#depth4.sam": {},
                      "xx#minimal.bam": {},
                      "xx#triplet.bam": {},
                      "xx.bed": {},
                      "xx.bed2": {},
                      "xx.bed3": {},
                      "xx.fa": {},
                      "xx.fa.fai": {}
                    },
                    "quickcheck": {
                      "1.quickcheck.badeof.bam": {},
                      "10.quickcheck.notargets.bam": {},
                      "2.quickcheck.badheader.bam": {},
                      "3.quickcheck.ok.bam": {},
                      "4.quickcheck.ok.bam": {},
                      "5.quickcheck.scramble30.truncated.cram": {},
                      "6.quickcheck.cram21.ok.cram": {},
                      "7.quickcheck.cram30.ok.cram": {},
                      "8.quickcheck.cram21.truncated.cram": {},
                      "9.quickcheck.cram30.truncated.cram": {},
                      "all.expected": {}
                    },
                    "reheader": {
                      "1_view1.sam.expected": {},
                      "1_view1.sam.expected.err": {},
                      "2_view1.sam.expected": {},
                      "2_view1.sam.expected.err": {},
                      "3_view1.sam.expected": {},
                      "3_view1.sam.expected.err": {},
                      "4_view1.sam.expected": {},
                      "5_view1.sam.expected": {},
                      "hdr.sam": {}
                    },
                    "sort": {
                      "name.sort.expected.sam": {},
                      "pos.sort.expected.sam": {},
                      "tag.as.sort.expected.sam": {},
                      "tag.fi.sort.expected.sam": {},
                      "tag.rg.n.sort.expected.sam": {},
                      "tag.rg.sort.expected.sam": {}
                    },
                    "split": {
                      "split.expected.grp1.sam": {},
                      "split.expected.grp2.sam": {},
                      "split.expected.unk.sam": {},
                      "split.sam": {},
                      "test_count_rg.c": {},
                      "test_expand_format_string.c": {},
                      "test_filter_header_rg.c": {},
                      "test_parse_args.c": {}
                    },
                    "stat": {
                      "1.stats.expected": {},
                      "1.stats.large.expected": {},
                      "10.stats.expected": {},
                      "10_map_cigar.sam": {},
                      "10_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "10_map_cigar.sam_s1_b_1.expected.bamstat": {},
                      "11.stats.expected": {},
                      "11.stats.g4.expected": {},
                      "11.stats.targets": {},
                      "11_target.bam": {},
                      "11_target.bam.bai": {},
                      "11_target.sam": {},
                      "12.2reads.nooverlap.expected": {},
                      "12.2reads.overlap.expected": {},
                      "12.3reads.nooverlap.expected": {},
                      "12.3reads.overlap.expected": {},
                      "12_2reads.bed": {},
                      "12_3reads.bed": {},
                      "12_overlaps.bam": {},
                      "13.barcodes.bc.ok.expected": {},
                      "13.barcodes.ox.ok.expected": {},
                      "13_barcodes_fail_bc_length.sam": {},
                      "13_barcodes_fail_hyphen.sam": {},
                      "13_barcodes_fail_qt_length.sam": {},
                      "13_barcodes_ok.sam": {},
                      "13_barcodes_ok_ox_bz.sam": {},
                      "1_map_cigar.sam": {},
                      "1_map_cigar.sam_s1_a_1.expected.bamstat": {},
                      "1_map_cigar_large.sam": {},
                      "2.stats.expected": {},
                      "2.stats.large.expected": {},
                      "2_equal_cigar_full_seq.sam": {},
                      "2_equal_cigar_full_seq_large.sam": {},
                      "3.stats.expected": {},
                      "3.stats.large.expected": {},
                      "3_map_cigar_equal_seq.sam": {},
                      "3_map_cigar_equal_seq_large.sam": {},
                      "4.stats.expected": {},
                      "4.stats.large.expected": {},
                      "4_X_cigar_full_seq.sam": {},
                      "4_X_cigar_full_seq_large.sam": {},
                      "5.stats.expected": {},
                      "5.stats.large.expected": {},
                      "5_insert_cigar.sam": {},
                      "5_insert_cigar_large.sam": {},
                      "6.stats.expected": {},
                      "7.stats.expected": {},
                      "7.stats.large.expected": {},
                      "7_supp.sam": {},
                      "7_supp_large.sam": {},
                      "8.stats.expected": {},
                      "8.stats.large.expected": {},
                      "8_secondary.sam": {},
                      "8_secondary_large.sam": {},
                      "9.stats.expected": {},
                      "test.fa": {},
                      "test.fa.fai": {}
                    },
                    "test.c": {},
                    "test.h": {},
                    "test.pl": {},
                    "tview": {
                      "test_get_rg_sample.c": {}
                    },
                    "vcf-miniview.c": {}
                  },
                  "tmp_file.c": {},
                  "tmp_file.h": {},
                  "version.sh": {}
                }
              },
              "usr": {
                "local": {
                  "bin": {
                    "ace2sam": {},
                    "blast2sam.pl": {},
                    "bowtie2sam.pl": {},
                    "export2sam.pl": {},
                    "interpolate_sam.pl": {},
                    "maq2sam-long": {},
                    "maq2sam-short": {},
                    "md5fa": {},
                    "md5sum-lite": {},
                    "novo2sam.pl": {},
                    "plot-ampliconstats": {},
                    "plot-bamstats": {},
                    "psl2sam.pl": {},
                    "sam2vcf.pl": {},
                    "samtools": {},
                    "samtools.pl": {},
                    "seq_cache_populate.pl": {},
                    "soap2sam.pl": {},
                    "wgsim": {},
                    "wgsim_eval.pl": {},
                    "zoom2sam.pl": {}
                  }
                }
              }
            },
            "icon": {
              "samsort.png": {}
            },
            "samtools_sort.attrs": {},
            "samtools_sort.json": {},
            "samtools_sort.py": {},
            "samtools_sort.states": {}
          },
          "starAlign": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-build": {},
              "STAR-2.6.0c": {
                ".gitignore": {},
                ".gitmodules": {},
                ".travis.yml": {},
                "CHANGES.md": {},
                "LICENSE": {},
                "README.md": {},
                "RELEASEnotes.md": {},
                "extras": {
                  "doc-latex": {
                    "STARmanual.tex": {},
                    "convertParDefToLatexTable.awk": {},
                    "parametersDefault.tex": {}
                  },
                  "scripts": {
                    "calcInsertCoverage.awk": {},
                    "extractSJfromGTF.sh": {},
                    "filterCirc.awk": {},
                    "mergeLogFinal.awk": {},
                    "mergeSuperContig.awk": {},
                    "sjCollapseSamples.awk": {},
                    "sjFromSAMcollapseUandM.awk": {},
                    "sjFromSAMcollapseUandM_inclOverlaps.awk": {},
                    "sjMotif.m": {},
                    "tagXSstrandedData.awk": {},
                    "transcriptTypes.awk": {},
                    "transfragsFromBedGraph.awk": {}
                  }
                },
                "source": {
                  "BAMbinSortByCoordinate.cpp": {},
                  "BAMbinSortByCoordinate.h": {},
                  "BAMbinSortUnmapped.cpp": {},
                  "BAMbinSortUnmapped.h": {},
                  "BAMfunctions.cpp": {},
                  "BAMfunctions.h": {},
                  "BAMoutput.cpp": {},
                  "BAMoutput.h": {},
                  "Chain.cpp": {},
                  "Chain.h": {},
                  "ChimericAlign.cpp": {},
                  "ChimericAlign.h": {},
                  "ChimericAlign_chimericJunctionOutput.cpp": {},
                  "ChimericAlign_chimericStitching.cpp": {},
                  "ChimericDetection.cpp": {},
                  "ChimericDetection.h": {},
                  "ChimericDetection_chimericDetectionMult.cpp": {},
                  "ChimericSegment.cpp": {},
                  "ChimericSegment.h": {},
                  "ChimericTranscript.h": {},
                  "ErrorWarning.cpp": {},
                  "ErrorWarning.h": {},
                  "Genome.cpp": {},
                  "Genome.h": {},
                  "Genome_genomeGenerate.cpp": {},
                  "Genome_insertSequences.cpp": {},
                  "GlobalVariables.cpp": {},
                  "GlobalVariables.h": {},
                  "InOutStreams.cpp": {},
                  "InOutStreams.h": {},
                  "IncludeDefine.h": {},
                  "Makefile": {},
                  "OutSJ.cpp": {},
                  "OutSJ.h": {},
                  "PackedArray.cpp": {},
                  "PackedArray.h": {},
                  "ParameterInfo.h": {},
                  "Parameters.cpp": {},
                  "Parameters.h": {},
                  "ParametersChimeric.h": {},
                  "ParametersGenome.h": {},
                  "Parameters_closeReadsFiles.cpp": {},
                  "Parameters_openReadsFiles.cpp": {},
                  "Parameters_readSAMheader.cpp": {},
                  "Quantifications.cpp": {},
                  "Quantifications.h": {},
                  "ReadAlign.cpp": {},
                  "ReadAlign.h": {},
                  "ReadAlignChunk.cpp": {},
                  "ReadAlignChunk.h": {},
                  "ReadAlignChunk_mapChunk.cpp": {},
                  "ReadAlignChunk_processChunks.cpp": {},
                  "ReadAlign_CIGAR.cpp": {},
                  "ReadAlign_alignBAM.cpp": {},
                  "ReadAlign_assignAlignToWindow.cpp": {},
                  "ReadAlign_calcCIGAR.cpp": {},
                  "ReadAlign_chimericDetection.cpp": {},
                  "ReadAlign_chimericDetectionOld.cpp": {},
                  "ReadAlign_chimericDetectionOldOutput.cpp": {},
                  "ReadAlign_chimericDetectionPEmerged.cpp": {},
                  "ReadAlign_createExtendWindowsWithAlign.cpp": {},
                  "ReadAlign_mapOneRead.cpp": {},
                  "ReadAlign_mappedFilter.cpp": {},
                  "ReadAlign_maxMappableLength2strands.cpp": {},
                  "ReadAlign_multMapSelect.cpp": {},
                  "ReadAlign_oneRead.cpp": {},
                  "ReadAlign_outputAlignments.cpp": {},
                  "ReadAlign_outputTranscriptCIGARp.cpp": {},
                  "ReadAlign_outputTranscriptSAM.cpp": {},
                  "ReadAlign_outputTranscriptSJ.cpp": {},
                  "ReadAlign_outputVariation.cpp": {},
                  "ReadAlign_peOverlapMergeMap.cpp": {},
                  "ReadAlign_quantTranscriptome.cpp": {},
                  "ReadAlign_stitchPieces.cpp": {},
                  "ReadAlign_stitchWindowSeeds.cpp": {},
                  "ReadAlign_storeAligns.cpp": {},
                  "ReadAlign_waspMap.cpp": {},
                  "STAR.cpp": {},
                  "SequenceFuns.cpp": {},
                  "SequenceFuns.h": {},
                  "SharedMemory.cpp": {},
                  "SharedMemory.h": {},
                  "SjdbClass.h": {},
                  "Stats.cpp": {},
                  "Stats.h": {},
                  "SuffixArrayFuns.cpp": {},
                  "SuffixArrayFuns.h": {},
                  "ThreadControl.cpp": {},
                  "ThreadControl.h": {},
                  "TimeFunctions.cpp": {},
                  "TimeFunctions.h": {},
                  "Transcript.cpp": {},
                  "Transcript.h": {},
                  "Transcript_alignScore.cpp": {},
                  "Transcript_generateCigarP.cpp": {},
                  "Transcript_variationAdjust.cpp": {},
                  "Transcript_variationOutput.cpp": {},
                  "Transcriptome.cpp": {},
                  "Transcriptome.h": {},
                  "Transcriptome_geneCountsAddAlign.cpp": {},
                  "Transcriptome_quantAlign.cpp": {},
                  "VERSION": {},
                  "Variation.cpp": {},
                  "Variation.h": {},
                  "alignSmithWaterman.cpp": {},
                  "alignSmithWaterman.h": {},
                  "bamRemoveDuplicates.cpp": {},
                  "bamRemoveDuplicates.h": {},
                  "bam_cat.c": {},
                  "bam_cat.h": {},
                  "binarySearch2.cpp": {},
                  "binarySearch2.h": {},
                  "blocksOverlap.cpp": {},
                  "blocksOverlap.h": {},
                  "extendAlign.cpp": {},
                  "extendAlign.h": {},
                  "funCompareUintAndSuffixes.cpp": {},
                  "funCompareUintAndSuffixes.h": {},
                  "funCompareUintAndSuffixesMemcmp.cpp": {},
                  "funCompareUintAndSuffixesMemcmp.h": {},
                  "genomeGenerate.h": {},
                  "genomeParametersWrite.cpp": {},
                  "genomeParametersWrite.h": {},
                  "genomeSAindex.cpp": {},
                  "genomeSAindex.h": {},
                  "genomeScanFastaFiles.cpp": {},
                  "genomeScanFastaFiles.h": {},
                  "htslib": {
                    ".gitignore": {},
                    ".travis.yml": {},
                    "Makefile": {},
                    "README.md": {},
                    "bgzf.c": {},
                    "bgzip.c": {},
                    "config.h": {},
                    "cram": {
                      "cram.h": {},
                      "cram_codecs.c": {},
                      "cram_codecs.h": {},
                      "cram_decode.c": {},
                      "cram_decode.h": {},
                      "cram_encode.c": {},
                      "cram_encode.h": {},
                      "cram_index.c": {},
                      "cram_index.h": {},
                      "cram_io.c": {},
                      "cram_io.h": {},
                      "cram_samtools.c": {},
                      "cram_samtools.h": {},
                      "cram_stats.c": {},
                      "cram_stats.h": {},
                      "cram_structs.h": {},
                      "files.c": {},
                      "mFILE.c": {},
                      "mFILE.h": {},
                      "md5.c": {},
                      "md5.h": {},
                      "misc.h": {},
                      "open_trace_file.c": {},
                      "open_trace_file.h": {},
                      "os.h": {},
                      "pooled_alloc.c": {},
                      "pooled_alloc.h": {},
                      "sam_header.c": {},
                      "sam_header.h": {},
                      "string_alloc.c": {},
                      "string_alloc.h": {},
                      "thread_pool.c": {},
                      "thread_pool.h": {},
                      "vlen.c": {},
                      "vlen.h": {},
                      "zfio.c": {},
                      "zfio.h": {}
                    },
                    "faidx.5": {},
                    "faidx.c": {},
                    "hfile.c": {},
                    "hfile_internal.h": {},
                    "hfile_net.c": {},
                    "hts.c": {},
                    "htslib.mk": {},
                    "htslib": {
                      "bgzf.h": {},
                      "faidx.h": {},
                      "hfile.h": {},
                      "hts.h": {},
                      "hts_defs.h": {},
                      "kfunc.h": {},
                      "khash.h": {},
                      "khash_str2int.h": {},
                      "klist.h": {},
                      "knetfile.h": {},
                      "kseq.h": {},
                      "ksort.h": {},
                      "kstdint.h": {},
                      "kstring.h": {},
                      "sam.h": {},
                      "synced_bcf_reader.h": {},
                      "tbx.h": {},
                      "vcf.h": {},
                      "vcf_sweep.h": {},
                      "vcfutils.h": {}
                    },
                    "htslib_vars.mk": {},
                    "kfunc.c": {},
                    "knetfile.c": {},
                    "kstring.c": {},
                    "sam.5": {},
                    "sam.c": {},
                    "synced_bcf_reader.c": {},
                    "tabix.1": {},
                    "tabix.c": {},
                    "tbx.c": {},
                    "vcf.5": {},
                    "vcf.c": {},
                    "vcf_sweep.c": {},
                    "vcfutils.c": {}
                  },
                  "insertSeqSA.cpp": {},
                  "insertSeqSA.h": {},
                  "loadGTF.cpp": {},
                  "loadGTF.h": {},
                  "mapThreadsSpawn.cpp": {},
                  "mapThreadsSpawn.h": {},
                  "outputSJ.cpp": {},
                  "outputSJ.h": {},
                  "parametersDefault": {},
                  "parametersDefault.xxd": {},
                  "readLoad.cpp": {},
                  "readLoad.h": {},
                  "serviceFuns.cpp": {},
                  "signalFromBAM.cpp": {},
                  "signalFromBAM.h": {},
                  "sjAlignSplit.cpp": {},
                  "sjdbBuildIndex.cpp": {},
                  "sjdbBuildIndex.h": {},
                  "sjdbInsertJunctions.cpp": {},
                  "sjdbInsertJunctions.h": {},
                  "sjdbLoadFromFiles.cpp": {},
                  "sjdbLoadFromFiles.h": {},
                  "sjdbLoadFromStream.cpp": {},
                  "sjdbLoadFromStream.h": {},
                  "sjdbPrepare.cpp": {},
                  "sjdbPrepare.h": {},
                  "sortSuffixesBucket.h": {},
                  "stitchAlignToTranscript.cpp": {},
                  "stitchAlignToTranscript.h": {},
                  "stitchGapIndel.cpp": {},
                  "stitchWindowAligns.cpp": {},
                  "stitchWindowAligns.h": {},
                  "streamFuns.cpp": {},
                  "streamFuns.h": {},
                  "stringSubstituteAll.cpp": {},
                  "stringSubstituteAll.h": {},
                  "sysRemoveDir.cpp": {},
                  "sysRemoveDir.h": {}
                }
              },
              "build.sh": {},
              "debian": {
                "build.sh": {}
              },
              "runstar.sh": {}
            },
            "icon": {
              "staralign.png": {}
            },
            "starAlign.attrs": {},
            "starAlign.json": {},
            "starAlign.py": {},
            "starAlign.states": {}
          },
          "starIndex": {
            "Dockerfiles": {
              "Dockerfile": {},
              "STAR-2.6.0c": {
                "source": {
                  "BAMbinSortByCoordinate.o": {},
                  "BAMbinSortUnmapped.o": {},
                  "BAMfunctions.o": {},
                  "BAMoutput.o": {},
                  "Chain.o": {},
                  "ChimericAlign_chimericJunctionOutput.o": {},
                  "ChimericAlign_chimericStitching.o": {},
                  "ChimericDetection.o": {},
                  "ChimericDetection_chimericDetectionMult.o": {},
                  "Depend.list": {},
                  "ErrorWarning.o": {},
                  "Genome.o": {},
                  "Genome_genomeGenerate.o": {},
                  "Genome_insertSequences.o": {},
                  "InOutStreams.o": {},
                  "OutSJ.o": {},
                  "PackedArray.o": {},
                  "Parameters.o": {},
                  "Parameters_readSAMheader.o": {},
                  "Quantifications.o": {},
                  "ReadAlign.o": {},
                  "ReadAlignChunk.o": {},
                  "ReadAlignChunk_mapChunk.o": {},
                  "ReadAlignChunk_processChunks.o": {},
                  "ReadAlign_alignBAM.o": {},
                  "ReadAlign_assignAlignToWindow.o": {},
                  "ReadAlign_chimericDetection.o": {},
                  "ReadAlign_chimericDetectionOld.o": {},
                  "ReadAlign_chimericDetectionOldOutput.o": {},
                  "ReadAlign_chimericDetectionPEmerged.o": {},
                  "ReadAlign_createExtendWindowsWithAlign.o": {},
                  "ReadAlign_mapOneRead.o": {},
                  "ReadAlign_mappedFilter.o": {},
                  "ReadAlign_maxMappableLength2strands.o": {},
                  "ReadAlign_multMapSelect.o": {},
                  "ReadAlign_oneRead.o": {},
                  "ReadAlign_outputAlignments.o": {},
                  "ReadAlign_outputTranscriptCIGARp.o": {},
                  "ReadAlign_outputTranscriptSAM.o": {},
                  "ReadAlign_outputTranscriptSJ.o": {},
                  "ReadAlign_peOverlapMergeMap.o": {},
                  "ReadAlign_quantTranscriptome.o": {},
                  "ReadAlign_stitchPieces.o": {},
                  "ReadAlign_stitchWindowSeeds.o": {},
                  "ReadAlign_storeAligns.o": {},
                  "ReadAlign_waspMap.o": {},
                  "STAR": {},
                  "STAR.o": {},
                  "SequenceFuns.o": {},
                  "SharedMemory.o": {},
                  "Stats.o": {},
                  "SuffixArrayFuns.o": {},
                  "ThreadControl.o": {},
                  "TimeFunctions.o": {},
                  "Transcript.o": {},
                  "Transcript_alignScore.o": {},
                  "Transcript_generateCigarP.o": {},
                  "Transcript_variationAdjust.o": {},
                  "Transcriptome.o": {},
                  "Transcriptome_geneCountsAddAlign.o": {},
                  "Transcriptome_quantAlign.o": {},
                  "Variation.o": {},
                  "alignSmithWaterman.o": {},
                  "bamRemoveDuplicates.o": {},
                  "bam_cat.o": {},
                  "binarySearch2.o": {},
                  "blocksOverlap.o": {},
                  "extendAlign.o": {},
                  "funCompareUintAndSuffixes.o": {},
                  "funCompareUintAndSuffixesMemcmp.o": {},
                  "genomeParametersWrite.o": {},
                  "genomeSAindex.o": {},
                  "genomeScanFastaFiles.o": {},
                  "htslib": {
                    "bgzf.o": {},
                    "cram": {
                      "cram_codecs.o": {},
                      "cram_decode.o": {},
                      "cram_encode.o": {},
                      "cram_index.o": {},
                      "cram_io.o": {},
                      "cram_samtools.o": {},
                      "cram_stats.o": {},
                      "files.o": {},
                      "mFILE.o": {},
                      "md5.o": {},
                      "open_trace_file.o": {},
                      "pooled_alloc.o": {},
                      "sam_header.o": {},
                      "string_alloc.o": {},
                      "thread_pool.o": {},
                      "vlen.o": {},
                      "zfio.o": {}
                    },
                    "faidx.o": {},
                    "hfile.o": {},
                    "hfile_net.o": {},
                    "hts.o": {},
                    "kfunc.o": {},
                    "knetfile.o": {},
                    "kstring.o": {},
                    "libhts.a": {},
                    "sam.o": {},
                    "synced_bcf_reader.o": {},
                    "tbx.o": {},
                    "vcf.o": {},
                    "vcf_sweep.o": {},
                    "vcfutils.o": {},
                    "version.h": {}
                  },
                  "insertSeqSA.o": {},
                  "loadGTF.o": {},
                  "mapThreadsSpawn.o": {},
                  "outputSJ.o": {},
                  "readLoad.o": {},
                  "serviceFuns.o": {},
                  "signalFromBAM.o": {},
                  "sjdbBuildIndex.o": {},
                  "sjdbInsertJunctions.o": {},
                  "sjdbLoadFromFiles.o": {},
                  "sjdbLoadFromStream.o": {},
                  "sjdbPrepare.o": {},
                  "stitchAlignToTranscript.o": {},
                  "stitchWindowAligns.o": {},
                  "streamFuns.o": {},
                  "stringSubstituteAll.o": {},
                  "sysRemoveDir.o": {}
                }
              },
              "star-index.sh": {}
            },
            "icon": {
              "starIndex.png": {}
            },
            "starIndex.attrs": {},
            "starIndex.json": {},
            "starIndex.py": {},
            "starIndex.states": {}
          }
        }
      }
    },
    "Toil_RNA_Seq": {
      "README.md": {},
      "RNAseq": {
        "RNAseq.ows": {},
        "widgets": {
          "RNAseq": {
            "Toil": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil.attrs": {},
              "Toil.json": {},
              "Toil.py": {},
              "Toil.states": {},
              "icon": {
                "python.png": {}
              }
            },
            "Toil_CWL": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil_CWL.attrs": {},
              "Toil_CWL.json": {},
              "Toil_CWL.py": {},
              "Toil_CWL.states": {},
              "icon": {
                "cwl.png": {}
              }
            },
            "Toil_WDL": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil_WDL.attrs": {},
              "Toil_WDL.json": {},
              "Toil_WDL.py": {},
              "Toil_WDL.states": {},
              "icon": {
                "wdl.png": {}
              }
            },
            "__init__.py": {},
            "consolidate": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "consolidate.attrs": {},
              "consolidate.json": {},
              "consolidate.py": {},
              "consolidate.states": {},
              "icon": {
                "consolidation.png": {}
              }
            },
            "cutadapt": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "cutadapt.attrs": {},
              "cutadapt.json": {},
              "cutadapt.py": {},
              "cutadapt.states": {},
              "icon": {
                "cutadapt.png": {}
              }
            },
            "downloadURL": {
              "Dockerfiles": {
                "Dockerfile": {},
                "README.md": {},
                "download.sh": {},
                "version": {}
              },
              "downloadURL.attrs": {},
              "downloadURL.json": {},
              "downloadURL.py": {},
              "downloadURL.states": {},
              "icon": {
                "download.png": {}
              }
            },
            "fastqc": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "fastqc.attrs": {},
              "fastqc.json": {},
              "fastqc.py": {},
              "fastqc.states": {},
              "icon": {
                "fastqc_icon_100.png": {}
              }
            },
            "gzip": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "gzip.attrs": {},
              "gzip.json": {},
              "gzip.py": {},
              "gzip.states": {},
              "icon": {
                "compress.png": {}
              }
            },
            "hera": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "hera.attrs": {},
              "hera.json": {},
              "hera.py": {},
              "hera.states": {},
              "icon": {
                "bioturing.png": {}
              }
            },
            "icon": {
              "user.png": {}
            },
            "kallistoQuant": {
              "icon": {
                "kallistoquant.png": {}
              },
              "kallistoQuant.attrs": {},
              "kallistoQuant.json": {},
              "kallistoQuant.py": {},
              "kallistoQuant.states": {}
            },
            "rsem": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "icon": {
                "rsem.png": {}
              },
              "rsem.attrs": {},
              "rsem.json": {},
              "rsem.py": {},
              "rsem.states": {}
            },
            "starAlign": {
              "Dockerfiles": {
                "Dockerfile": {},
                "Dockerfile-build": {},
                "STAR-2.6.0c": {
                  ".gitignore": {},
                  ".gitmodules": {},
                  ".travis.yml": {},
                  "CHANGES.md": {},
                  "LICENSE": {},
                  "README.md": {},
                  "RELEASEnotes.md": {},
                  "extras": {
                    "doc-latex": {
                      "STARmanual.tex": {},
                      "convertParDefToLatexTable.awk": {},
                      "parametersDefault.tex": {}
                    },
                    "scripts": {
                      "calcInsertCoverage.awk": {},
                      "extractSJfromGTF.sh": {},
                      "filterCirc.awk": {},
                      "mergeLogFinal.awk": {},
                      "mergeSuperContig.awk": {},
                      "sjCollapseSamples.awk": {},
                      "sjFromSAMcollapseUandM.awk": {},
                      "sjFromSAMcollapseUandM_inclOverlaps.awk": {},
                      "sjMotif.m": {},
                      "tagXSstrandedData.awk": {},
                      "transcriptTypes.awk": {},
                      "transfragsFromBedGraph.awk": {}
                    }
                  },
                  "source": {
                    "BAMbinSortByCoordinate.cpp": {},
                    "BAMbinSortByCoordinate.h": {},
                    "BAMbinSortUnmapped.cpp": {},
                    "BAMbinSortUnmapped.h": {},
                    "BAMfunctions.cpp": {},
                    "BAMfunctions.h": {},
                    "BAMoutput.cpp": {},
                    "BAMoutput.h": {},
                    "Chain.cpp": {},
                    "Chain.h": {},
                    "ChimericAlign.cpp": {},
                    "ChimericAlign.h": {},
                    "ChimericAlign_chimericJunctionOutput.cpp": {},
                    "ChimericAlign_chimericStitching.cpp": {},
                    "ChimericDetection.cpp": {},
                    "ChimericDetection.h": {},
                    "ChimericDetection_chimericDetectionMult.cpp": {},
                    "ChimericSegment.cpp": {},
                    "ChimericSegment.h": {},
                    "ChimericTranscript.h": {},
                    "ErrorWarning.cpp": {},
                    "ErrorWarning.h": {},
                    "Genome.cpp": {},
                    "Genome.h": {},
                    "Genome_genomeGenerate.cpp": {},
                    "Genome_insertSequences.cpp": {},
                    "GlobalVariables.cpp": {},
                    "GlobalVariables.h": {},
                    "InOutStreams.cpp": {},
                    "InOutStreams.h": {},
                    "IncludeDefine.h": {},
                    "Makefile": {},
                    "OutSJ.cpp": {},
                    "OutSJ.h": {},
                    "PackedArray.cpp": {},
                    "PackedArray.h": {},
                    "ParameterInfo.h": {},
                    "Parameters.cpp": {},
                    "Parameters.h": {},
                    "ParametersChimeric.h": {},
                    "ParametersGenome.h": {},
                    "Parameters_closeReadsFiles.cpp": {},
                    "Parameters_openReadsFiles.cpp": {},
                    "Parameters_readSAMheader.cpp": {},
                    "Quantifications.cpp": {},
                    "Quantifications.h": {},
                    "ReadAlign.cpp": {},
                    "ReadAlign.h": {},
                    "ReadAlignChunk.cpp": {},
                    "ReadAlignChunk.h": {},
                    "ReadAlignChunk_mapChunk.cpp": {},
                    "ReadAlignChunk_processChunks.cpp": {},
                    "ReadAlign_CIGAR.cpp": {},
                    "ReadAlign_alignBAM.cpp": {},
                    "ReadAlign_assignAlignToWindow.cpp": {},
                    "ReadAlign_calcCIGAR.cpp": {},
                    "ReadAlign_chimericDetection.cpp": {},
                    "ReadAlign_chimericDetectionOld.cpp": {},
                    "ReadAlign_chimericDetectionOldOutput.cpp": {},
                    "ReadAlign_chimericDetectionPEmerged.cpp": {},
                    "ReadAlign_createExtendWindowsWithAlign.cpp": {},
                    "ReadAlign_mapOneRead.cpp": {},
                    "ReadAlign_mappedFilter.cpp": {},
                    "ReadAlign_maxMappableLength2strands.cpp": {},
                    "ReadAlign_multMapSelect.cpp": {},
                    "ReadAlign_oneRead.cpp": {},
                    "ReadAlign_outputAlignments.cpp": {},
                    "ReadAlign_outputTranscriptCIGARp.cpp": {},
                    "ReadAlign_outputTranscriptSAM.cpp": {},
                    "ReadAlign_outputTranscriptSJ.cpp": {},
                    "ReadAlign_outputVariation.cpp": {},
                    "ReadAlign_peOverlapMergeMap.cpp": {},
                    "ReadAlign_quantTranscriptome.cpp": {},
                    "ReadAlign_stitchPieces.cpp": {},
                    "ReadAlign_stitchWindowSeeds.cpp": {},
                    "ReadAlign_storeAligns.cpp": {},
                    "ReadAlign_waspMap.cpp": {},
                    "STAR.cpp": {},
                    "SequenceFuns.cpp": {},
                    "SequenceFuns.h": {},
                    "SharedMemory.cpp": {},
                    "SharedMemory.h": {},
                    "SjdbClass.h": {},
                    "Stats.cpp": {},
                    "Stats.h": {},
                    "SuffixArrayFuns.cpp": {},
                    "SuffixArrayFuns.h": {},
                    "ThreadControl.cpp": {},
                    "ThreadControl.h": {},
                    "TimeFunctions.cpp": {},
                    "TimeFunctions.h": {},
                    "Transcript.cpp": {},
                    "Transcript.h": {},
                    "Transcript_alignScore.cpp": {},
                    "Transcript_generateCigarP.cpp": {},
                    "Transcript_variationAdjust.cpp": {},
                    "Transcript_variationOutput.cpp": {},
                    "Transcriptome.cpp": {},
                    "Transcriptome.h": {},
                    "Transcriptome_geneCountsAddAlign.cpp": {},
                    "Transcriptome_quantAlign.cpp": {},
                    "VERSION": {},
                    "Variation.cpp": {},
                    "Variation.h": {},
                    "alignSmithWaterman.cpp": {},
                    "alignSmithWaterman.h": {},
                    "bamRemoveDuplicates.cpp": {},
                    "bamRemoveDuplicates.h": {},
                    "bam_cat.c": {},
                    "bam_cat.h": {},
                    "binarySearch2.cpp": {},
                    "binarySearch2.h": {},
                    "blocksOverlap.cpp": {},
                    "blocksOverlap.h": {},
                    "extendAlign.cpp": {},
                    "extendAlign.h": {},
                    "funCompareUintAndSuffixes.cpp": {},
                    "funCompareUintAndSuffixes.h": {},
                    "funCompareUintAndSuffixesMemcmp.cpp": {},
                    "funCompareUintAndSuffixesMemcmp.h": {},
                    "genomeGenerate.h": {},
                    "genomeParametersWrite.cpp": {},
                    "genomeParametersWrite.h": {},
                    "genomeSAindex.cpp": {},
                    "genomeSAindex.h": {},
                    "genomeScanFastaFiles.cpp": {},
                    "genomeScanFastaFiles.h": {},
                    "htslib": {
                      ".gitignore": {},
                      ".travis.yml": {},
                      "Makefile": {},
                      "README.md": {},
                      "bgzf.c": {},
                      "bgzip.c": {},
                      "config.h": {},
                      "cram": {
                        "cram.h": {},
                        "cram_codecs.c": {},
                        "cram_codecs.h": {},
                        "cram_decode.c": {},
                        "cram_decode.h": {},
                        "cram_encode.c": {},
                        "cram_encode.h": {},
                        "cram_index.c": {},
                        "cram_index.h": {},
                        "cram_io.c": {},
                        "cram_io.h": {},
                        "cram_samtools.c": {},
                        "cram_samtools.h": {},
                        "cram_stats.c": {},
                        "cram_stats.h": {},
                        "cram_structs.h": {},
                        "files.c": {},
                        "mFILE.c": {},
                        "mFILE.h": {},
                        "md5.c": {},
                        "md5.h": {},
                        "misc.h": {},
                        "open_trace_file.c": {},
                        "open_trace_file.h": {},
                        "os.h": {},
                        "pooled_alloc.c": {},
                        "pooled_alloc.h": {},
                        "sam_header.c": {},
                        "sam_header.h": {},
                        "string_alloc.c": {},
                        "string_alloc.h": {},
                        "thread_pool.c": {},
                        "thread_pool.h": {},
                        "vlen.c": {},
                        "vlen.h": {},
                        "zfio.c": {},
                        "zfio.h": {}
                      },
                      "faidx.5": {},
                      "faidx.c": {},
                      "hfile.c": {},
                      "hfile_internal.h": {},
                      "hfile_net.c": {},
                      "hts.c": {},
                      "htslib.mk": {},
                      "htslib": {
                        "bgzf.h": {},
                        "faidx.h": {},
                        "hfile.h": {},
                        "hts.h": {},
                        "hts_defs.h": {},
                        "kfunc.h": {},
                        "khash.h": {},
                        "khash_str2int.h": {},
                        "klist.h": {},
                        "knetfile.h": {},
                        "kseq.h": {},
                        "ksort.h": {},
                        "kstdint.h": {},
                        "kstring.h": {},
                        "sam.h": {},
                        "synced_bcf_reader.h": {},
                        "tbx.h": {},
                        "vcf.h": {},
                        "vcf_sweep.h": {},
                        "vcfutils.h": {}
                      },
                      "htslib_vars.mk": {},
                      "kfunc.c": {},
                      "knetfile.c": {},
                      "kstring.c": {},
                      "sam.5": {},
                      "sam.c": {},
                      "synced_bcf_reader.c": {},
                      "tabix.1": {},
                      "tabix.c": {},
                      "tbx.c": {},
                      "vcf.5": {},
                      "vcf.c": {},
                      "vcf_sweep.c": {},
                      "vcfutils.c": {}
                    },
                    "insertSeqSA.cpp": {},
                    "insertSeqSA.h": {},
                    "loadGTF.cpp": {},
                    "loadGTF.h": {},
                    "mapThreadsSpawn.cpp": {},
                    "mapThreadsSpawn.h": {},
                    "outputSJ.cpp": {},
                    "outputSJ.h": {},
                    "parametersDefault": {},
                    "parametersDefault.xxd": {},
                    "readLoad.cpp": {},
                    "readLoad.h": {},
                    "serviceFuns.cpp": {},
                    "signalFromBAM.cpp": {},
                    "signalFromBAM.h": {},
                    "sjAlignSplit.cpp": {},
                    "sjdbBuildIndex.cpp": {},
                    "sjdbBuildIndex.h": {},
                    "sjdbInsertJunctions.cpp": {},
                    "sjdbInsertJunctions.h": {},
                    "sjdbLoadFromFiles.cpp": {},
                    "sjdbLoadFromFiles.h": {},
                    "sjdbLoadFromStream.cpp": {},
                    "sjdbLoadFromStream.h": {},
                    "sjdbPrepare.cpp": {},
                    "sjdbPrepare.h": {},
                    "sortSuffixesBucket.h": {},
                    "stitchAlignToTranscript.cpp": {},
                    "stitchAlignToTranscript.h": {},
                    "stitchGapIndel.cpp": {},
                    "stitchWindowAligns.cpp": {},
                    "stitchWindowAligns.h": {},
                    "streamFuns.cpp": {},
                    "streamFuns.h": {},
                    "stringSubstituteAll.cpp": {},
                    "stringSubstituteAll.h": {},
                    "sysRemoveDir.cpp": {},
                    "sysRemoveDir.h": {}
                  }
                },
                "build.sh": {},
                "debian": {
                  "build.sh": {}
                },
                "runstar.sh": {}
              },
              "icon": {
                "staralign.png": {}
              },
              "starAlign.attrs": {},
              "starAlign.json": {},
              "starAlign.py": {},
              "starAlign.states": {}
            }
          }
        }
      },
      "RNAseq_Toil": {
        "RNAseq_Toil.ows": {},
        "widgets": {
          "RNAseq_Toil": {
            "RNAseq_Toil_CWL": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "RNAseq_Toil_CWL.attrs": {},
              "RNAseq_Toil_CWL.json": {},
              "RNAseq_Toil_CWL.py": {},
              "RNAseq_Toil_CWL.states": {},
              "icon": {
                "cwl.png": {}
              }
            },
            "RNAseq_Toil_CWL_1": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "RNAseq_Toil_CWL_1.attrs": {},
              "RNAseq_Toil_CWL_1.json": {},
              "RNAseq_Toil_CWL_1.py": {},
              "RNAseq_Toil_CWL_1.states": {},
              "icon": {
                "cwl.png": {}
              }
            },
            "Toil": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil.attrs": {},
              "Toil.json": {},
              "Toil.py": {},
              "Toil.states": {},
              "icon": {
                "python.png": {}
              }
            },
            "Toil_CWL": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil_CWL.attrs": {},
              "Toil_CWL.json": {},
              "Toil_CWL.py": {},
              "Toil_CWL.states": {},
              "icon": {
                "cwl.png": {}
              }
            },
            "Toil_WDL": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil_WDL.attrs": {},
              "Toil_WDL.json": {},
              "Toil_WDL.py": {},
              "Toil_WDL.states": {},
              "icon": {
                "wdl.png": {}
              }
            },
            "__init__.py": {},
            "consolidate": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "consolidate.attrs": {},
              "consolidate.json": {},
              "consolidate.py": {},
              "consolidate.states": {},
              "icon": {
                "consolidation.png": {}
              }
            },
            "cutadapt": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "cutadapt.attrs": {},
              "cutadapt.json": {},
              "cutadapt.py": {},
              "cutadapt.states": {},
              "icon": {
                "cutadapt.png": {}
              }
            },
            "downloadURL": {
              "Dockerfiles": {
                "Dockerfile": {},
                "README.md": {},
                "download.sh": {},
                "version": {}
              },
              "downloadURL.attrs": {},
              "downloadURL.json": {},
              "downloadURL.py": {},
              "downloadURL.states": {},
              "icon": {
                "download.png": {}
              }
            },
            "fastqc": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "fastqc.attrs": {},
              "fastqc.json": {},
              "fastqc.py": {},
              "fastqc.states": {},
              "icon": {
                "fastqc_icon_100.png": {}
              }
            },
            "geany": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "geany.attrs": {},
              "geany.json": {},
              "geany.py": {},
              "geany.states": {},
              "icon": {
                "geany.png": {}
              }
            },
            "gzip": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "gzip.attrs": {},
              "gzip.json": {},
              "gzip.py": {},
              "gzip.states": {},
              "icon": {
                "compress.png": {}
              }
            },
            "hera": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "hera.attrs": {},
              "hera.json": {},
              "hera.py": {},
              "hera.states": {},
              "icon": {
                "bioturing.png": {}
              }
            },
            "icon": {
              "user.png": {}
            },
            "kallistoQuant": {
              "icon": {
                "kallistoquant.png": {}
              },
              "kallistoQuant.attrs": {},
              "kallistoQuant.json": {},
              "kallistoQuant.py": {},
              "kallistoQuant.states": {}
            },
            "rsem": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "icon": {
                "rsem.png": {}
              },
              "rsem.attrs": {},
              "rsem.json": {},
              "rsem.py": {},
              "rsem.states": {}
            },
            "starAlign": {
              "Dockerfiles": {
                "Dockerfile": {},
                "Dockerfile-build": {},
                "STAR-2.6.0c": {
                  ".gitignore": {},
                  ".gitmodules": {},
                  ".travis.yml": {},
                  "CHANGES.md": {},
                  "LICENSE": {},
                  "README.md": {},
                  "RELEASEnotes.md": {},
                  "extras": {
                    "doc-latex": {
                      "STARmanual.tex": {},
                      "convertParDefToLatexTable.awk": {},
                      "parametersDefault.tex": {}
                    },
                    "scripts": {
                      "calcInsertCoverage.awk": {},
                      "extractSJfromGTF.sh": {},
                      "filterCirc.awk": {},
                      "mergeLogFinal.awk": {},
                      "mergeSuperContig.awk": {},
                      "sjCollapseSamples.awk": {},
                      "sjFromSAMcollapseUandM.awk": {},
                      "sjFromSAMcollapseUandM_inclOverlaps.awk": {},
                      "sjMotif.m": {},
                      "tagXSstrandedData.awk": {},
                      "transcriptTypes.awk": {},
                      "transfragsFromBedGraph.awk": {}
                    }
                  },
                  "source": {
                    "BAMbinSortByCoordinate.cpp": {},
                    "BAMbinSortByCoordinate.h": {},
                    "BAMbinSortUnmapped.cpp": {},
                    "BAMbinSortUnmapped.h": {},
                    "BAMfunctions.cpp": {},
                    "BAMfunctions.h": {},
                    "BAMoutput.cpp": {},
                    "BAMoutput.h": {},
                    "Chain.cpp": {},
                    "Chain.h": {},
                    "ChimericAlign.cpp": {},
                    "ChimericAlign.h": {},
                    "ChimericAlign_chimericJunctionOutput.cpp": {},
                    "ChimericAlign_chimericStitching.cpp": {},
                    "ChimericDetection.cpp": {},
                    "ChimericDetection.h": {},
                    "ChimericDetection_chimericDetectionMult.cpp": {},
                    "ChimericSegment.cpp": {},
                    "ChimericSegment.h": {},
                    "ChimericTranscript.h": {},
                    "ErrorWarning.cpp": {},
                    "ErrorWarning.h": {},
                    "Genome.cpp": {},
                    "Genome.h": {},
                    "Genome_genomeGenerate.cpp": {},
                    "Genome_insertSequences.cpp": {},
                    "GlobalVariables.cpp": {},
                    "GlobalVariables.h": {},
                    "InOutStreams.cpp": {},
                    "InOutStreams.h": {},
                    "IncludeDefine.h": {},
                    "Makefile": {},
                    "OutSJ.cpp": {},
                    "OutSJ.h": {},
                    "PackedArray.cpp": {},
                    "PackedArray.h": {},
                    "ParameterInfo.h": {},
                    "Parameters.cpp": {},
                    "Parameters.h": {},
                    "ParametersChimeric.h": {},
                    "ParametersGenome.h": {},
                    "Parameters_closeReadsFiles.cpp": {},
                    "Parameters_openReadsFiles.cpp": {},
                    "Parameters_readSAMheader.cpp": {},
                    "Quantifications.cpp": {},
                    "Quantifications.h": {},
                    "ReadAlign.cpp": {},
                    "ReadAlign.h": {},
                    "ReadAlignChunk.cpp": {},
                    "ReadAlignChunk.h": {},
                    "ReadAlignChunk_mapChunk.cpp": {},
                    "ReadAlignChunk_processChunks.cpp": {},
                    "ReadAlign_CIGAR.cpp": {},
                    "ReadAlign_alignBAM.cpp": {},
                    "ReadAlign_assignAlignToWindow.cpp": {},
                    "ReadAlign_calcCIGAR.cpp": {},
                    "ReadAlign_chimericDetection.cpp": {},
                    "ReadAlign_chimericDetectionOld.cpp": {},
                    "ReadAlign_chimericDetectionOldOutput.cpp": {},
                    "ReadAlign_chimericDetectionPEmerged.cpp": {},
                    "ReadAlign_createExtendWindowsWithAlign.cpp": {},
                    "ReadAlign_mapOneRead.cpp": {},
                    "ReadAlign_mappedFilter.cpp": {},
                    "ReadAlign_maxMappableLength2strands.cpp": {},
                    "ReadAlign_multMapSelect.cpp": {},
                    "ReadAlign_oneRead.cpp": {},
                    "ReadAlign_outputAlignments.cpp": {},
                    "ReadAlign_outputTranscriptCIGARp.cpp": {},
                    "ReadAlign_outputTranscriptSAM.cpp": {},
                    "ReadAlign_outputTranscriptSJ.cpp": {},
                    "ReadAlign_outputVariation.cpp": {},
                    "ReadAlign_peOverlapMergeMap.cpp": {},
                    "ReadAlign_quantTranscriptome.cpp": {},
                    "ReadAlign_stitchPieces.cpp": {},
                    "ReadAlign_stitchWindowSeeds.cpp": {},
                    "ReadAlign_storeAligns.cpp": {},
                    "ReadAlign_waspMap.cpp": {},
                    "STAR.cpp": {},
                    "SequenceFuns.cpp": {},
                    "SequenceFuns.h": {},
                    "SharedMemory.cpp": {},
                    "SharedMemory.h": {},
                    "SjdbClass.h": {},
                    "Stats.cpp": {},
                    "Stats.h": {},
                    "SuffixArrayFuns.cpp": {},
                    "SuffixArrayFuns.h": {},
                    "ThreadControl.cpp": {},
                    "ThreadControl.h": {},
                    "TimeFunctions.cpp": {},
                    "TimeFunctions.h": {},
                    "Transcript.cpp": {},
                    "Transcript.h": {},
                    "Transcript_alignScore.cpp": {},
                    "Transcript_generateCigarP.cpp": {},
                    "Transcript_variationAdjust.cpp": {},
                    "Transcript_variationOutput.cpp": {},
                    "Transcriptome.cpp": {},
                    "Transcriptome.h": {},
                    "Transcriptome_geneCountsAddAlign.cpp": {},
                    "Transcriptome_quantAlign.cpp": {},
                    "VERSION": {},
                    "Variation.cpp": {},
                    "Variation.h": {},
                    "alignSmithWaterman.cpp": {},
                    "alignSmithWaterman.h": {},
                    "bamRemoveDuplicates.cpp": {},
                    "bamRemoveDuplicates.h": {},
                    "bam_cat.c": {},
                    "bam_cat.h": {},
                    "binarySearch2.cpp": {},
                    "binarySearch2.h": {},
                    "blocksOverlap.cpp": {},
                    "blocksOverlap.h": {},
                    "extendAlign.cpp": {},
                    "extendAlign.h": {},
                    "funCompareUintAndSuffixes.cpp": {},
                    "funCompareUintAndSuffixes.h": {},
                    "funCompareUintAndSuffixesMemcmp.cpp": {},
                    "funCompareUintAndSuffixesMemcmp.h": {},
                    "genomeGenerate.h": {},
                    "genomeParametersWrite.cpp": {},
                    "genomeParametersWrite.h": {},
                    "genomeSAindex.cpp": {},
                    "genomeSAindex.h": {},
                    "genomeScanFastaFiles.cpp": {},
                    "genomeScanFastaFiles.h": {},
                    "htslib": {
                      ".gitignore": {},
                      ".travis.yml": {},
                      "Makefile": {},
                      "README.md": {},
                      "bgzf.c": {},
                      "bgzip.c": {},
                      "config.h": {},
                      "cram": {
                        "cram.h": {},
                        "cram_codecs.c": {},
                        "cram_codecs.h": {},
                        "cram_decode.c": {},
                        "cram_decode.h": {},
                        "cram_encode.c": {},
                        "cram_encode.h": {},
                        "cram_index.c": {},
                        "cram_index.h": {},
                        "cram_io.c": {},
                        "cram_io.h": {},
                        "cram_samtools.c": {},
                        "cram_samtools.h": {},
                        "cram_stats.c": {},
                        "cram_stats.h": {},
                        "cram_structs.h": {},
                        "files.c": {},
                        "mFILE.c": {},
                        "mFILE.h": {},
                        "md5.c": {},
                        "md5.h": {},
                        "misc.h": {},
                        "open_trace_file.c": {},
                        "open_trace_file.h": {},
                        "os.h": {},
                        "pooled_alloc.c": {},
                        "pooled_alloc.h": {},
                        "sam_header.c": {},
                        "sam_header.h": {},
                        "string_alloc.c": {},
                        "string_alloc.h": {},
                        "thread_pool.c": {},
                        "thread_pool.h": {},
                        "vlen.c": {},
                        "vlen.h": {},
                        "zfio.c": {},
                        "zfio.h": {}
                      },
                      "faidx.5": {},
                      "faidx.c": {},
                      "hfile.c": {},
                      "hfile_internal.h": {},
                      "hfile_net.c": {},
                      "hts.c": {},
                      "htslib.mk": {},
                      "htslib": {
                        "bgzf.h": {},
                        "faidx.h": {},
                        "hfile.h": {},
                        "hts.h": {},
                        "hts_defs.h": {},
                        "kfunc.h": {},
                        "khash.h": {},
                        "khash_str2int.h": {},
                        "klist.h": {},
                        "knetfile.h": {},
                        "kseq.h": {},
                        "ksort.h": {},
                        "kstdint.h": {},
                        "kstring.h": {},
                        "sam.h": {},
                        "synced_bcf_reader.h": {},
                        "tbx.h": {},
                        "vcf.h": {},
                        "vcf_sweep.h": {},
                        "vcfutils.h": {}
                      },
                      "htslib_vars.mk": {},
                      "kfunc.c": {},
                      "knetfile.c": {},
                      "kstring.c": {},
                      "sam.5": {},
                      "sam.c": {},
                      "synced_bcf_reader.c": {},
                      "tabix.1": {},
                      "tabix.c": {},
                      "tbx.c": {},
                      "vcf.5": {},
                      "vcf.c": {},
                      "vcf_sweep.c": {},
                      "vcfutils.c": {}
                    },
                    "insertSeqSA.cpp": {},
                    "insertSeqSA.h": {},
                    "loadGTF.cpp": {},
                    "loadGTF.h": {},
                    "mapThreadsSpawn.cpp": {},
                    "mapThreadsSpawn.h": {},
                    "outputSJ.cpp": {},
                    "outputSJ.h": {},
                    "parametersDefault": {},
                    "parametersDefault.xxd": {},
                    "readLoad.cpp": {},
                    "readLoad.h": {},
                    "serviceFuns.cpp": {},
                    "signalFromBAM.cpp": {},
                    "signalFromBAM.h": {},
                    "sjAlignSplit.cpp": {},
                    "sjdbBuildIndex.cpp": {},
                    "sjdbBuildIndex.h": {},
                    "sjdbInsertJunctions.cpp": {},
                    "sjdbInsertJunctions.h": {},
                    "sjdbLoadFromFiles.cpp": {},
                    "sjdbLoadFromFiles.h": {},
                    "sjdbLoadFromStream.cpp": {},
                    "sjdbLoadFromStream.h": {},
                    "sjdbPrepare.cpp": {},
                    "sjdbPrepare.h": {},
                    "sortSuffixesBucket.h": {},
                    "stitchAlignToTranscript.cpp": {},
                    "stitchAlignToTranscript.h": {},
                    "stitchGapIndel.cpp": {},
                    "stitchWindowAligns.cpp": {},
                    "stitchWindowAligns.h": {},
                    "streamFuns.cpp": {},
                    "streamFuns.h": {},
                    "stringSubstituteAll.cpp": {},
                    "stringSubstituteAll.h": {},
                    "sysRemoveDir.cpp": {},
                    "sysRemoveDir.h": {}
                  }
                },
                "build.sh": {},
                "debian": {
                  "build.sh": {}
                },
                "runstar.sh": {}
              },
              "icon": {
                "staralign.png": {}
              },
              "starAlign.attrs": {},
              "starAlign.json": {},
              "starAlign.py": {},
              "starAlign.states": {}
            }
          }
        }
      },
      "Toil": {
        "Toil.ows": {},
        "widgets": {
          "Toil": {
            "Edit_Files": {
              "Edit_Files.attrs": {},
              "Edit_Files.json": {},
              "Edit_Files.py": {},
              "Edit_Files.states": {},
              "icon": {
                "default.png": {}
              }
            },
            "Toil": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil.attrs": {},
              "Toil.json": {},
              "Toil.py": {},
              "Toil.states": {},
              "icon": {
                "python.png": {}
              }
            },
            "Toil_CWL": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil_CWL.attrs": {},
              "Toil_CWL.json": {},
              "Toil_CWL.py": {},
              "Toil_CWL.states": {},
              "icon": {
                "cwl.png": {}
              }
            },
            "Toil_WDL": {
              "Dockerfiles": {
                "Dockerfile": {}
              },
              "Toil_WDL.attrs": {},
              "Toil_WDL.json": {},
              "Toil_WDL.py": {},
              "Toil_WDL.states": {},
              "icon": {
                "wdl.png": {}
              }
            },
            "__init__.py": {},
            "icon": {
              "user.png": {}
            }
          }
        }
      },
      "cwl_examples": {
        "cgpwgs_cwl": {
          "cgpwgs.cwl": {},
          "cgpwgs.json": {}
        },
        "toil_rnaseq_cwl": {
          "cutadapt.cwl": {},
          "cutadapt.yaml": {},
          "fastqc.cwl": {},
          "fastqc.yaml": {},
          "hera.cwl": {},
          "hera.yaml": {},
          "kallisto.cwl": {},
          "kallisto.yaml": {},
          "rsem.cwl": {},
          "rsem.yaml": {},
          "star.cwl": {},
          "star.yaml": {},
          "toil.cwl": {},
          "toil.yaml": {}
        },
        "toil_rnaseq_wdl": {
          "toil.json": {},
          "toil.wdl": {}
        }
      },
      "docs": {
        "adjust_data.png": {},
        "load_workflow.png": {},
        "select_workflow.png": {},
        "toil_cwl_config.png": {},
        "toil_cwl_output.png": {},
        "toil_cwl_widget.png": {},
        "toil_panel.png": {},
        "toil_py_config.png": {},
        "toil_py_output.png": {},
        "toil_py_widget.png": {},
        "toil_wdl_config.png": {},
        "toil_wdl_output.png": {},
        "toil_wdl_widget.png": {},
        "volume_mapping.png": {}
      }
    }
  },
  "clij": {
    "build_docker_images.sh": {},
    "clij_usability_demo": {
      "clij_usability_demo.ows": {},
      "widgets": {
        "clij_usability_demo": {
          "S3_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "S3_download.attrs": {},
            "S3_download.json": {},
            "S3_download.py": {},
            "S3_download.states": {},
            "icon": {
              "downloadS3.png": {}
            }
          },
          "S3_upload": {
            "Dockerfiles": {
              "Dockerfile": {},
              "upload.sh": {}
            },
            "S3_upload.attrs": {},
            "S3_upload.json": {},
            "S3_upload.py": {},
            "S3_upload.states": {},
            "icon": {
              "cloud_upload.png": {}
            }
          },
          "__init__.py": {},
          "fijiOCL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "startfiji.sh": {}
            },
            "fijiOCL.attrs": {},
            "fijiOCL.json": {},
            "fijiOCL.py": {},
            "fijiOCL.states": {},
            "icon": {
              "fijiOCL.png": {}
            }
          },
          "icon": {
            "fijiOCL.png": {}
          }
        }
      }
    },
    "demo.groovy": {}
  },
  "file.txt": {},
  "files_to_json.py": {},
  "general": {
    ".keep": {},
    "ContainerProfiler": {
      "ContainerProfiler.ows": {},
      "widgets": {
        "ContainerProfiler": {
          "Widgets_image_viewer": {
            "Widgets_image_viewer.attrs": {},
            "Widgets_image_viewer.json": {},
            "Widgets_image_viewer.py": {},
            "Widgets_image_viewer.states": {},
            "icon": {
              "eog.png": {}
            }
          },
          "__init__.py": {},
          "cp_csv": {
            "cp_csv.attrs": {},
            "cp_csv.json": {},
            "cp_csv.py": {},
            "cp_csv.states": {},
            "icon": {
              "logo.png": {}
            }
          },
          "cp_delta": {
            "cp_delta.attrs": {},
            "cp_delta.json": {},
            "cp_delta.py": {},
            "cp_delta.states": {},
            "icon": {
              "logo.png": {}
            }
          },
          "cp_end": {
            "cp_end.attrs": {},
            "cp_end.json": {},
            "cp_end.py": {},
            "cp_end.states": {},
            "icon": {
              "logo.png": {}
            }
          },
          "cp_graph": {
            "cp_graph.attrs": {},
            "cp_graph.json": {},
            "cp_graph.py": {},
            "cp_graph.states": {},
            "icon": {
              "logo.png": {}
            }
          },
          "cp_profile": {
            "cp_profile.attrs": {},
            "cp_profile.json": {},
            "cp_profile.py": {},
            "cp_profile.states": {},
            "icon": {
              "logo.png": {}
            }
          },
          "cp_start": {
            "cp_start.attrs": {},
            "cp_start.json": {},
            "cp_start.py": {},
            "cp_start.states": {},
            "icon": {
              "logo.png": {}
            }
          },
          "icon": {
            "user.png": {}
          },
          "image_viewer": {
            "icon": {
              "eog.png": {}
            },
            "image_viewer.attrs": {},
            "image_viewer.json": {},
            "image_viewer.py": {},
            "image_viewer.states": {}
          },
          "toil_cwl": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "cwl.png": {}
            },
            "toil_cwl.attrs": {},
            "toil_cwl.json": {},
            "toil_cwl.py": {},
            "toil_cwl.states": {}
          }
        }
      }
    },
    "DICOM_Deidentification": {
      "DICOM_Deidentification.ows": {},
      "widgets": {
        "DICOM_Deidentification": {
          "__init__.py": {},
          "dicom_de_cb": {
            "Dockerfiles": {
              "Dockerfile": {},
              "dicom.py": {},
              "dicomde.sh": {},
              "fields.py": {},
              "list.csv": {},
              "list.json": {},
              "list.txt": {}
            },
            "dicom_de_cb.attrs": {},
            "dicom_de_cb.json": {},
            "dicom_de_cb.py": {},
            "dicom_de_cb.states": {},
            "icon": {
              "cloud_healthcare_api.png": {}
            }
          },
          "dicom_local_de": {
            "Dockerfiles": {
              "Dockerfile": {},
              "dicom.py": {},
              "dicomde.sh": {},
              "fields.py": {},
              "list.csv": {},
              "list.json": {},
              "list.txt": {}
            },
            "dicom_local_de.attrs": {},
            "dicom_local_de.json": {},
            "dicom_local_de.py": {},
            "dicom_local_de.states": {},
            "icon": {
              "dicom-logo.jpg": {}
            }
          },
          "dicom_uploader": {
            "Dockerfiles": {
              "Dockerfile": {},
              "dicomup.sh": {}
            },
            "dicom_uploader.attrs": {},
            "dicom_uploader.json": {},
            "dicom_uploader.py": {},
            "dicom_uploader.states": {},
            "icon": {
              "dicom-logo.jpg": {}
            }
          },
          "icon": {
            "NIH.png": {}
          },
          "idc_gcp": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "120px-NIH_Master_Logo_Vertical_2Color.png": {}
            },
            "idc_gcp.attrs": {},
            "idc_gcp.json": {},
            "idc_gcp.py": {},
            "idc_gcp.states": {}
          }
        }
      }
    },
    "GATK_workflows": {
      "GATK_workflows.ows": {},
      "README.md": {},
      "docs": {
        "gatk_cromwell.png": {},
        "gatk_cromwell2.png": {},
        "gatk_daloc.png": {},
        "gatk_geany.png": {},
        "gatk_github.png": {},
        "gatk_widgets.png": {}
      },
      "widgets": {
        "GATK_workflows": {
          "__init__.py": {},
          "cromwell": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "cromwell.attrs": {},
            "cromwell.json": {},
            "cromwell.py": {},
            "cromwell.states": {},
            "icon": {
              "cromwell.png": {}
            }
          },
          "daloc": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "daloc.attrs": {},
            "daloc.json": {},
            "daloc.py": {},
            "daloc.states": {},
            "icon": {
              "cloud-download.png": {}
            }
          },
          "firefox": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "firefox.attrs": {},
            "firefox.json": {},
            "firefox.py": {},
            "firefox.states": {},
            "icon": {
              "firefox-logo.png": {}
            }
          },
          "geany": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "geany.attrs": {},
            "geany.json": {},
            "geany.py": {},
            "geany.states": {},
            "icon": {
              "geany.png": {}
            }
          },
          "github": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "github.attrs": {},
            "github.json": {},
            "github.py": {},
            "github.states": {},
            "icon": {
              "github.png": {}
            }
          },
          "icon": {
            "cloud-download.png": {}
          },
          "start": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "351-3512491_start-icon-copy.png": {}
            },
            "start.attrs": {},
            "start.json": {},
            "start.py": {},
            "start.states": {}
          }
        }
      }
    },
    "idc_dicom_metadata_ws": {
      "idc_dicom_metadata_ws.ows": {},
      "widgets": {
        "idc_dicom_metadata_ws": {
          "__init__.py": {},
          "fiji": {
            "Dockerfiles": {
              "Dockerfile": {},
              "startfiji.sh": {}
            },
            "fiji.attrs": {},
            "fiji.json": {},
            "fiji.py": {},
            "fiji.states": {},
            "icon": {
              "fiji.png": {}
            }
          },
          "gcs_url_downloader": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "gcs_url_downloader.attrs": {},
            "gcs_url_downloader.json": {},
            "gcs_url_downloader.py": {},
            "gcs_url_downloader.states": {},
            "icon": {
              "cloud-download.png": {}
            }
          },
          "icon": {
            "NIH.png": {}
          },
          "idc_dcm_ws": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "NIH.png": {}
            },
            "idc_dcm_ws.attrs": {},
            "idc_dcm_ws.json": {},
            "idc_dcm_ws.py": {},
            "idc_dcm_ws.states": {}
          },
          "jupyter_base": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "jupyter_image.png": {}
            },
            "jupyter_base.attrs": {},
            "jupyter_base.json": {},
            "jupyter_base.py": {},
            "jupyter_base.states": {}
          },
          "start": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "icon": {
              "351-3512491_start-icon-copy.png": {}
            },
            "start.attrs": {},
            "start.json": {},
            "start.py": {},
            "start.states": {}
          }
        }
      }
    }
  },
  "images": {
    "image1.png": {},
    "image10.png": {},
    "image11.png": {},
    "image12.png": {},
    "image13.png": {},
    "image14.png": {},
    "image15.png": {},
    "image16.png": {},
    "image17.png": {},
    "image18.png": {},
    "image19.png": {},
    "image2.png": {},
    "image20.png": {},
    "image21.png": {},
    "image22.png": {},
    "image23.png": {},
    "image24.png": {},
    "image25.png": {},
    "image26.png": {},
    "image27.png": {},
    "image28.png": {},
    "image29.png": {},
    "image3.png": {},
    "image30.png": {},
    "image31.png": {},
    "image32.png": {},
    "image33.png": {},
    "image34.gif": {},
    "image35.png": {},
    "image36.png": {},
    "image37.png": {},
    "image38.png": {},
    "image4.png": {},
    "image5.png": {},
    "image6.png": {},
    "image7.png": {},
    "image8.png": {},
    "image9.png": {}
  },
  "nanopore": {
    "nanopore_guppy_aws": {
      "nanopore_guppy_aws.ows": {},
      "widgets": {
        "nanopore_guppy_aws": {
          "AWS_RNA_seq_UMI_lite_S3_download": {
            "AWS_RNA_seq_UMI_lite_S3_download.attrs": {},
            "AWS_RNA_seq_UMI_lite_S3_download.json": {},
            "AWS_RNA_seq_UMI_lite_S3_download.py": {},
            "AWS_RNA_seq_UMI_lite_S3_download.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "icon": {
              "downloadS3.png": {}
            }
          },
          "Longshot": {
            "Dockerfiles": {
              "longshot_dockerfile": {}
            },
            "Longshot.attrs": {},
            "Longshot.json": {},
            "Longshot.py": {},
            "Longshot.states": {},
            "icon": {
              "espresso.png": {}
            }
          },
          "S3_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "S3_download.attrs": {},
            "S3_download.json": {},
            "S3_download.py": {},
            "S3_download.states": {},
            "icon": {
              "downloadS3.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start.sh": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "bonito": {
            "bonito.attrs": {},
            "bonito.json": {},
            "bonito.py": {},
            "bonito.states": {},
            "icon": {
              "bonito.png": {}
            }
          },
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "gcloud_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "gcloud_download.attrs": {},
            "gcloud_download.json": {},
            "gcloud_download.py": {},
            "gcloud_download.states": {},
            "icon": {
              "gcloud_download.png": {}
            }
          },
          "guppy": {
            "guppy.attrs": {},
            "guppy.json": {},
            "guppy.py": {},
            "guppy.states": {},
            "icon": {
              "guppy1.png": {}
            }
          },
          "guppySetup": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile-gpu": {},
              "guppySetup.sh": {},
              "runGuppy.sh": {}
            },
            "guppySetup.attrs": {},
            "guppySetup.json": {},
            "guppySetup.py": {},
            "guppySetup.states": {},
            "icon": {
              "guppy_build..png": {}
            }
          },
          "icon": {
            "nanopore0.png": {}
          },
          "igv": {
            "Dockerfiles": {
              "Dockerfile": {},
              "start-igv.sh": {}
            },
            "icon": {
              "igv.png": {}
            },
            "igv.attrs": {},
            "igv.json": {},
            "igv.py": {},
            "igv.states": {}
          },
          "minimap2_index": {
            "Dockerfiles": {
              "Dockerfile": {},
              "runIndex.sh": {}
            },
            "icon": {
              "minimap2.png": {}
            },
            "minimap2_index.attrs": {},
            "minimap2_index.json": {},
            "minimap2_index.py": {},
            "minimap2_index.states": {}
          },
          "minimap2_samtools": {
            "Dockerfiles": {
              "Dockerfile": {},
              "runMiniMap2.sh": {}
            },
            "icon": {
              "minimap2.png": {}
            },
            "minimap2_samtools.attrs": {},
            "minimap2_samtools.json": {},
            "minimap2_samtools.py": {},
            "minimap2_samtools.states": {}
          }
        }
      }
    }
  },
  "serverless": {
    "AWS_RNA_seq_UMI": {
      "AWS_RNA_seq_UMI.ows": {},
      "widgets": {
        "AWS_RNA_seq_UMI": {
          "Align": {
            "Align.attrs": {},
            "Align.json": {},
            "Align.py": {},
            "Align.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "__pycache__": {
                "invokeAWS.cpython-39.pyc": {},
                "setupAWS.cpython-39.pyc": {}
              },
              "invokeAWS.py": {},
              "setupAWS.py": {}
            },
            "icon": {
              "lambda_function.png": {}
            }
          },
          "Cleanup": {
            "Cleanup.attrs": {},
            "Cleanup.json": {},
            "Cleanup.py": {},
            "Cleanup.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "cleanup_lambda.sh": {}
            },
            "icon": {
              "Recycling_symbol2.svg.png": {}
            }
          },
          "Create_S3": {
            "Create_S3.attrs": {},
            "Create_S3.json": {},
            "Create_S3.py": {},
            "Create_S3.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "create.sh": {}
            },
            "icon": {
              "addS3.png": {}
            }
          },
          "Deploy_function": {
            "Deploy_function.attrs": {},
            "Deploy_function.json": {},
            "Deploy_function.py": {},
            "Deploy_function.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "deploy.py": {}
            },
            "icon": {
              "file.png": {},
              "lambda_function.png": {}
            }
          },
          "DtoxSAnalysis": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Programs": {
                "Compare-Molecule-Expression.R": {},
                "Extract-Gene-Expression-Samples.R": {},
                "Setup-DEG-Env.sh": {},
                "Setup-DEM-Env.sh": {},
                "Setup-DEP-Env.sh": {},
                "adaptReadCountsDatasets.R": {},
                "calcDivClustOfGeneExpSamples.R": {},
                "calcExpressionDifference.R": {},
                "calcInvExp10ofDecimal.R": {},
                "cbindTable.R": {},
                "clusterGeneExpSamples.R": {},
                "compareGeneExpDiff.R": {},
                "compareGeneExpDiffs.R": {},
                "compareMoleculeExpression.R": {},
                "convertExperimentDesignTable.R": {},
                "convertReadCountsFileName.R": {},
                "cpb.DGEList.R": {},
                "cpb.R": {},
                "cpb.default.R": {},
                "createDGEList.R": {},
                "extractGeneExpSamples.R": {},
                "filterGeneExpSamples.R": {},
                "format_decimal.R": {},
                "generateColorGradient.R": {},
                "generateDrugGroupTable.R": {},
                "generateExperimentDesignTable.R": {},
                "generateRainbowHeatColors.R": {},
                "getCutoff.R": {},
                "initializeParameters.R": {},
                "lappend.R": {},
                "mergeReadCountsDatasets.R": {},
                "mergeReadCountsDatasetsRData.R": {},
                "plotDivClustOfGeneExpSamples.R": {},
                "plotHeatMapOfDrugGeneProperty.R": {},
                "plotHeatMapOfGeneExpDistance.R": {},
                "readReadCountsDatasets.R": {},
                "recordGeneExpDiff.R": {},
                "recordGeneExpDiffs.R": {},
                "selectGeneExpSamples.R": {},
                "sortTableRows.R": {},
                "sumDEGCounts.R": {},
                "sumExperimentDesign.R": {},
                "swapSeriesAndTypeInFileName.R": {}
              },
              "Scripts": {
                "processGeneHiSeqReadCountsDatasets20150409.R": {}
              },
              "runAnalysis.sh": {}
            },
            "DtoxSAnalysis.attrs": {},
            "DtoxSAnalysis.json": {},
            "DtoxSAnalysis.py": {},
            "DtoxSAnalysis.states": {},
            "icon": {
              "dtoxs-analysis2.svg": {}
            }
          },
          "Merge": {
            "Dockerfiles": {
              ".Dockerfile.build.swp": {},
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "merge_filter.cpp": {},
                "merge_parallel.cpp": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "split_pe.cpp": {},
                "split_se.cpp": {},
                "umimerge_filter.cpp": {},
                "umimerge_parallel.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "start.sh": {}
            },
            "Merge.attrs": {},
            "Merge.json": {},
            "Merge.py": {},
            "Merge.states": {},
            "icon": {
              "umimerge.png": {}
            }
          },
          "S3_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "S3_download.attrs": {},
            "S3_download.json": {},
            "S3_download.py": {},
            "S3_download.states": {},
            "icon": {
              "downloadS3.png": {}
            }
          },
          "S3_upload": {
            "Dockerfiles": {
              "Dockerfile": {},
              "upload.sh": {}
            },
            "S3_upload.attrs": {},
            "S3_upload.json": {},
            "S3_upload.py": {},
            "S3_upload.states": {},
            "icon": {
              "cloud_upload.png": {}
            }
          },
          "SplitUpload": {
            "Dockerfiles": {
              "96": {
                "split_pe": {},
                "split_se": {},
                "umimerge_filter": {},
                "umimerge_parallel": {},
                "umisplit": {}
              },
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "runUploadSplitFiles.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "merge_filter.cpp": {},
                "merge_parallel.cpp": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "split_pe.cpp": {},
                "split_se.cpp": {},
                "umimerge_filter.cpp": {},
                "umimerge_parallel.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "umisplit_awsupload.sh": {},
              "uploadSplitFiles.sh": {}
            },
            "SplitUpload.attrs": {},
            "SplitUpload.json": {},
            "SplitUpload.py": {},
            "SplitUpload.states": {},
            "icon": {
              "umisplit.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {},
              "version": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "icon": {
            "Half-Life_lambda_logo.svg": {}
          }
        }
      }
    },
    "AWS_RNA_seq_UMI_kallisto": {
      "AWS_RNA_seq_UMI_kallisto.ows": {},
      "widgets": {
        "AWS_RNA_seq_UMI_kallisto": {
          "Align": {
            "Align.attrs": {},
            "Align.json": {},
            "Align.py": {},
            "Align.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "__pycache__": {
                "invokeAWS.cpython-39.pyc": {},
                "setupAWS.cpython-39.pyc": {}
              },
              "invokeAWS.py": {},
              "setupAWS.py": {}
            },
            "icon": {
              "lambda_function.png": {}
            }
          },
          "Cleanup": {
            "Cleanup.attrs": {},
            "Cleanup.json": {},
            "Cleanup.py": {},
            "Cleanup.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "cleanup_lambda.sh": {}
            },
            "icon": {
              "Recycling_symbol2.svg.png": {}
            }
          },
          "Create_S3": {
            "Create_S3.attrs": {},
            "Create_S3.json": {},
            "Create_S3.py": {},
            "Create_S3.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "create.sh": {}
            },
            "icon": {
              "addS3.png": {}
            }
          },
          "Deploy_function": {
            "Deploy_function.attrs": {},
            "Deploy_function.json": {},
            "Deploy_function.py": {},
            "Deploy_function.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "deploy.py": {}
            },
            "icon": {
              "file.png": {},
              "lambda_function.png": {}
            }
          },
          "DtoxSAnalysis": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Programs": {
                "Compare-Molecule-Expression.R": {},
                "Extract-Gene-Expression-Samples.R": {},
                "Setup-DEG-Env.sh": {},
                "Setup-DEM-Env.sh": {},
                "Setup-DEP-Env.sh": {},
                "adaptReadCountsDatasets.R": {},
                "calcDivClustOfGeneExpSamples.R": {},
                "calcExpressionDifference.R": {},
                "calcInvExp10ofDecimal.R": {},
                "cbindTable.R": {},
                "clusterGeneExpSamples.R": {},
                "compareGeneExpDiff.R": {},
                "compareGeneExpDiffs.R": {},
                "compareMoleculeExpression.R": {},
                "convertExperimentDesignTable.R": {},
                "convertReadCountsFileName.R": {},
                "cpb.DGEList.R": {},
                "cpb.R": {},
                "cpb.default.R": {},
                "createDGEList.R": {},
                "extractGeneExpSamples.R": {},
                "filterGeneExpSamples.R": {},
                "format_decimal.R": {},
                "generateColorGradient.R": {},
                "generateDrugGroupTable.R": {},
                "generateExperimentDesignTable.R": {},
                "generateRainbowHeatColors.R": {},
                "getCutoff.R": {},
                "initializeParameters.R": {},
                "lappend.R": {},
                "mergeReadCountsDatasets.R": {},
                "mergeReadCountsDatasetsRData.R": {},
                "plotDivClustOfGeneExpSamples.R": {},
                "plotHeatMapOfDrugGeneProperty.R": {},
                "plotHeatMapOfGeneExpDistance.R": {},
                "readReadCountsDatasets.R": {},
                "recordGeneExpDiff.R": {},
                "recordGeneExpDiffs.R": {},
                "selectGeneExpSamples.R": {},
                "sortTableRows.R": {},
                "sumDEGCounts.R": {},
                "sumExperimentDesign.R": {},
                "swapSeriesAndTypeInFileName.R": {}
              },
              "Scripts": {
                "processGeneHiSeqReadCountsDatasets20150409.R": {}
              },
              "runAnalysis.sh": {}
            },
            "DtoxSAnalysis.attrs": {},
            "DtoxSAnalysis.json": {},
            "DtoxSAnalysis.py": {},
            "DtoxSAnalysis.states": {},
            "icon": {
              "dtoxs-analysis2.svg": {}
            }
          },
          "Merge": {
            "Dockerfiles": {
              ".Dockerfile.build.swp": {},
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "merge_filter.cpp": {},
                "merge_parallel.cpp": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "split_pe.cpp": {},
                "split_se.cpp": {},
                "umimerge_filter.cpp": {},
                "umimerge_parallel.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "start.sh": {}
            },
            "Merge.attrs": {},
            "Merge.json": {},
            "Merge.py": {},
            "Merge.states": {},
            "icon": {
              "umimerge.png": {}
            }
          },
          "S3_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "S3_download.attrs": {},
            "S3_download.json": {},
            "S3_download.py": {},
            "S3_download.states": {},
            "icon": {
              "downloadS3.png": {}
            }
          },
          "S3_upload": {
            "Dockerfiles": {
              "Dockerfile": {},
              "upload.sh": {}
            },
            "S3_upload.attrs": {},
            "S3_upload.json": {},
            "S3_upload.py": {},
            "S3_upload.states": {},
            "icon": {
              "cloud_upload.png": {}
            }
          },
          "SplitUpload": {
            "Dockerfiles": {
              "96": {
                "split_pe": {},
                "split_se": {},
                "umimerge_filter": {},
                "umimerge_parallel": {},
                "umisplit": {}
              },
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "runUploadSplitFiles.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "merge_filter.cpp": {},
                "merge_parallel.cpp": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "split_pe.cpp": {},
                "split_se.cpp": {},
                "umimerge_filter.cpp": {},
                "umimerge_parallel.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "umisplit_awsupload.sh": {},
              "uploadSplitFiles.sh": {}
            },
            "SplitUpload.attrs": {},
            "SplitUpload.json": {},
            "SplitUpload.py": {},
            "SplitUpload.states": {},
            "icon": {
              "umisplit.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {},
              "version": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "icon": {
            "Half-Life_lambda_logo.svg": {}
          }
        }
      }
    },
    "AWS_RNA_seq_UMI_lite": {
      "AWS_RNA_seq_UMI_lite.ows": {},
      "widgets": {
        "AWS_RNA_seq_UMI_lite": {
          "Align": {
            "Align.attrs": {},
            "Align.json": {},
            "Align.py": {},
            "Align.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "__pycache__": {
                "invokeAWS.cpython-39.pyc": {},
                "setupAWS.cpython-39.pyc": {}
              },
              "invokeAWS.py": {},
              "setupAWS.py": {}
            },
            "icon": {
              "lambda_function.png": {}
            }
          },
          "Cleanup": {
            "Cleanup.attrs": {},
            "Cleanup.json": {},
            "Cleanup.py": {},
            "Cleanup.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "cleanup_lambda.sh": {}
            },
            "icon": {
              "Recycling_symbol2.svg.png": {}
            }
          },
          "Create_S3": {
            "Create_S3.attrs": {},
            "Create_S3.json": {},
            "Create_S3.py": {},
            "Create_S3.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "create.sh": {}
            },
            "icon": {
              "addS3.png": {}
            }
          },
          "Deploy_function": {
            "Deploy_function.attrs": {},
            "Deploy_function.json": {},
            "Deploy_function.py": {},
            "Deploy_function.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "deploy.py": {}
            },
            "icon": {
              "file.png": {},
              "lambda_function.png": {}
            }
          },
          "DtoxSAnalysis": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Programs": {
                "Compare-Molecule-Expression.R": {},
                "Extract-Gene-Expression-Samples.R": {},
                "Setup-DEG-Env.sh": {},
                "Setup-DEM-Env.sh": {},
                "Setup-DEP-Env.sh": {},
                "adaptReadCountsDatasets.R": {},
                "calcDivClustOfGeneExpSamples.R": {},
                "calcExpressionDifference.R": {},
                "calcInvExp10ofDecimal.R": {},
                "cbindTable.R": {},
                "clusterGeneExpSamples.R": {},
                "compareGeneExpDiff.R": {},
                "compareGeneExpDiffs.R": {},
                "compareMoleculeExpression.R": {},
                "convertExperimentDesignTable.R": {},
                "convertReadCountsFileName.R": {},
                "cpb.DGEList.R": {},
                "cpb.R": {},
                "cpb.default.R": {},
                "createDGEList.R": {},
                "extractGeneExpSamples.R": {},
                "filterGeneExpSamples.R": {},
                "format_decimal.R": {},
                "generateColorGradient.R": {},
                "generateDrugGroupTable.R": {},
                "generateExperimentDesignTable.R": {},
                "generateRainbowHeatColors.R": {},
                "getCutoff.R": {},
                "initializeParameters.R": {},
                "lappend.R": {},
                "mergeReadCountsDatasets.R": {},
                "mergeReadCountsDatasetsRData.R": {},
                "plotDivClustOfGeneExpSamples.R": {},
                "plotHeatMapOfDrugGeneProperty.R": {},
                "plotHeatMapOfGeneExpDistance.R": {},
                "readReadCountsDatasets.R": {},
                "recordGeneExpDiff.R": {},
                "recordGeneExpDiffs.R": {},
                "selectGeneExpSamples.R": {},
                "sortTableRows.R": {},
                "sumDEGCounts.R": {},
                "sumExperimentDesign.R": {},
                "swapSeriesAndTypeInFileName.R": {}
              },
              "Scripts": {
                "processGeneHiSeqReadCountsDatasets20150409.R": {}
              },
              "runAnalysis.sh": {}
            },
            "DtoxSAnalysis.attrs": {},
            "DtoxSAnalysis.json": {},
            "DtoxSAnalysis.py": {},
            "DtoxSAnalysis.states": {},
            "icon": {
              "dtoxs-analysis2.svg": {}
            }
          },
          "Merge": {
            "Dockerfiles": {
              ".Dockerfile.build.swp": {},
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "merge_filter.cpp": {},
                "merge_parallel.cpp": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "split_pe.cpp": {},
                "split_se.cpp": {},
                "umimerge_filter.cpp": {},
                "umimerge_parallel.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "start.sh": {}
            },
            "Merge.attrs": {},
            "Merge.json": {},
            "Merge.py": {},
            "Merge.states": {},
            "icon": {
              "umimerge.png": {}
            }
          },
          "S3_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "S3_download.attrs": {},
            "S3_download.json": {},
            "S3_download.py": {},
            "S3_download.states": {},
            "icon": {
              "downloadS3.png": {}
            }
          },
          "S3_upload": {
            "Dockerfiles": {
              "Dockerfile": {},
              "upload.sh": {}
            },
            "S3_upload.attrs": {},
            "S3_upload.json": {},
            "S3_upload.py": {},
            "S3_upload.states": {},
            "icon": {
              "cloud_upload.png": {}
            }
          },
          "SplitUpload": {
            "Dockerfiles": {
              "96": {
                "split_pe": {},
                "split_se": {},
                "umimerge_filter": {},
                "umimerge_parallel": {},
                "umisplit": {}
              },
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "runUploadSplitFiles.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "merge_filter.cpp": {},
                "merge_parallel.cpp": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "split_pe.cpp": {},
                "split_se.cpp": {},
                "umimerge_filter.cpp": {},
                "umimerge_parallel.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "umisplit_awsupload.sh": {},
              "uploadSplitFiles.sh": {}
            },
            "SplitUpload.attrs": {},
            "SplitUpload.json": {},
            "SplitUpload.py": {},
            "SplitUpload.states": {},
            "icon": {
              "umisplit.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "downloadURL": {
            "Dockerfiles": {
              "Dockerfile": {},
              "README.md": {},
              "download.sh": {},
              "version": {}
            },
            "downloadURL.attrs": {},
            "downloadURL.json": {},
            "downloadURL.py": {},
            "downloadURL.states": {},
            "icon": {
              "download.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "icon": {
            "Half-Life_lambda_logo.svg": {}
          }
        }
      }
    },
    "GCP_RNA_seq_UMI": {
      "GCP_RNA_seq_UMI.ows": {},
      "widgets": {
        "GCP_RNA_seq_UMI": {
          "Align": {
            "Align.attrs": {},
            "Align.json": {},
            "Align.py": {},
            "Align.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "invokeGoogle.py": {},
              "invokeGoogle.pyc": {},
              "setupGoogle.py": {},
              "setupGoogle.pyc": {}
            },
            "icon": {
              "google_function.png": {}
            }
          },
          "Cleanup": {
            "Cleanup.attrs": {},
            "Cleanup.json": {},
            "Cleanup.py": {},
            "Cleanup.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "gcp_cleanup.sh": {}
            },
            "icon": {
              "Recycling_symbol2.svg.png": {}
            }
          },
          "Create_gbucket": {
            "Create_gbucket.attrs": {},
            "Create_gbucket.json": {},
            "Create_gbucket.py": {},
            "Create_gbucket.states": {},
            "Dockerfiles": {
              "Dockerfile": {},
              "create.py": {}
            },
            "icon": {
              "google_add.png": {}
            }
          },
          "DtoxSAnalysis": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Programs": {
                "Compare-Molecule-Expression.R": {},
                "Extract-Gene-Expression-Samples.R": {},
                "Setup-DEG-Env.sh": {},
                "Setup-DEM-Env.sh": {},
                "Setup-DEP-Env.sh": {},
                "adaptReadCountsDatasets.R": {},
                "calcDivClustOfGeneExpSamples.R": {},
                "calcExpressionDifference.R": {},
                "calcInvExp10ofDecimal.R": {},
                "cbindTable.R": {},
                "clusterGeneExpSamples.R": {},
                "compareGeneExpDiff.R": {},
                "compareGeneExpDiffs.R": {},
                "compareMoleculeExpression.R": {},
                "convertExperimentDesignTable.R": {},
                "convertReadCountsFileName.R": {},
                "cpb.DGEList.R": {},
                "cpb.R": {},
                "cpb.default.R": {},
                "createDGEList.R": {},
                "extractGeneExpSamples.R": {},
                "filterGeneExpSamples.R": {},
                "format_decimal.R": {},
                "generateColorGradient.R": {},
                "generateDrugGroupTable.R": {},
                "generateExperimentDesignTable.R": {},
                "generateRainbowHeatColors.R": {},
                "getCutoff.R": {},
                "initializeParameters.R": {},
                "lappend.R": {},
                "mergeReadCountsDatasets.R": {},
                "mergeReadCountsDatasetsRData.R": {},
                "plotDivClustOfGeneExpSamples.R": {},
                "plotHeatMapOfDrugGeneProperty.R": {},
                "plotHeatMapOfGeneExpDistance.R": {},
                "readReadCountsDatasets.R": {},
                "recordGeneExpDiff.R": {},
                "recordGeneExpDiffs.R": {},
                "selectGeneExpSamples.R": {},
                "sortTableRows.R": {},
                "sumDEGCounts.R": {},
                "sumExperimentDesign.R": {},
                "swapSeriesAndTypeInFileName.R": {}
              },
              "Scripts": {
                "processGeneHiSeqReadCountsDatasets20150409.R": {}
              },
              "runAnalysis.sh": {}
            },
            "DtoxSAnalysis.attrs": {},
            "DtoxSAnalysis.json": {},
            "DtoxSAnalysis.py": {},
            "DtoxSAnalysis.states": {},
            "icon": {
              "dtoxs-analysis2.svg": {}
            }
          },
          "Merge": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "umimerge_filter.cpp": {},
                "umimerge_filter.hpp": {},
                "umimerge_parallel.cpp": {},
                "umimerge_parallel_async.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "start.sh": {}
            },
            "Merge.attrs": {},
            "Merge.json": {},
            "Merge.py": {},
            "Merge.states": {},
            "icon": {
              "umimerge.png": {}
            }
          },
          "S3_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "S3_download.attrs": {},
            "S3_download.json": {},
            "S3_download.py": {},
            "S3_download.states": {},
            "icon": {
              "downloadS3.png": {}
            }
          },
          "SplitUpload": {
            "Dockerfiles": {
              "Dockerfile": {},
              "Dockerfile.build": {},
              "build.sh": {},
              "runUploadSplitFiles.sh": {},
              "source": {
                "Makefile": {},
                "kseq.h": {},
                "optparse": {
                  "Makefile": {},
                  "main": {},
                  "main.c": {},
                  "optparse.c": {},
                  "optparse.h": {}
                },
                "umimerge_filter.cpp": {},
                "umimerge_filter.hpp": {},
                "umimerge_parallel.cpp": {},
                "umimerge_parallel_async.cpp": {},
                "umisplit.cpp": {},
                "umitools.hpp": {}
              },
              "umisplit_gcpupload.sh": {},
              "uploadSplitFiles.sh": {},
              "w384": {
                "umimerge_filter": {},
                "umimerge_parallel": {},
                "umisplit": {}
              },
              "w96": {
                "umimerge_filter": {},
                "umimerge_parallel": {},
                "umisplit": {}
              }
            },
            "SplitUpload.attrs": {},
            "SplitUpload.json": {},
            "SplitUpload.py": {},
            "SplitUpload.states": {},
            "icon": {
              "umisplit.png": {}
            }
          },
          "Start": {
            "Dockerfiles": {
              "Dockerfile": {}
            },
            "Start.attrs": {},
            "Start.json": {},
            "Start.py": {},
            "Start.states": {},
            "icon": {
              "start.png": {}
            }
          },
          "__init__.py": {},
          "gcloud_download": {
            "Dockerfiles": {
              "Dockerfile": {},
              "download.sh": {}
            },
            "gcloud_download.attrs": {},
            "gcloud_download.json": {},
            "gcloud_download.py": {},
            "gcloud_download.states": {},
            "icon": {
              "gcloud_download.png": {}
            }
          },
          "gcloud_upload": {
            "Dockerfiles": {
              "Dockerfile": {},
              "upload.sh": {}
            },
            "gcloud_upload.attrs": {},
            "gcloud_upload.json": {},
            "gcloud_upload.py": {},
            "gcloud_upload.states": {},
            "icon": {
              "gcloud_upload.png": {}
            }
          },
          "gcpdeploy": {
            "Dockerfiles": {
              "Dockerfile": {},
              "deploy_function.sh": {}
            },
            "gcpdeploy.attrs": {},
            "gcpdeploy.json": {},
            "gcpdeploy.py": {},
            "gcpdeploy.states": {},
            "icon": {
              "google_function_deploy.png": {}
            }
          },
          "gnumeric": {
            "Dockerfiles": {
              "Dockerfile": {},
              "docker_xnoshm.c": {}
            },
            "gnumeric.attrs": {},
            "gnumeric.json": {},
            "gnumeric.py": {},
            "gnumeric.states": {},
            "icon": {
              "gnumeric.png": {}
            }
          },
          "icon": {
            "google_function.png": {}
          }
        }
      }
    },
    "README.md": {}
  },
  "tree_structure.json": {}
}
